////////////////////////////////////////////////////////////////////////
//
// CMSD.cpp
//
// This file was generated by XMLSpy 2011r3sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////


#include "StdAfx.h"
#include <string.h>
#include "CMSD.h"
#include <algorithm>


using namespace altova;



// turn off warning: "this" used in base initializer list
#pragma warning(disable:4355)


namespace CMSD
{


MSXML2::IXMLDOMNodePtr TypeBase::GetElementNth(const altova::MemberInfo* member, unsigned index)
{
	for (MsxmlTreeOperations::MemberIterator it = MsxmlTreeOperations::GetElements(m_node, member); it; ++it)
	{
		if (index-- == 0)
			return *it;
	}
	return 0;
}

MSXML2::IXMLDOMNodePtr TypeBase::GetElementLast(const altova::MemberInfo* member)
{
	MSXML2::IXMLDOMNodePtr p;
	for (MsxmlTreeOperations::MemberIterator it = MsxmlTreeOperations::GetElements(m_node, member); it; ++it)
	{
		p = *it;
	}
	return p;
}

unsigned TypeBase::CountElement(const altova::MemberInfo* member)
{
	unsigned count = 0;
	for (MsxmlTreeOperations::MemberIterator it = MsxmlTreeOperations::GetElements(m_node, member); it; ++it)
	{
		++count;
	}
	return count;
}

void TypeBase::RemoveElement(const altova::MemberInfo* member)
{
	MsxmlTreeOperations::RemoveElements(m_node, member);
}

int TypeBase::GetEnumerationIndex( const string_type sValue, const unsigned enumOffset, const unsigned enumCount)
{
	unsigned enumIndex = enumOffset;

	while( enumIndex < (enumOffset + enumCount) )
	{
		const FacetInfo* facet = GetTableEntry(facets, enumIndex);

		if( facet->StringValue == sValue)
			return enumIndex - enumOffset;
		enumIndex++;
	}
	return -1; //Invalid
}

string_type TypeBase::GetEnumerationValue( const int index, const unsigned enumOffset, const unsigned enumCount)
{
	unsigned enumIndex = enumOffset + index;

	if( enumIndex >= enumOffset && enumIndex < (enumOffset + enumCount) )
	{
		const FacetInfo* facet = GetTableEntry(facets, enumIndex);
		return facet->StringValue;
	}
	else
		throw altova::ConversionException( _T("Enumeration index out of range.") );
}


CAbstractEntityReference::CAbstractEntityReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CReferencingEntity(node)
, DocumentIdentifier(*this)	// "DocumentIdentifier"
{
}

CAbstractEntityReference::CAbstractEntityReference(CAbstractEntityReference const& other)
: ::CMSD::CReferencingEntity(other.GetNode())
, DocumentIdentifier(*this)	// "DocumentIdentifier"
{
}

void CAbstractEntityReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AbstractEntityReference"), _T(""));
}

CAddress::CAddress(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CCommunicationMethod(node)
, OrganizationName(*this)	// "OrganizationName"
, Street(*this)	// "Street"
, PostOfficeBox(*this)	// "PostOfficeBox"
, AdditionalInformation(*this)	// "AdditionalInformation"
, City(*this)	// "City"
, State(*this)	// "State"
, Country(*this)	// "Country"
, PostalCode(*this)	// "PostalCode"
{
}

CAddress::CAddress(CAddress const& other)
: ::CMSD::CCommunicationMethod(other.GetNode())
, OrganizationName(*this)	// "OrganizationName"
, Street(*this)	// "Street"
, PostOfficeBox(*this)	// "PostOfficeBox"
, AdditionalInformation(*this)	// "AdditionalInformation"
, City(*this)	// "City"
, State(*this)	// "State"
, Country(*this)	// "Country"
, PostalCode(*this)	// "PostalCode"
{
}

void CAddress::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Address"), _T(""));
}

CAreaType::CAreaType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CAreaType::CAreaType(CAreaType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CAreaType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AreaType"), _T(""));
}

CAreaUnit::CAreaUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CAreaUnit::CAreaUnit(CAreaUnit const& other)
: TypeBase(other.GetNode())
{
}


CArrayOfChoice1::CArrayOfChoice1(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, Rotation(*this)	// "Rotation"
, Scaling(*this)	// "Scaling"
, Translation(*this)	// "Translation"
{
}

CArrayOfChoice1::CArrayOfChoice1(CArrayOfChoice1 const& other)
: TypeBase(other.GetNode())
, Rotation(*this)	// "Rotation"
, Scaling(*this)	// "Scaling"
, Translation(*this)	// "Translation"
{
}

void CArrayOfChoice1::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArrayOfChoice1"), _T(""));
}

CArrayOfChoice2::CArrayOfChoice2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, Rotation(*this)	// "Rotation"
, Scaling(*this)	// "Scaling"
, Translation(*this)	// "Translation"
{
}

CArrayOfChoice2::CArrayOfChoice2(CArrayOfChoice2 const& other)
: TypeBase(other.GetNode())
, Rotation(*this)	// "Rotation"
, Scaling(*this)	// "Scaling"
, Translation(*this)	// "Translation"
{
}

void CArrayOfChoice2::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArrayOfChoice2"), _T(""));
}

CArrayOfTransformationOperation::CArrayOfTransformationOperation(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, TransformationOperation(*this)	// "TransformationOperation"
{
}

CArrayOfTransformationOperation::CArrayOfTransformationOperation(CArrayOfTransformationOperation const& other)
: TypeBase(other.GetNode())
, TransformationOperation(*this)	// "TransformationOperation"
{
}

void CArrayOfTransformationOperation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ArrayOfTransformationOperation"), _T(""));
}

CAvailabilityException::CAvailabilityException(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, ExceptionDate(*this)	// "ExceptionDate"
, Description(*this)	// "Description"
{
}

CAvailabilityException::CAvailabilityException(CAvailabilityException const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, ExceptionDate(*this)	// "ExceptionDate"
, Description(*this)	// "Description"
{
}

void CAvailabilityException::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AvailabilityException"), _T(""));
}

CBaseLocation::CBaseLocation(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CBaseLocation::CBaseLocation(CBaseLocation const& other)
: TypeBase(other.GetNode())
{
}


CBasicShape::CBasicShape(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Type(*this)	// "Type"
, Height(*this)	// "Height"
, Color(*this)	// "Color"
, Label(*this)	// "Label"
, Width(*this)	// "Width"
, Depth(*this)	// "Depth"
, Radius(*this)	// "Radius"
, Angle(*this)	// "Angle"
, Center(*this)	// "Center"
, Point(*this)	// "Point"
{
}

CBasicShape::CBasicShape(CBasicShape const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Type(*this)	// "Type"
, Height(*this)	// "Height"
, Color(*this)	// "Color"
, Label(*this)	// "Label"
, Width(*this)	// "Width"
, Depth(*this)	// "Depth"
, Radius(*this)	// "Radius"
, Angle(*this)	// "Angle"
, Center(*this)	// "Center"
, Point(*this)	// "Point"
{
}

void CBasicShape::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BasicShape"), _T(""));
}

CBasicShapeType::CBasicShapeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CBasicShapeType::CBasicShapeType(CBasicShapeType const& other)
: TypeBase(other.GetNode())
{
}


CBillOfMaterials::CBillOfMaterials(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Name(*this)	// "Name"
, PartType(*this)	// "PartType"
, PartInstance(*this)	// "PartInstance"
, MainComponent(*this)	// "MainComponent"
, BillOfMaterialsComponent(*this)	// "BillOfMaterialsComponent"
{
}

CBillOfMaterials::CBillOfMaterials(CBillOfMaterials const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
, PartType(*this)	// "PartType"
, PartInstance(*this)	// "PartInstance"
, MainComponent(*this)	// "MainComponent"
, BillOfMaterialsComponent(*this)	// "BillOfMaterialsComponent"
{
}

void CBillOfMaterials::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BillOfMaterials"), _T(""));
}

CBillOfMaterialsComponent::CBillOfMaterialsComponent(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, Quantity(*this)	// "Quantity"
, PartType(*this)	// "PartType"
, PartInstance(*this)	// "PartInstance"
, SubComponent(*this)	// "SubComponent"
{
}

CBillOfMaterialsComponent::CBillOfMaterialsComponent(CBillOfMaterialsComponent const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, Quantity(*this)	// "Quantity"
, PartType(*this)	// "PartType"
, PartInstance(*this)	// "PartInstance"
, SubComponent(*this)	// "SubComponent"
{
}

void CBillOfMaterialsComponent::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BillOfMaterialsComponent"), _T(""));
}

CBillOfMaterialsComponentReference::CBillOfMaterialsComponentReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, BillOfMaterialsIdentifier(*this)	// "BillOfMaterialsIdentifier"
, BillOfMaterialsComponentIdentifier(*this)	// "BillOfMaterialsComponentIdentifier"
{
}

CBillOfMaterialsComponentReference::CBillOfMaterialsComponentReference(CBillOfMaterialsComponentReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, BillOfMaterialsIdentifier(*this)	// "BillOfMaterialsIdentifier"
, BillOfMaterialsComponentIdentifier(*this)	// "BillOfMaterialsComponentIdentifier"
{
}

void CBillOfMaterialsComponentReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BillOfMaterialsComponentReference"), _T(""));
}

CBillOfMaterialsReference::CBillOfMaterialsReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, BillOfMaterialsIdentifier(*this)	// "BillOfMaterialsIdentifier"
{
}

CBillOfMaterialsReference::CBillOfMaterialsReference(CBillOfMaterialsReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, BillOfMaterialsIdentifier(*this)	// "BillOfMaterialsIdentifier"
{
}

void CBillOfMaterialsReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BillOfMaterialsReference"), _T(""));
}

CBoundaryDefinition::CBoundaryDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CSpatialDimension(node)
, Unit(*this)	// "Unit"
, CoordinateSystem(*this)	// "CoordinateSystem"
{
}

CBoundaryDefinition::CBoundaryDefinition(CBoundaryDefinition const& other)
: ::CMSD::CSpatialDimension(other.GetNode())
, Unit(*this)	// "Unit"
, CoordinateSystem(*this)	// "CoordinateSystem"
{
}

void CBoundaryDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BoundaryDefinition"), _T(""));
}

CBreak::CBreak(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Description(*this)	// "Description"
, StartTime(*this)	// "StartTime"
, Duration(*this)	// "Duration"
{
}

CBreak::CBreak(CBreak const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Description(*this)	// "Description"
, StartTime(*this)	// "StartTime"
, Duration(*this)	// "Duration"
{
}

void CBreak::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Break"), _T(""));
}

CCMSDDocument::CCMSDDocument(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, HeaderSection(*this)	// "HeaderSection"
, DataSection(*this)	// "DataSection"
{
}

CCMSDDocument::CCMSDDocument(CCMSDDocument const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, HeaderSection(*this)	// "HeaderSection"
, DataSection(*this)	// "DataSection"
{
}

void CCMSDDocument::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CMSDDocument"), _T(""));
}

CCMSDDocumentReference::CCMSDDocumentReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, LocalDocumentIdentifier(*this)	// "LocalDocumentIdentifier"
, DocumentLocation(*this)	// "DocumentLocation"
, Description(*this)	// "Description"
{
}

CCMSDDocumentReference::CCMSDDocumentReference(CCMSDDocumentReference const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, LocalDocumentIdentifier(*this)	// "LocalDocumentIdentifier"
, DocumentLocation(*this)	// "DocumentLocation"
, Description(*this)	// "Description"
{
}

void CCMSDDocumentReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CMSDDocumentReference"), _T(""));
}

CCMSDDocumentTest::CCMSDDocumentTest(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCMSDDocumentTest::CCMSDDocumentTest(CCMSDDocumentTest const& other)
: TypeBase(other.GetNode())
{
}

void CCMSDDocumentTest::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CMSDDocumentTest"), _T(""));
}

CCalendar::CCalendar(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, EffectiveStartDate(*this)	// "EffectiveStartDate"
, EffectiveEndDate(*this)	// "EffectiveEndDate"
, Holiday(*this)	// "Holiday"
, Shift(*this)	// "Shift"
, ShiftSchedule(*this)	// "ShiftSchedule"
{
}

CCalendar::CCalendar(CCalendar const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, EffectiveStartDate(*this)	// "EffectiveStartDate"
, EffectiveEndDate(*this)	// "EffectiveEndDate"
, Holiday(*this)	// "Holiday"
, Shift(*this)	// "Shift"
, ShiftSchedule(*this)	// "ShiftSchedule"
{
}

void CCalendar::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Calendar"), _T(""));
}

CCalendarReference::CCalendarReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, CalendarIdentifier(*this)	// "CalendarIdentifier"
, ShiftScheduleIdentifier(*this)	// "ShiftScheduleIdentifier"
, ShiftIdentifier(*this)	// "ShiftIdentifier"
, HolidayIdentifier(*this)	// "HolidayIdentifier"
{
}

CCalendarReference::CCalendarReference(CCalendarReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, CalendarIdentifier(*this)	// "CalendarIdentifier"
, ShiftScheduleIdentifier(*this)	// "ShiftScheduleIdentifier"
, ShiftIdentifier(*this)	// "ShiftIdentifier"
, HolidayIdentifier(*this)	// "HolidayIdentifier"
{
}

void CCalendarReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CalendarReference"), _T(""));
}

CColorHighlight::CColorHighlight(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, LineColor(*this)	// "LineColor"
, FillColor(*this)	// "FillColor"
, AlphaValue(*this)	// "AlphaValue"
, Property(*this)	// "Property"
{
}

CColorHighlight::CColorHighlight(CColorHighlight const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, LineColor(*this)	// "LineColor"
, FillColor(*this)	// "FillColor"
, AlphaValue(*this)	// "AlphaValue"
, Property(*this)	// "Property"
{
}

void CColorHighlight::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ColorHighlight"), _T(""));
}

CCommunicationMethod::CCommunicationMethod(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Description(*this)	// "Description"
{
}

CCommunicationMethod::CCommunicationMethod(CCommunicationMethod const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Description(*this)	// "Description"
{
}

void CCommunicationMethod::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CommunicationMethod"), _T(""));
}

CCommunicationMethodGroup::CCommunicationMethodGroup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Address(*this)	// "Address"
, Phone(*this)	// "Phone"
, Email(*this)	// "Email"
{
}

CCommunicationMethodGroup::CCommunicationMethodGroup(CCommunicationMethodGroup const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Address(*this)	// "Address"
, Phone(*this)	// "Phone"
, Email(*this)	// "Email"
{
}

void CCommunicationMethodGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CommunicationMethodGroup"), _T(""));
}

CConnection::CConnection(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, FromResource(*this)	// "FromResource"
, ToResource(*this)	// "ToResource"
{
}

CConnection::CConnection(CConnection const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, FromResource(*this)	// "FromResource"
, ToResource(*this)	// "ToResource"
{
}

void CConnection::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Connection"), _T(""));
}

CConnectionType::CConnectionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CConnectionType::CConnectionType(CConnectionType const& other)
: TypeBase(other.GetNode())
{
}


CContactInformation::CContactInformation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CCommunicationMethodGroup(node)
, ContactParty(*this)	// "ContactParty"
{
}

CContactInformation::CContactInformation(CContactInformation const& other)
: ::CMSD::CCommunicationMethodGroup(other.GetNode())
, ContactParty(*this)	// "ContactParty"
{
}

void CContactInformation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ContactInformation"), _T(""));
}

CContactParty::CContactParty(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CCommunicationMethodGroup(node)
, PersonName(*this)	// "PersonName"
, OrganizationName(*this)	// "OrganizationName"
{
}

CContactParty::CContactParty(CContactParty const& other)
: ::CMSD::CCommunicationMethodGroup(other.GetNode())
, PersonName(*this)	// "PersonName"
, OrganizationName(*this)	// "OrganizationName"
{
}

void CContactParty::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ContactParty"), _T(""));
}

CCoordinate2D::CCoordinate2D(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, X(*this)	// "X"
, Y(*this)	// "Y"
{
}

CCoordinate2D::CCoordinate2D(CCoordinate2D const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, X(*this)	// "X"
, Y(*this)	// "Y"
{
}

void CCoordinate2D::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Coordinate2D"), _T(""));
}

CCoordinate3D::CCoordinate3D(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CCoordinate2D(node)
, Z(*this)	// "Z"
{
}

CCoordinate3D::CCoordinate3D(CCoordinate3D const& other)
: ::CMSD::CCoordinate2D(other.GetNode())
, Z(*this)	// "Z"
{
}

void CCoordinate3D::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Coordinate3D"), _T(""));
}

CCoordinateSystem::CCoordinateSystem(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCoordinateSystem::CCoordinateSystem(CCoordinateSystem const& other)
: TypeBase(other.GetNode())
{
}


CCostAllocationData::CCostAllocationData(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, CostCategory(*this)	// "CostCategory"
, CostType(*this)	// "CostType"
, CostName(*this)	// "CostName"
, CostDescription(*this)	// "CostDescription"
, TotalCost(*this)	// "TotalCost"
, Property(*this)	// "Property"
, VariableCostData(*this)	// "VariableCostData"
{
}

CCostAllocationData::CCostAllocationData(CCostAllocationData const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, CostCategory(*this)	// "CostCategory"
, CostType(*this)	// "CostType"
, CostName(*this)	// "CostName"
, CostDescription(*this)	// "CostDescription"
, TotalCost(*this)	// "TotalCost"
, Property(*this)	// "Property"
, VariableCostData(*this)	// "VariableCostData"
{
}

void CCostAllocationData::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CostAllocationData"), _T(""));
}

CCostCategory::CCostCategory(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCostCategory::CCostCategory(CCostCategory const& other)
: TypeBase(other.GetNode())
{
}


CCostType::CCostType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCostType::CCostType(CCostType const& other)
: TypeBase(other.GetNode())
{
}


CCurrencyType::CCurrencyType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CCurrencyType::CCurrencyType(CCurrencyType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CCurrencyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CurrencyType"), _T(""));
}

CDay::CDay(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CDay::CDay(CDay const& other)
: TypeBase(other.GetNode())
{
}


CDistribution::CDistribution(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, DistributionParameter(*this)	// "DistributionParameter"
{
}

CDistribution::CDistribution(CDistribution const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, DistributionParameter(*this)	// "DistributionParameter"
{
}

void CDistribution::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Distribution"), _T(""));
}

CDistributionDefinition::CDistributionDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Distribution(*this)	// "Distribution"
{
}

CDistributionDefinition::CDistributionDefinition(CDistributionDefinition const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Distribution(*this)	// "Distribution"
{
}

void CDistributionDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DistributionDefinition"), _T(""));
}

CDistributionDefinitionReference::CDistributionDefinitionReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, DistributionDefinitionIdentifier(*this)	// "DistributionDefinitionIdentifier"
{
}

CDistributionDefinitionReference::CDistributionDefinitionReference(CDistributionDefinitionReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, DistributionDefinitionIdentifier(*this)	// "DistributionDefinitionIdentifier"
{
}

void CDistributionDefinitionReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DistributionDefinitionReference"), _T(""));
}

CDistributionParameter::CDistributionParameter(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Value2(*this)	// "Value"
{
}

CDistributionParameter::CDistributionParameter(CDistributionParameter const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Value2(*this)	// "Value"
{
}

void CDistributionParameter::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("DistributionParameter"), _T(""));
}

CDuration::CDuration(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
, Distribution(*this)	// "Distribution"
, DistributionReference(*this)	// "DistributionReference"
{
}

CDuration::CDuration(CDuration const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
, Distribution(*this)	// "Distribution"
, DistributionReference(*this)	// "DistributionReference"
{
}

void CDuration::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Duration"), _T(""));
}

CElapsedTimeType::CElapsedTimeType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CElapsedTimeType::CElapsedTimeType(CElapsedTimeType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CElapsedTimeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ElapsedTimeType"), _T(""));
}

CEmail::CEmail(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CCommunicationMethod(node)
, Address(*this)	// "Address"
{
}

CEmail::CEmail(CEmail const& other)
: ::CMSD::CCommunicationMethod(other.GetNode())
, Address(*this)	// "Address"
{
}

void CEmail::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Email"), _T(""));
}

CEntity::CEntity(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
{
}

CEntity::CEntity(CEntity const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
{
}

void CEntity::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Entity"), _T(""));
}

CEvent::CEvent(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, SequenceNumber(*this)	// "SequenceNumber"
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Timestamp(*this)	// "Timestamp"
, Property(*this)	// "Property"
{
}

CEvent::CEvent(CEvent const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, SequenceNumber(*this)	// "SequenceNumber"
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Timestamp(*this)	// "Timestamp"
, Property(*this)	// "Property"
{
}

void CEvent::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Event"), _T(""));
}

CGraphicDescription::CGraphicDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, GraphicType(*this)	// "GraphicType"
, FileName(*this)	// "FileName"
, FileType(*this)	// "FileType"
, Transformations(*this)	// "Transformations"
, Property(*this)	// "Property"
, ImageResolution(*this)	// "ImageResolution"
, ImageDimension(*this)	// "ImageDimension"
, ModelUnit(*this)	// "ModelUnit"
, ModelDimension(*this)	// "ModelDimension"
{
}

CGraphicDescription::CGraphicDescription(CGraphicDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, GraphicType(*this)	// "GraphicType"
, FileName(*this)	// "FileName"
, FileType(*this)	// "FileType"
, Transformations(*this)	// "Transformations"
, Property(*this)	// "Property"
, ImageResolution(*this)	// "ImageResolution"
, ImageDimension(*this)	// "ImageDimension"
, ModelUnit(*this)	// "ModelUnit"
, ModelDimension(*this)	// "ModelDimension"
{
}

void CGraphicDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GraphicDescription"), _T(""));
}

CGraphicDescriptionType::CGraphicDescriptionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CGraphicDescriptionType::CGraphicDescriptionType(CGraphicDescriptionType const& other)
: TypeBase(other.GetNode())
{
}


CGrossDimensions::CGrossDimensions(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Width(*this)	// "Width"
, Depth(*this)	// "Depth"
, Height(*this)	// "Height"
{
}

CGrossDimensions::CGrossDimensions(CGrossDimensions const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Width(*this)	// "Width"
, Depth(*this)	// "Depth"
, Height(*this)	// "Height"
{
}

void CGrossDimensions::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GrossDimensions"), _T(""));
}

CHeaderSection::CHeaderSection(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, DocumentIdentifier(*this)	// "DocumentIdentifier"
, Description(*this)	// "Description"
, Version(*this)	// "Version"
, CreationTime(*this)	// "CreationTime"
, Metadata(*this)	// "Metadata"
, CMSDDocumentReference(*this)	// "CMSDDocumentReference"
, UnitDefaults(*this)	// "UnitDefaults"
{
}

CHeaderSection::CHeaderSection(CHeaderSection const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, DocumentIdentifier(*this)	// "DocumentIdentifier"
, Description(*this)	// "Description"
, Version(*this)	// "Version"
, CreationTime(*this)	// "CreationTime"
, Metadata(*this)	// "Metadata"
, CMSDDocumentReference(*this)	// "CMSDDocumentReference"
, UnitDefaults(*this)	// "UnitDefaults"
{
}

void CHeaderSection::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("HeaderSection"), _T(""));
}

CHoliday::CHoliday(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, Date(*this)	// "Date"
{
}

CHoliday::CHoliday(CHoliday const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, Date(*this)	// "Date"
{
}

void CHoliday::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Holiday"), _T(""));
}

CIdentifiableEntity::CIdentifiableEntity(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CEntity(node)
, Identifier(*this)	// "Identifier"
, Description(*this)	// "Description"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
, Property(*this)	// "Property"
{
}

CIdentifiableEntity::CIdentifiableEntity(CIdentifiableEntity const& other)
: ::CMSD::CEntity(other.GetNode())
, Identifier(*this)	// "Identifier"
, Description(*this)	// "Description"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
, Property(*this)	// "Property"
{
}

void CIdentifiableEntity::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("IdentifiableEntity"), _T(""));
}

CImageResolution::CImageResolution(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PixelsPerUnit(*this)	// "PixelsPerUnit"
, ScreenUnit(*this)	// "ScreenUnit"
{
}

CImageResolution::CImageResolution(CImageResolution const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PixelsPerUnit(*this)	// "PixelsPerUnit"
, ScreenUnit(*this)	// "ScreenUnit"
{
}

void CImageResolution::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ImageResolution"), _T(""));
}

CInventoryItem::CInventoryItem(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Name(*this)	// "Name"
, InventoryItemClass(*this)	// "InventoryItemClass"
, QuantityOnHand(*this)	// "QuantityOnHand"
, Location(*this)	// "Location"
, AssociatedPart(*this)	// "AssociatedPart"
, AssociatedResource(*this)	// "AssociatedResource"
{
}

CInventoryItem::CInventoryItem(CInventoryItem const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
, InventoryItemClass(*this)	// "InventoryItemClass"
, QuantityOnHand(*this)	// "QuantityOnHand"
, Location(*this)	// "Location"
, AssociatedPart(*this)	// "AssociatedPart"
, AssociatedResource(*this)	// "AssociatedResource"
{
}

void CInventoryItem::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InventoryItem"), _T(""));
}

CInventoryItemClass::CInventoryItemClass(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Name(*this)	// "Name"
, InventoryItemType(*this)	// "InventoryItemType"
, PartType(*this)	// "PartType"
, ResourceClass(*this)	// "ResourceClass"
{
}

CInventoryItemClass::CInventoryItemClass(CInventoryItemClass const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
, InventoryItemType(*this)	// "InventoryItemType"
, PartType(*this)	// "PartType"
, ResourceClass(*this)	// "ResourceClass"
{
}

void CInventoryItemClass::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InventoryItemClass"), _T(""));
}

CInventoryItemClassReference::CInventoryItemClassReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, InventoryItemClassIdentifier(*this)	// "InventoryItemClassIdentifier"
{
}

CInventoryItemClassReference::CInventoryItemClassReference(CInventoryItemClassReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, InventoryItemClassIdentifier(*this)	// "InventoryItemClassIdentifier"
{
}

void CInventoryItemClassReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InventoryItemClassReference"), _T(""));
}

CInventoryItemReference::CInventoryItemReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, InventoryItemIdentifier(*this)	// "InventoryItemIdentifier"
{
}

CInventoryItemReference::CInventoryItemReference(CInventoryItemReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, InventoryItemIdentifier(*this)	// "InventoryItemIdentifier"
{
}

void CInventoryItemReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InventoryItemReference"), _T(""));
}

CInventoryItemType::CInventoryItemType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CInventoryItemType::CInventoryItemType(CInventoryItemType const& other)
: TypeBase(other.GetNode())
{
}


CItemPackaging::CItemPackaging(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PackageName(*this)	// "PackageName"
, PackageDescription(*this)	// "PackageDescription"
, PerPiecePackaging(*this)	// "PerPiecePackaging"
, PerMeasuredAmountPackaging(*this)	// "PerMeasuredAmountPackaging"
{
}

CItemPackaging::CItemPackaging(CItemPackaging const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PackageName(*this)	// "PackageName"
, PackageDescription(*this)	// "PackageDescription"
, PerPiecePackaging(*this)	// "PerPiecePackaging"
, PerMeasuredAmountPackaging(*this)	// "PerMeasuredAmountPackaging"
{
}

void CItemPackaging::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ItemPackaging"), _T(""));
}

CJob::CJob(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Status(*this)	// "Status"
, UpdateTime(*this)	// "UpdateTime"
, RequestingParty(*this)	// "RequestingParty"
, PerformingParty(*this)	// "PerformingParty"
, AssociatedOrder(*this)	// "AssociatedOrder"
, Priority(*this)	// "Priority"
, PrecedenceConstraint(*this)	// "PrecedenceConstraint"
, SubJob(*this)	// "SubJob"
, PlannedEffort(*this)	// "PlannedEffort"
, ActualEffort(*this)	// "ActualEffort"
{
}

CJob::CJob(CJob const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Status(*this)	// "Status"
, UpdateTime(*this)	// "UpdateTime"
, RequestingParty(*this)	// "RequestingParty"
, PerformingParty(*this)	// "PerformingParty"
, AssociatedOrder(*this)	// "AssociatedOrder"
, Priority(*this)	// "Priority"
, PrecedenceConstraint(*this)	// "PrecedenceConstraint"
, SubJob(*this)	// "SubJob"
, PlannedEffort(*this)	// "PlannedEffort"
, ActualEffort(*this)	// "ActualEffort"
{
}

void CJob::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Job"), _T(""));
}

CJobConstraint::CJobConstraint(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CPrecedenceConstraint(node)
, PredecessorJob(*this)	// "PredecessorJob"
, SuccessorJob(*this)	// "SuccessorJob"
{
}

CJobConstraint::CJobConstraint(CJobConstraint const& other)
: ::CMSD::CPrecedenceConstraint(other.GetNode())
, PredecessorJob(*this)	// "PredecessorJob"
, SuccessorJob(*this)	// "SuccessorJob"
{
}

void CJobConstraint::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("JobConstraint"), _T(""));
}

CJobEffortDescription::CJobEffortDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, UpdateTime(*this)	// "UpdateTime"
, PartsProduced(*this)	// "PartsProduced"
, PartsConsumed(*this)	// "PartsConsumed"
, ResourcesRequired(*this)	// "ResourcesRequired"
, DueDate(*this)	// "DueDate"
, ReleaseDate(*this)	// "ReleaseDate"
, StartTime(*this)	// "StartTime"
, EndTime(*this)	// "EndTime"
, SetupTime(*this)	// "SetupTime"
, ProcessingTime(*this)	// "ProcessingTime"
, ProcessPlan(*this)	// "ProcessPlan"
, CurrentProcessPlanStep(*this)	// "CurrentProcessPlanStep"
, MaintenancePlan(*this)	// "MaintenancePlan"
, CurrentMaintenancePlanStep(*this)	// "CurrentMaintenancePlanStep"
, CostAllocationData(*this)	// "CostAllocationData"
, Note(*this)	// "Note"
, Event(*this)	// "Event"
, Property(*this)	// "Property"
{
}

CJobEffortDescription::CJobEffortDescription(CJobEffortDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, UpdateTime(*this)	// "UpdateTime"
, PartsProduced(*this)	// "PartsProduced"
, PartsConsumed(*this)	// "PartsConsumed"
, ResourcesRequired(*this)	// "ResourcesRequired"
, DueDate(*this)	// "DueDate"
, ReleaseDate(*this)	// "ReleaseDate"
, StartTime(*this)	// "StartTime"
, EndTime(*this)	// "EndTime"
, SetupTime(*this)	// "SetupTime"
, ProcessingTime(*this)	// "ProcessingTime"
, ProcessPlan(*this)	// "ProcessPlan"
, CurrentProcessPlanStep(*this)	// "CurrentProcessPlanStep"
, MaintenancePlan(*this)	// "MaintenancePlan"
, CurrentMaintenancePlanStep(*this)	// "CurrentMaintenancePlanStep"
, CostAllocationData(*this)	// "CostAllocationData"
, Note(*this)	// "Note"
, Event(*this)	// "Event"
, Property(*this)	// "Property"
{
}

void CJobEffortDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("JobEffortDescription"), _T(""));
}

CJobReference::CJobReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, JobIdentifier(*this)	// "JobIdentifier"
{
}

CJobReference::CJobReference(CJobReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, JobIdentifier(*this)	// "JobIdentifier"
{
}

void CJobReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("JobReference"), _T(""));
}

CJobStatus::CJobStatus(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CJobStatus::CJobStatus(CJobStatus const& other)
: TypeBase(other.GetNode())
{
}


CLayout::CLayout(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLayoutElement(node)
, Placement(*this)	// "Placement"
{
}

CLayout::CLayout(CLayout const& other)
: ::CMSD::CLayoutElement(other.GetNode())
, Placement(*this)	// "Placement"
{
}

void CLayout::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Layout"), _T(""));
}

CLayoutElement::CLayoutElement(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Name(*this)	// "Name"
, AssociatedResource(*this)	// "AssociatedResource"
, Boundary(*this)	// "Boundary"
{
}

CLayoutElement::CLayoutElement(CLayoutElement const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
, AssociatedResource(*this)	// "AssociatedResource"
, Boundary(*this)	// "Boundary"
{
}

void CLayoutElement::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LayoutElement"), _T(""));
}

CLayoutElementReference::CLayoutElementReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, LayoutElementIdentifier(*this)	// "LayoutElementIdentifier"
{
}

CLayoutElementReference::CLayoutElementReference(CLayoutElementReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, LayoutElementIdentifier(*this)	// "LayoutElementIdentifier"
{
}

void CLayoutElementReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LayoutElementReference"), _T(""));
}

CLayoutLengthUnit::CLayoutLengthUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CLayoutLengthUnit::CLayoutLengthUnit(CLayoutLengthUnit const& other)
: TypeBase(other.GetNode())
{
}


CLayoutObject::CLayoutObject(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLayoutElement(node)
, Type(*this)	// "Type"
, Shape(*this)	// "Shape"
{
}

CLayoutObject::CLayoutObject(CLayoutObject const& other)
: ::CMSD::CLayoutElement(other.GetNode())
, Type(*this)	// "Type"
, Shape(*this)	// "Shape"
{
}

void CLayoutObject::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LayoutObject"), _T(""));
}

CLengthType::CLengthType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CLengthType::CLengthType(CLengthType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CLengthType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LengthType"), _T(""));
}

CLengthUnit::CLengthUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CLengthUnit::CLengthUnit(CLengthUnit const& other)
: TypeBase(other.GetNode())
{
}


CLimitedUniqueEntity::CLimitedUniqueEntity(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CIdentifiableEntity(node)
{
}

CLimitedUniqueEntity::CLimitedUniqueEntity(CLimitedUniqueEntity const& other)
: ::CMSD::CIdentifiableEntity(other.GetNode())
{
}

void CLimitedUniqueEntity::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LimitedUniqueEntity"), _T(""));
}

CLocationDefinition::CLocationDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, FacilityLocation(*this)	// "FacilityLocation"
, WithinFacilityLocation(*this)	// "WithinFacilityLocation"
, ResourceLocation(*this)	// "ResourceLocation"
{
}

CLocationDefinition::CLocationDefinition(CLocationDefinition const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, FacilityLocation(*this)	// "FacilityLocation"
, WithinFacilityLocation(*this)	// "WithinFacilityLocation"
, ResourceLocation(*this)	// "ResourceLocation"
{
}

void CLocationDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LocationDefinition"), _T(""));
}

CLotInformation::CLotInformation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, LotNumber(*this)	// "LotNumber"
, ParentLotNumber(*this)	// "ParentLotNumber"
, Description(*this)	// "Description"
{
}

CLotInformation::CLotInformation(CLotInformation const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, LotNumber(*this)	// "LotNumber"
, ParentLotNumber(*this)	// "ParentLotNumber"
, Description(*this)	// "Description"
{
}

void CLotInformation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LotInformation"), _T(""));
}

CMachineProgramData::CMachineProgramData(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, MachineProgramName(*this)	// "MachineProgramName"
, TargetMachine(*this)	// "TargetMachine"
, MachineProgramLocation(*this)	// "MachineProgramLocation"
{
}

CMachineProgramData::CMachineProgramData(CMachineProgramData const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, MachineProgramName(*this)	// "MachineProgramName"
, TargetMachine(*this)	// "TargetMachine"
, MachineProgramLocation(*this)	// "MachineProgramLocation"
{
}

void CMachineProgramData::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MachineProgramData"), _T(""));
}

CMaintenancePlan::CMaintenancePlan(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, MaintainedResource(*this)	// "MaintainedResource"
, Periodicity(*this)	// "Periodicity"
, CostAllocationData(*this)	// "CostAllocationData"
, FirstProcess(*this)	// "FirstProcess"
, MaintenanceProcess(*this)	// "MaintenanceProcess"
{
}

CMaintenancePlan::CMaintenancePlan(CMaintenancePlan const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, MaintainedResource(*this)	// "MaintainedResource"
, Periodicity(*this)	// "Periodicity"
, CostAllocationData(*this)	// "CostAllocationData"
, FirstProcess(*this)	// "FirstProcess"
, MaintenanceProcess(*this)	// "MaintenanceProcess"
{
}

void CMaintenancePlan::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MaintenancePlan"), _T(""));
}

CMaintenancePlanReference::CMaintenancePlanReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, MaintenancePlanIdentifier(*this)	// "MaintenancePlanIdentifier"
{
}

CMaintenancePlanReference::CMaintenancePlanReference(CMaintenancePlanReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, MaintenancePlanIdentifier(*this)	// "MaintenancePlanIdentifier"
{
}

void CMaintenancePlanReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MaintenancePlanReference"), _T(""));
}

CMaintenanceProcess::CMaintenanceProcess(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, ResourcesRequired(*this)	// "ResourcesRequired"
, PartsConsumed(*this)	// "PartsConsumed"
, SetupTime(*this)	// "SetupTime"
, OperationTime(*this)	// "OperationTime"
, RepetitionCount(*this)	// "RepetitionCount"
, CostAllocationData(*this)	// "CostAllocationData"
, SpecialInstruction(*this)	// "SpecialInstruction"
, ProcessConstraint(*this)	// "ProcessConstraint"
, SubProcessGroup(*this)	// "SubProcessGroup"
{
}

CMaintenanceProcess::CMaintenanceProcess(CMaintenanceProcess const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, ResourcesRequired(*this)	// "ResourcesRequired"
, PartsConsumed(*this)	// "PartsConsumed"
, SetupTime(*this)	// "SetupTime"
, OperationTime(*this)	// "OperationTime"
, RepetitionCount(*this)	// "RepetitionCount"
, CostAllocationData(*this)	// "CostAllocationData"
, SpecialInstruction(*this)	// "SpecialInstruction"
, ProcessConstraint(*this)	// "ProcessConstraint"
, SubProcessGroup(*this)	// "SubProcessGroup"
{
}

void CMaintenanceProcess::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MaintenanceProcess"), _T(""));
}

CMaintenanceProcessConstraint::CMaintenanceProcessConstraint(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CPrecedenceConstraint(node)
, PredecessorProcess(*this)	// "PredecessorProcess"
, SuccessorProcess(*this)	// "SuccessorProcess"
{
}

CMaintenanceProcessConstraint::CMaintenanceProcessConstraint(CMaintenanceProcessConstraint const& other)
: ::CMSD::CPrecedenceConstraint(other.GetNode())
, PredecessorProcess(*this)	// "PredecessorProcess"
, SuccessorProcess(*this)	// "SuccessorProcess"
{
}

void CMaintenanceProcessConstraint::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MaintenanceProcessConstraint"), _T(""));
}

CMaintenanceProcessGroup::CMaintenanceProcessGroup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Type(*this)	// "Type"
, DecisionText(*this)	// "DecisionText"
, Process(*this)	// "Process"
, ProcessConstraint(*this)	// "ProcessConstraint"
{
}

CMaintenanceProcessGroup::CMaintenanceProcessGroup(CMaintenanceProcessGroup const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Type(*this)	// "Type"
, DecisionText(*this)	// "DecisionText"
, Process(*this)	// "Process"
, ProcessConstraint(*this)	// "ProcessConstraint"
{
}

void CMaintenanceProcessGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MaintenanceProcessGroup"), _T(""));
}

CMaintenanceProcessReference::CMaintenanceProcessReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, MaintenancePlanIdentifier(*this)	// "MaintenancePlanIdentifier"
, MaintenanceProcessIdentifier(*this)	// "MaintenanceProcessIdentifier"
{
}

CMaintenanceProcessReference::CMaintenanceProcessReference(CMaintenanceProcessReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, MaintenancePlanIdentifier(*this)	// "MaintenancePlanIdentifier"
, MaintenanceProcessIdentifier(*this)	// "MaintenanceProcessIdentifier"
{
}

void CMaintenanceProcessReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MaintenanceProcessReference"), _T(""));
}

CMetadata::CMetadata(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PropertyDescription(*this)	// "PropertyDescription"
{
}

CMetadata::CMetadata(CMetadata const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PropertyDescription(*this)	// "PropertyDescription"
{
}

void CMetadata::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Metadata"), _T(""));
}

CMultiSchemaCMSDValidator::CMultiSchemaCMSDValidator(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, ValidateUsingSchematron(*this)	// "ValidateUsingSchematron"
, ValidateUsingRelaxNG(*this)	// "ValidateUsingRelaxNG"
, ValidateUsingXSD(*this)	// "ValidateUsingXSD"
{
}

CMultiSchemaCMSDValidator::CMultiSchemaCMSDValidator(CMultiSchemaCMSDValidator const& other)
: TypeBase(other.GetNode())
, ValidateUsingSchematron(*this)	// "ValidateUsingSchematron"
, ValidateUsingRelaxNG(*this)	// "ValidateUsingRelaxNG"
, ValidateUsingXSD(*this)	// "ValidateUsingXSD"
{
}

void CMultiSchemaCMSDValidator::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("MultiSchemaCMSDValidator"), _T(""));
}

CNewSetup::CNewSetup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CSetupDefinitionReference(node)
, ChangeoverTime(*this)	// "ChangeoverTime"
{
}

CNewSetup::CNewSetup(CNewSetup const& other)
: ::CMSD::CSetupDefinitionReference(other.GetNode())
, ChangeoverTime(*this)	// "ChangeoverTime"
{
}

void CNewSetup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NewSetup"), _T(""));
}

CNotifyPropertyChangeBase::CNotifyPropertyChangeBase(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNotifyPropertyChangeBase::CNotifyPropertyChangeBase(CNotifyPropertyChangeBase const& other)
: TypeBase(other.GetNode())
{
}

void CNotifyPropertyChangeBase::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("NotifyPropertyChangeBase"), _T(""));
}

COrder::COrder(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Status(*this)	// "Status"
, UpdateTime(*this)	// "UpdateTime"
, CustomerParty(*this)	// "CustomerParty"
, SupplierParty(*this)	// "SupplierParty"
, SpecialInstruction(*this)	// "SpecialInstruction"
, TotalPrice(*this)	// "TotalPrice"
, DueDate(*this)	// "DueDate"
, Priority(*this)	// "Priority"
, OrderLine(*this)	// "OrderLine"
{
}

COrder::COrder(COrder const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Status(*this)	// "Status"
, UpdateTime(*this)	// "UpdateTime"
, CustomerParty(*this)	// "CustomerParty"
, SupplierParty(*this)	// "SupplierParty"
, SpecialInstruction(*this)	// "SpecialInstruction"
, TotalPrice(*this)	// "TotalPrice"
, DueDate(*this)	// "DueDate"
, Priority(*this)	// "Priority"
, OrderLine(*this)	// "OrderLine"
{
}

void COrder::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Order"), _T(""));
}

COrderInformationReference::COrderInformationReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, OrderIdentifier(*this)	// "OrderIdentifier"
, OrderLineIdentifier(*this)	// "OrderLineIdentifier"
{
}

COrderInformationReference::COrderInformationReference(COrderInformationReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, OrderIdentifier(*this)	// "OrderIdentifier"
, OrderLineIdentifier(*this)	// "OrderLineIdentifier"
{
}

void COrderInformationReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrderInformationReference"), _T(""));
}

COrderLine::COrderLine(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, UpdateTime(*this)	// "UpdateTime"
, Status(*this)	// "Status"
, ItemDescription(*this)	// "ItemDescription"
, ItemQuantity(*this)	// "ItemQuantity"
, ItemPrice(*this)	// "ItemPrice"
, Priority(*this)	// "Priority"
, PartDescription(*this)	// "PartDescription"
, ServiceDescription(*this)	// "ServiceDescription"
{
}

COrderLine::COrderLine(COrderLine const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, UpdateTime(*this)	// "UpdateTime"
, Status(*this)	// "Status"
, ItemDescription(*this)	// "ItemDescription"
, ItemQuantity(*this)	// "ItemQuantity"
, ItemPrice(*this)	// "ItemPrice"
, Priority(*this)	// "Priority"
, PartDescription(*this)	// "PartDescription"
, ServiceDescription(*this)	// "ServiceDescription"
{
}

void COrderLine::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrderLine"), _T(""));
}

COrderLinePartDescription::COrderLinePartDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PartType(*this)	// "PartType"
, Packaging(*this)	// "Packaging"
, PartDetails(*this)	// "PartDetails"
{
}

COrderLinePartDescription::COrderLinePartDescription(COrderLinePartDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PartType(*this)	// "PartType"
, Packaging(*this)	// "Packaging"
, PartDetails(*this)	// "PartDetails"
{
}

void COrderLinePartDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrderLinePartDescription"), _T(""));
}

COrderLineServiceDescription::COrderLineServiceDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, ServiceIdentifier(*this)	// "ServiceIdentifier"
, ServiceDetails(*this)	// "ServiceDetails"
{
}

COrderLineServiceDescription::COrderLineServiceDescription(COrderLineServiceDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, ServiceIdentifier(*this)	// "ServiceIdentifier"
, ServiceDetails(*this)	// "ServiceDetails"
{
}

void COrderLineServiceDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrderLineServiceDescription"), _T(""));
}

COrderStatus::COrderStatus(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

COrderStatus::COrderStatus(COrderStatus const& other)
: TypeBase(other.GetNode())
{
}


CPart::CPart(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, PartType(*this)	// "PartType"
, Name(*this)	// "Name"
, ProductionStatus(*this)	// "ProductionStatus"
, Location(*this)	// "Location"
, BillOfMaterials(*this)	// "BillOfMaterials"
, ProcessPlan(*this)	// "ProcessPlan"
, LastFinishedProcessStep(*this)	// "LastFinishedProcessStep"
, Size(*this)	// "Size"
, Weight(*this)	// "Weight"
, Lot(*this)	// "Lot"
{
}

CPart::CPart(CPart const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, PartType(*this)	// "PartType"
, Name(*this)	// "Name"
, ProductionStatus(*this)	// "ProductionStatus"
, Location(*this)	// "Location"
, BillOfMaterials(*this)	// "BillOfMaterials"
, ProcessPlan(*this)	// "ProcessPlan"
, LastFinishedProcessStep(*this)	// "LastFinishedProcessStep"
, Size(*this)	// "Size"
, Weight(*this)	// "Weight"
, Lot(*this)	// "Lot"
{
}

void CPart::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Part"), _T(""));
}

CPartGroup::CPartGroup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Description(*this)	// "Description"
, PartType(*this)	// "PartType"
, PartQuantity(*this)	// "PartQuantity"
, PartInstance(*this)	// "PartInstance"
{
}

CPartGroup::CPartGroup(CPartGroup const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Description(*this)	// "Description"
, PartType(*this)	// "PartType"
, PartQuantity(*this)	// "PartQuantity"
, PartInstance(*this)	// "PartInstance"
{
}

void CPartGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PartGroup"), _T(""));
}

CPartProductionStatus::CPartProductionStatus(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPartProductionStatus::CPartProductionStatus(CPartProductionStatus const& other)
: TypeBase(other.GetNode())
{
}


CPartReference::CPartReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, PartIdentifier(*this)	// "PartIdentifier"
{
}

CPartReference::CPartReference(CPartReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, PartIdentifier(*this)	// "PartIdentifier"
{
}

void CPartReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PartReference"), _T(""));
}

CPartType::CPartType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Name(*this)	// "Name"
, BillOfMaterials(*this)	// "BillOfMaterials"
, ProcessPlan(*this)	// "ProcessPlan"
, Size(*this)	// "Size"
, Weight(*this)	// "Weight"
{
}

CPartType::CPartType(CPartType const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
, BillOfMaterials(*this)	// "BillOfMaterials"
, ProcessPlan(*this)	// "ProcessPlan"
, Size(*this)	// "Size"
, Weight(*this)	// "Weight"
{
}

void CPartType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PartType"), _T(""));
}

CPartTypeReference::CPartTypeReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, PartTypeIdentifier(*this)	// "PartTypeIdentifier"
{
}

CPartTypeReference::CPartTypeReference(CPartTypeReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, PartTypeIdentifier(*this)	// "PartTypeIdentifier"
{
}

void CPartTypeReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PartTypeReference"), _T(""));
}

CPerMeasuredAmountPackaging::CPerMeasuredAmountPackaging(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, MeasuredAmount(*this)	// "MeasuredAmount"
, PackageUnitOfMeasure(*this)	// "PackageUnitOfMeasure"
, PricePerUnit(*this)	// "PricePerUnit"
{
}

CPerMeasuredAmountPackaging::CPerMeasuredAmountPackaging(CPerMeasuredAmountPackaging const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, MeasuredAmount(*this)	// "MeasuredAmount"
, PackageUnitOfMeasure(*this)	// "PackageUnitOfMeasure"
, PricePerUnit(*this)	// "PricePerUnit"
{
}

void CPerMeasuredAmountPackaging::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PerMeasuredAmountPackaging"), _T(""));
}

CPerPiecePackaging::CPerPiecePackaging(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PiecesPerPackage(*this)	// "PiecesPerPackage"
, PricePerPiece(*this)	// "PricePerPiece"
{
}

CPerPiecePackaging::CPerPiecePackaging(CPerPiecePackaging const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PiecesPerPackage(*this)	// "PiecesPerPackage"
, PricePerPiece(*this)	// "PricePerPiece"
{
}

void CPerPiecePackaging::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PerPiecePackaging"), _T(""));
}

CPhone::CPhone(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CCommunicationMethod(node)
, Number(*this)	// "Number"
{
}

CPhone::CPhone(CPhone const& other)
: ::CMSD::CCommunicationMethod(other.GetNode())
, Number(*this)	// "Number"
{
}

void CPhone::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Phone"), _T(""));
}

CPlacement::CPlacement(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLayoutElementReference(node)
, Location(*this)	// "Location"
, Transformations(*this)	// "Transformations"
{
}

CPlacement::CPlacement(CPlacement const& other)
: ::CMSD::CLayoutElementReference(other.GetNode())
, Location(*this)	// "Location"
, Transformations(*this)	// "Transformations"
{
}

void CPlacement::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Placement"), _T(""));
}

CPowerType::CPowerType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CPowerType::CPowerType(CPowerType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CPowerType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PowerType"), _T(""));
}

CPowerUnit::CPowerUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPowerUnit::CPowerUnit(CPowerUnit const& other)
: TypeBase(other.GetNode())
{
}


CPrecedenceConstraint::CPrecedenceConstraint(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Description(*this)	// "Description"
, PrecedenceRelationship(*this)	// "PrecedenceRelationship"
, LagDuration(*this)	// "LagDuration"
, LagPercentage(*this)	// "LagPercentage"
, LagPartsComplete(*this)	// "LagPartsComplete"
{
}

CPrecedenceConstraint::CPrecedenceConstraint(CPrecedenceConstraint const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Description(*this)	// "Description"
, PrecedenceRelationship(*this)	// "PrecedenceRelationship"
, LagDuration(*this)	// "LagDuration"
, LagPercentage(*this)	// "LagPercentage"
, LagPartsComplete(*this)	// "LagPartsComplete"
{
}

void CPrecedenceConstraint::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PrecedenceConstraint"), _T(""));
}

CPrecedenceRelationship::CPrecedenceRelationship(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPrecedenceRelationship::CPrecedenceRelationship(CPrecedenceRelationship const& other)
: TypeBase(other.GetNode())
{
}


CProcess::CProcess(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, PartsProduced(*this)	// "PartsProduced"
, PartsConsumed(*this)	// "PartsConsumed"
, ResourcesRequired(*this)	// "ResourcesRequired"
, MachineProgramInformation(*this)	// "MachineProgramInformation"
, SetupTime(*this)	// "SetupTime"
, OperationTime(*this)	// "OperationTime"
, RepetitionCount(*this)	// "RepetitionCount"
, CostAllocationData(*this)	// "CostAllocationData"
, SpecialInstruction(*this)	// "SpecialInstruction"
, ProcessConstraint(*this)	// "ProcessConstraint"
, SubProcessGroup(*this)	// "SubProcessGroup"
{
}

CProcess::CProcess(CProcess const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, PartsProduced(*this)	// "PartsProduced"
, PartsConsumed(*this)	// "PartsConsumed"
, ResourcesRequired(*this)	// "ResourcesRequired"
, MachineProgramInformation(*this)	// "MachineProgramInformation"
, SetupTime(*this)	// "SetupTime"
, OperationTime(*this)	// "OperationTime"
, RepetitionCount(*this)	// "RepetitionCount"
, CostAllocationData(*this)	// "CostAllocationData"
, SpecialInstruction(*this)	// "SpecialInstruction"
, ProcessConstraint(*this)	// "ProcessConstraint"
, SubProcessGroup(*this)	// "SubProcessGroup"
{
}

void CProcess::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Process"), _T(""));
}

CProcessConstraint::CProcessConstraint(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CPrecedenceConstraint(node)
, PredecessorProcess(*this)	// "PredecessorProcess"
, SuccessorProcess(*this)	// "SuccessorProcess"
{
}

CProcessConstraint::CProcessConstraint(CProcessConstraint const& other)
: ::CMSD::CPrecedenceConstraint(other.GetNode())
, PredecessorProcess(*this)	// "PredecessorProcess"
, SuccessorProcess(*this)	// "SuccessorProcess"
{
}

void CProcessConstraint::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcessConstraint"), _T(""));
}

CProcessGroup::CProcessGroup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Type(*this)	// "Type"
, DecisionText(*this)	// "DecisionText"
, Process(*this)	// "Process"
, ProcessConstraint(*this)	// "ProcessConstraint"
{
}

CProcessGroup::CProcessGroup(CProcessGroup const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Type(*this)	// "Type"
, DecisionText(*this)	// "DecisionText"
, Process(*this)	// "Process"
, ProcessConstraint(*this)	// "ProcessConstraint"
{
}

void CProcessGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcessGroup"), _T(""));
}

CProcessGroupType::CProcessGroupType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CProcessGroupType::CProcessGroupType(CProcessGroupType const& other)
: TypeBase(other.GetNode())
{
}


CProcessPlan::CProcessPlan(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, PartsProduced(*this)	// "PartsProduced"
, PartsConsumed(*this)	// "PartsConsumed"
, ResourcesRequired(*this)	// "ResourcesRequired"
, CostAllocationData(*this)	// "CostAllocationData"
, FirstProcess(*this)	// "FirstProcess"
, Process(*this)	// "Process"
{
}

CProcessPlan::CProcessPlan(CProcessPlan const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, PartsProduced(*this)	// "PartsProduced"
, PartsConsumed(*this)	// "PartsConsumed"
, ResourcesRequired(*this)	// "ResourcesRequired"
, CostAllocationData(*this)	// "CostAllocationData"
, FirstProcess(*this)	// "FirstProcess"
, Process(*this)	// "Process"
{
}

void CProcessPlan::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcessPlan"), _T(""));
}

CProcessPlanReference::CProcessPlanReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, ProcessPlanIdentifier(*this)	// "ProcessPlanIdentifier"
{
}

CProcessPlanReference::CProcessPlanReference(CProcessPlanReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, ProcessPlanIdentifier(*this)	// "ProcessPlanIdentifier"
{
}

void CProcessPlanReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcessPlanReference"), _T(""));
}

CProcessReference::CProcessReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, ProcessPlanIdentifier(*this)	// "ProcessPlanIdentifier"
, ProcessIdentifier(*this)	// "ProcessIdentifier"
{
}

CProcessReference::CProcessReference(CProcessReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, ProcessPlanIdentifier(*this)	// "ProcessPlanIdentifier"
, ProcessIdentifier(*this)	// "ProcessIdentifier"
{
}

void CProcessReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcessReference"), _T(""));
}

CProperty::CProperty(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PropertyDescription(*this)	// "PropertyDescription"
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
, Distribution(*this)	// "Distribution"
, BillOfMaterialsComponentReference(*this)	// "BillOfMaterialsComponentReference"
, BillOfMaterialsReference(*this)	// "BillOfMaterialsReference"
, CalendarReference(*this)	// "CalendarReference"
, DistributionDefinitionReference(*this)	// "DistributionDefinitionReference"
, InventoryItemClassReference(*this)	// "InventoryItemClassReference"
, InventoryItemReference(*this)	// "InventoryItemReference"
, JobReference(*this)	// "JobReference"
, LayoutElementReference(*this)	// "LayoutElementReference"
, MaintenancePlanReference(*this)	// "MaintenancePlanReference"
, MaintenanceProcessReference(*this)	// "MaintenanceProcessReference"
, OrderInformationReference(*this)	// "OrderInformationReference"
, PartReference(*this)	// "PartReference"
, PartTypeReference(*this)	// "PartTypeReference"
, ProcessPlanReference(*this)	// "ProcessPlanReference"
, ProcessReference(*this)	// "ProcessReference"
, PropertyDescriptionReference(*this)	// "PropertyDescriptionReference"
, ReferenceMaterialReference(*this)	// "ReferenceMaterialReference"
, ResourceClassReference(*this)	// "ResourceClassReference"
, ResourceReference(*this)	// "ResourceReference"
, ScheduleInformationReference(*this)	// "ScheduleInformationReference"
, SetupChangeoverReference(*this)	// "SetupChangeoverReference"
, SetupDefinitionReference(*this)	// "SetupDefinitionReference"
, SkillReference(*this)	// "SkillReference"
{
}

CProperty::CProperty(CProperty const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PropertyDescription(*this)	// "PropertyDescription"
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
, Distribution(*this)	// "Distribution"
, BillOfMaterialsComponentReference(*this)	// "BillOfMaterialsComponentReference"
, BillOfMaterialsReference(*this)	// "BillOfMaterialsReference"
, CalendarReference(*this)	// "CalendarReference"
, DistributionDefinitionReference(*this)	// "DistributionDefinitionReference"
, InventoryItemClassReference(*this)	// "InventoryItemClassReference"
, InventoryItemReference(*this)	// "InventoryItemReference"
, JobReference(*this)	// "JobReference"
, LayoutElementReference(*this)	// "LayoutElementReference"
, MaintenancePlanReference(*this)	// "MaintenancePlanReference"
, MaintenanceProcessReference(*this)	// "MaintenanceProcessReference"
, OrderInformationReference(*this)	// "OrderInformationReference"
, PartReference(*this)	// "PartReference"
, PartTypeReference(*this)	// "PartTypeReference"
, ProcessPlanReference(*this)	// "ProcessPlanReference"
, ProcessReference(*this)	// "ProcessReference"
, PropertyDescriptionReference(*this)	// "PropertyDescriptionReference"
, ReferenceMaterialReference(*this)	// "ReferenceMaterialReference"
, ResourceClassReference(*this)	// "ResourceClassReference"
, ResourceReference(*this)	// "ResourceReference"
, ScheduleInformationReference(*this)	// "ScheduleInformationReference"
, SetupChangeoverReference(*this)	// "SetupChangeoverReference"
, SetupDefinitionReference(*this)	// "SetupDefinitionReference"
, SkillReference(*this)	// "SkillReference"
{
}

void CProperty::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Property"), _T(""));
}

CPropertyCardinality::CPropertyCardinality(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Minimum(*this)	// "Minimum"
, Maximum(*this)	// "Maximum"
{
}

CPropertyCardinality::CPropertyCardinality(CPropertyCardinality const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Minimum(*this)	// "Minimum"
, Maximum(*this)	// "Maximum"
{
}

void CPropertyCardinality::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PropertyCardinality"), _T(""));
}

CPropertyDataTypeDescription::CPropertyDataTypeDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, PropertyDataType(*this)	// "PropertyDataType"
, ReferenceType(*this)	// "ReferenceType"
, SimpleValueDataType(*this)	// "SimpleValueDataType"
{
}

CPropertyDataTypeDescription::CPropertyDataTypeDescription(CPropertyDataTypeDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, PropertyDataType(*this)	// "PropertyDataType"
, ReferenceType(*this)	// "ReferenceType"
, SimpleValueDataType(*this)	// "SimpleValueDataType"
{
}

void CPropertyDataTypeDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PropertyDataTypeDescription"), _T(""));
}

CPropertyDescription::CPropertyDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Identifier(*this)	// "Identifier"
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, ParentEntityName(*this)	// "ParentEntityName"
, UnitType(*this)	// "UnitType"
, PropertyCardinality(*this)	// "PropertyCardinality"
, PropertyDataTypeDescription(*this)	// "PropertyDataTypeDescription"
{
}

CPropertyDescription::CPropertyDescription(CPropertyDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Identifier(*this)	// "Identifier"
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, ParentEntityName(*this)	// "ParentEntityName"
, UnitType(*this)	// "UnitType"
, PropertyCardinality(*this)	// "PropertyCardinality"
, PropertyDataTypeDescription(*this)	// "PropertyDataTypeDescription"
{
}

void CPropertyDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PropertyDescription"), _T(""));
}

CPropertyDescriptionReference::CPropertyDescriptionReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, PropertyDescriptionIdentifier(*this)	// "PropertyDescriptionIdentifier"
{
}

CPropertyDescriptionReference::CPropertyDescriptionReference(CPropertyDescriptionReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, PropertyDescriptionIdentifier(*this)	// "PropertyDescriptionIdentifier"
{
}

void CPropertyDescriptionReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PropertyDescriptionReference"), _T(""));
}

CPropertyExtensibleEntity::CPropertyExtensibleEntity(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPropertyExtensibleEntity::CPropertyExtensibleEntity(CPropertyExtensibleEntity const& other)
: TypeBase(other.GetNode())
{
}


CPropertyType::CPropertyType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPropertyType::CPropertyType(CPropertyType const& other)
: TypeBase(other.GetNode())
{
}


CQuantityType::CQuantityType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, UnitDescription(*this)	// "UnitDescription"
, UnitName(*this)	// "UnitName"
, Value2(*this)	// "Value"
{
}

CQuantityType::CQuantityType(CQuantityType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, UnitDescription(*this)	// "UnitDescription"
, UnitName(*this)	// "UnitName"
, Value2(*this)	// "Value"
{
}

void CQuantityType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("QuantityType"), _T(""));
}

CReferenceMaterial::CReferenceMaterial(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, FileName(*this)	// "FileName"
, OnlineLocation(*this)	// "OnlineLocation"
, ISBN(*this)	// "ISBN"
, DigitalFormat(*this)	// "DigitalFormat"
, PermanentStorageMedium(*this)	// "PermanentStorageMedium"
, PhysicalLocation(*this)	// "PhysicalLocation"
, RequiredApplication(*this)	// "RequiredApplication"
{
}

CReferenceMaterial::CReferenceMaterial(CReferenceMaterial const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, FileName(*this)	// "FileName"
, OnlineLocation(*this)	// "OnlineLocation"
, ISBN(*this)	// "ISBN"
, DigitalFormat(*this)	// "DigitalFormat"
, PermanentStorageMedium(*this)	// "PermanentStorageMedium"
, PhysicalLocation(*this)	// "PhysicalLocation"
, RequiredApplication(*this)	// "RequiredApplication"
{
}

void CReferenceMaterial::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ReferenceMaterial"), _T(""));
}

CReferenceMaterialReference::CReferenceMaterialReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, ReferenceMaterialIdentifier(*this)	// "ReferenceMaterialIdentifier"
{
}

CReferenceMaterialReference::CReferenceMaterialReference(CReferenceMaterialReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, ReferenceMaterialIdentifier(*this)	// "ReferenceMaterialIdentifier"
{
}

void CReferenceMaterialReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ReferenceMaterialReference"), _T(""));
}

CReferenceProperty::CReferenceProperty(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, AbstractEntityReference(*this)	// "AbstractEntityReference"
{
}

CReferenceProperty::CReferenceProperty(CReferenceProperty const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, AbstractEntityReference(*this)	// "AbstractEntityReference"
{
}

void CReferenceProperty::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ReferenceProperty"), _T(""));
}

CReferenceTypeName::CReferenceTypeName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CReferenceTypeName::CReferenceTypeName(CReferenceTypeName const& other)
: TypeBase(other.GetNode())
{
}


CReferencingEntity::CReferencingEntity(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CEntity(node)
{
}

CReferencingEntity::CReferencingEntity(CReferencingEntity const& other)
: ::CMSD::CEntity(other.GetNode())
{
}

void CReferencingEntity::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ReferencingEntity"), _T(""));
}

CRelaxNGCMSDValidator::CRelaxNGCMSDValidator(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CRelaxNGCMSDValidator::CRelaxNGCMSDValidator(CRelaxNGCMSDValidator const& other)
: TypeBase(other.GetNode())
{
}

void CRelaxNGCMSDValidator::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RelaxNGCMSDValidator"), _T(""));
}

CRelaxNGCMSDValidatorWithCache::CRelaxNGCMSDValidatorWithCache(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CRelaxNGCMSDValidatorWithCache::CRelaxNGCMSDValidatorWithCache(CRelaxNGCMSDValidatorWithCache const& other)
: TypeBase(other.GetNode())
{
}

void CRelaxNGCMSDValidatorWithCache::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RelaxNGCMSDValidatorWithCache"), _T(""));
}

CRequiredApplication::CRequiredApplication(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Version(*this)	// "Version"
, OperatingSystem(*this)	// "OperatingSystem"
{
}

CRequiredApplication::CRequiredApplication(CRequiredApplication const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Name(*this)	// "Name"
, Description(*this)	// "Description"
, Version(*this)	// "Version"
, OperatingSystem(*this)	// "OperatingSystem"
{
}

void CRequiredApplication::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("RequiredApplication"), _T(""));
}

CResource::CResource(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, ResourceType(*this)	// "ResourceType"
, ResourceClass(*this)	// "ResourceClass"
, Name(*this)	// "Name"
, CurrentStatus(*this)	// "CurrentStatus"
, CurrentSetup(*this)	// "CurrentSetup"
, ShiftAssignment(*this)	// "ShiftAssignment"
, AssociatedResource(*this)	// "AssociatedResource"
, HourlyRate(*this)	// "HourlyRate"
, EmployeeSkill(*this)	// "EmployeeSkill"
, GroupDefinition(*this)	// "GroupDefinition"
, Size(*this)	// "Size"
{
}

CResource::CResource(CResource const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, ResourceType(*this)	// "ResourceType"
, ResourceClass(*this)	// "ResourceClass"
, Name(*this)	// "Name"
, CurrentStatus(*this)	// "CurrentStatus"
, CurrentSetup(*this)	// "CurrentSetup"
, ShiftAssignment(*this)	// "ShiftAssignment"
, AssociatedResource(*this)	// "AssociatedResource"
, HourlyRate(*this)	// "HourlyRate"
, EmployeeSkill(*this)	// "EmployeeSkill"
, GroupDefinition(*this)	// "GroupDefinition"
, Size(*this)	// "Size"
{
}

void CResource::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Resource"), _T(""));
}

CResourceClass::CResourceClass(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, ResourceType(*this)	// "ResourceType"
, Name(*this)	// "Name"
, HourlyRate(*this)	// "HourlyRate"
, Size(*this)	// "Size"
{
}

CResourceClass::CResourceClass(CResourceClass const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, ResourceType(*this)	// "ResourceType"
, Name(*this)	// "Name"
, HourlyRate(*this)	// "HourlyRate"
, Size(*this)	// "Size"
{
}

void CResourceClass::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceClass"), _T(""));
}

CResourceClassReference::CResourceClassReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, ResourceClassIdentifier(*this)	// "ResourceClassIdentifier"
{
}

CResourceClassReference::CResourceClassReference(CResourceClassReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, ResourceClassIdentifier(*this)	// "ResourceClassIdentifier"
{
}

void CResourceClassReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceClassReference"), _T(""));
}

CResourceGroupInformation::CResourceGroupInformation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, ResourceGroupMember(*this)	// "ResourceGroupMember"
, Connection(*this)	// "Connection"
{
}

CResourceGroupInformation::CResourceGroupInformation(CResourceGroupInformation const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, ResourceGroupMember(*this)	// "ResourceGroupMember"
, Connection(*this)	// "Connection"
{
}

void CResourceGroupInformation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceGroupInformation"), _T(""));
}

CResourceGroupMember::CResourceGroupMember(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CResourceReference(node)
{
}

CResourceGroupMember::CResourceGroupMember(CResourceGroupMember const& other)
: ::CMSD::CResourceReference(other.GetNode())
{
}

void CResourceGroupMember::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceGroupMember"), _T(""));
}

CResourceReference::CResourceReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, ResourceIdentifier(*this)	// "ResourceIdentifier"
{
}

CResourceReference::CResourceReference(CResourceReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, ResourceIdentifier(*this)	// "ResourceIdentifier"
{
}

void CResourceReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceReference"), _T(""));
}

CResourceStatus::CResourceStatus(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CResourceStatus::CResourceStatus(CResourceStatus const& other)
: TypeBase(other.GetNode())
{
}


CResourceType::CResourceType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CResourceType::CResourceType(CResourceType const& other)
: TypeBase(other.GetNode())
{
}


CResourcesRequired::CResourcesRequired(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Description(*this)	// "Description"
, ResourceClass(*this)	// "ResourceClass"
, MinimumNumber(*this)	// "MinimumNumber"
, MaximumNumber(*this)	// "MaximumNumber"
, Resource(*this)	// "Resource"
, AllowableSetup(*this)	// "AllowableSetup"
, RequiredEmployeeSkill(*this)	// "RequiredEmployeeSkill"
{
}

CResourcesRequired::CResourcesRequired(CResourcesRequired const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Description(*this)	// "Description"
, ResourceClass(*this)	// "ResourceClass"
, MinimumNumber(*this)	// "MinimumNumber"
, MaximumNumber(*this)	// "MaximumNumber"
, Resource(*this)	// "Resource"
, AllowableSetup(*this)	// "AllowableSetup"
, RequiredEmployeeSkill(*this)	// "RequiredEmployeeSkill"
{
}

void CResourcesRequired::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourcesRequired"), _T(""));
}

CRotation::CRotation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CTransformationOperation(node)
, XDegree(*this)	// "XDegree"
, YDegree(*this)	// "YDegree"
, ZDegree(*this)	// "ZDegree"
, Origin(*this)	// "Origin"
{
}

CRotation::CRotation(CRotation const& other)
: ::CMSD::CTransformationOperation(other.GetNode())
, XDegree(*this)	// "XDegree"
, YDegree(*this)	// "YDegree"
, ZDegree(*this)	// "ZDegree"
, Origin(*this)	// "Origin"
{
}

void CRotation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Rotation"), _T(""));
}

CScaling::CScaling(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CTransformationOperation(node)
, XPercent(*this)	// "XPercent"
, YPercent(*this)	// "YPercent"
, ZPercent(*this)	// "ZPercent"
{
}

CScaling::CScaling(CScaling const& other)
: ::CMSD::CTransformationOperation(other.GetNode())
, XPercent(*this)	// "XPercent"
, YPercent(*this)	// "YPercent"
, ZPercent(*this)	// "ZPercent"
{
}

void CScaling::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Scaling"), _T(""));
}

CSchedule::CSchedule(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, CreationTime(*this)	// "CreationTime"
, StartTime(*this)	// "StartTime"
, EndTime(*this)	// "EndTime"
, ScheduleItem(*this)	// "ScheduleItem"
{
}

CSchedule::CSchedule(CSchedule const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, CreationTime(*this)	// "CreationTime"
, StartTime(*this)	// "StartTime"
, EndTime(*this)	// "EndTime"
, ScheduleItem(*this)	// "ScheduleItem"
{
}

void CSchedule::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Schedule"), _T(""));
}

CScheduleInformationReference::CScheduleInformationReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, ScheduleIdentifier(*this)	// "ScheduleIdentifier"
, ScheduleItemIdentifier(*this)	// "ScheduleItemIdentifier"
{
}

CScheduleInformationReference::CScheduleInformationReference(CScheduleInformationReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, ScheduleIdentifier(*this)	// "ScheduleIdentifier"
, ScheduleItemIdentifier(*this)	// "ScheduleItemIdentifier"
{
}

void CScheduleInformationReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ScheduleInformationReference"), _T(""));
}

CScheduleItem::CScheduleItem(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, Status(*this)	// "Status"
, AssociatedJob(*this)	// "AssociatedJob"
, AssociatedOrderInformation(*this)	// "AssociatedOrderInformation"
, AssociatedProcess(*this)	// "AssociatedProcess"
, AssociatedProcessPlan(*this)	// "AssociatedProcessPlan"
, AssociatedMaintenancePlan(*this)	// "AssociatedMaintenancePlan"
, AssociatedMaintenanceProcess(*this)	// "AssociatedMaintenanceProcess"
, PlannedEffort(*this)	// "PlannedEffort"
, ActualEffort(*this)	// "ActualEffort"
{
}

CScheduleItem::CScheduleItem(CScheduleItem const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, Status(*this)	// "Status"
, AssociatedJob(*this)	// "AssociatedJob"
, AssociatedOrderInformation(*this)	// "AssociatedOrderInformation"
, AssociatedProcess(*this)	// "AssociatedProcess"
, AssociatedProcessPlan(*this)	// "AssociatedProcessPlan"
, AssociatedMaintenancePlan(*this)	// "AssociatedMaintenancePlan"
, AssociatedMaintenanceProcess(*this)	// "AssociatedMaintenanceProcess"
, PlannedEffort(*this)	// "PlannedEffort"
, ActualEffort(*this)	// "ActualEffort"
{
}

void CScheduleItem::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ScheduleItem"), _T(""));
}

CScheduleItemEffortDescription::CScheduleItemEffortDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, UpdateTime(*this)	// "UpdateTime"
, StartTime(*this)	// "StartTime"
, EndTime(*this)	// "EndTime"
, ProcessingTime(*this)	// "ProcessingTime"
, ResourcesUsed(*this)	// "ResourcesUsed"
, PartsUsed(*this)	// "PartsUsed"
, PartsProduced(*this)	// "PartsProduced"
, Property(*this)	// "Property"
{
}

CScheduleItemEffortDescription::CScheduleItemEffortDescription(CScheduleItemEffortDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, UpdateTime(*this)	// "UpdateTime"
, StartTime(*this)	// "StartTime"
, EndTime(*this)	// "EndTime"
, ProcessingTime(*this)	// "ProcessingTime"
, ResourcesUsed(*this)	// "ResourcesUsed"
, PartsUsed(*this)	// "PartsUsed"
, PartsProduced(*this)	// "PartsProduced"
, Property(*this)	// "Property"
{
}

void CScheduleItemEffortDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ScheduleItemEffortDescription"), _T(""));
}

CSegmentShape::CSegmentShape(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Type(*this)	// "Type"
, SegmentNumber(*this)	// "SegmentNumber"
, Description(*this)	// "Description"
, Base(*this)	// "Base"
, Start(*this)	// "Start"
, Width(*this)	// "Width"
, StartHeight(*this)	// "StartHeight"
, EndHeight(*this)	// "EndHeight"
, TrackWidth(*this)	// "TrackWidth"
, Color(*this)	// "Color"
, End(*this)	// "End"
, RotationPoint(*this)	// "RotationPoint"
, RotationAngle(*this)	// "RotationAngle"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
, Property(*this)	// "Property"
{
}

CSegmentShape::CSegmentShape(CSegmentShape const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Type(*this)	// "Type"
, SegmentNumber(*this)	// "SegmentNumber"
, Description(*this)	// "Description"
, Base(*this)	// "Base"
, Start(*this)	// "Start"
, Width(*this)	// "Width"
, StartHeight(*this)	// "StartHeight"
, EndHeight(*this)	// "EndHeight"
, TrackWidth(*this)	// "TrackWidth"
, Color(*this)	// "Color"
, End(*this)	// "End"
, RotationPoint(*this)	// "RotationPoint"
, RotationAngle(*this)	// "RotationAngle"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
, Property(*this)	// "Property"
{
}

void CSegmentShape::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SegmentShape"), _T(""));
}

CSegmentType::CSegmentType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSegmentType::CSegmentType(CSegmentType const& other)
: TypeBase(other.GetNode())
{
}


CSetupChangeoverDefinition::CSetupChangeoverDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, CurrentSetup(*this)	// "CurrentSetup"
, NewSetup(*this)	// "NewSetup"
{
}

CSetupChangeoverDefinition::CSetupChangeoverDefinition(CSetupChangeoverDefinition const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, CurrentSetup(*this)	// "CurrentSetup"
, NewSetup(*this)	// "NewSetup"
{
}

void CSetupChangeoverDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SetupChangeoverDefinition"), _T(""));
}

CSetupChangeoverReference::CSetupChangeoverReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, SetupChangeoverIdentifier(*this)	// "SetupChangeoverIdentifier"
{
}

CSetupChangeoverReference::CSetupChangeoverReference(CSetupChangeoverReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, SetupChangeoverIdentifier(*this)	// "SetupChangeoverIdentifier"
{
}

void CSetupChangeoverReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SetupChangeoverReference"), _T(""));
}

CSetupDefinition::CSetupDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, SetupResource(*this)	// "SetupResource"
, Name(*this)	// "Name"
, SetupComponent(*this)	// "SetupComponent"
, ChildSetup(*this)	// "ChildSetup"
{
}

CSetupDefinition::CSetupDefinition(CSetupDefinition const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, SetupResource(*this)	// "SetupResource"
, Name(*this)	// "Name"
, SetupComponent(*this)	// "SetupComponent"
, ChildSetup(*this)	// "ChildSetup"
{
}

void CSetupDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SetupDefinition"), _T(""));
}

CSetupDefinitionReference::CSetupDefinitionReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, SetupDefinitionIdentifier(*this)	// "SetupDefinitionIdentifier"
{
}

CSetupDefinitionReference::CSetupDefinitionReference(CSetupDefinitionReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, SetupDefinitionIdentifier(*this)	// "SetupDefinitionIdentifier"
{
}

void CSetupDefinitionReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SetupDefinitionReference"), _T(""));
}

CShapeDescription::CShapeDescription(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, ShapeType(*this)	// "ShapeType"
, BasicShape(*this)	// "BasicShape"
, Graphic(*this)	// "Graphic"
, Segment(*this)	// "Segment"
, TextualAnnotation(*this)	// "TextualAnnotation"
{
}

CShapeDescription::CShapeDescription(CShapeDescription const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, ShapeType(*this)	// "ShapeType"
, BasicShape(*this)	// "BasicShape"
, Graphic(*this)	// "Graphic"
, Segment(*this)	// "Segment"
, TextualAnnotation(*this)	// "TextualAnnotation"
{
}

void CShapeDescription::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ShapeDescription"), _T(""));
}

CShapeDescriptionType::CShapeDescriptionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CShapeDescriptionType::CShapeDescriptionType(CShapeDescriptionType const& other)
: TypeBase(other.GetNode())
{
}


CShapeLabelDefinition::CShapeLabelDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Text(*this)	// "Text"
, Color(*this)	// "Color"
, Property(*this)	// "Property"
{
}

CShapeLabelDefinition::CShapeLabelDefinition(CShapeLabelDefinition const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Text(*this)	// "Text"
, Color(*this)	// "Color"
, Property(*this)	// "Property"
{
}

void CShapeLabelDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ShapeLabelDefinition"), _T(""));
}

CShift::CShift(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, StartTime(*this)	// "StartTime"
, Duration(*this)	// "Duration"
, ApplicableDay(*this)	// "ApplicableDay"
, Break2(*this)	// "Break"
{
}

CShift::CShift(CShift const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, StartTime(*this)	// "StartTime"
, Duration(*this)	// "Duration"
, ApplicableDay(*this)	// "ApplicableDay"
, Break2(*this)	// "Break"
{
}

void CShift::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Shift"), _T(""));
}

CShiftSchedule::CShiftSchedule(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, EffectiveStartDate(*this)	// "EffectiveStartDate"
, EffectiveEndDate(*this)	// "EffectiveEndDate"
, ApplicableShift(*this)	// "ApplicableShift"
, ApplicableHoliday(*this)	// "ApplicableHoliday"
, AvailabilityException(*this)	// "AvailabilityException"
{
}

CShiftSchedule::CShiftSchedule(CShiftSchedule const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, EffectiveStartDate(*this)	// "EffectiveStartDate"
, EffectiveEndDate(*this)	// "EffectiveEndDate"
, ApplicableShift(*this)	// "ApplicableShift"
, ApplicableHoliday(*this)	// "ApplicableHoliday"
, AvailabilityException(*this)	// "AvailabilityException"
{
}

void CShiftSchedule::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ShiftSchedule"), _T(""));
}

CSimpleDataTypeName::CSimpleDataTypeName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSimpleDataTypeName::CSimpleDataTypeName(CSimpleDataTypeName const& other)
: TypeBase(other.GetNode())
{
}


CSimpleProperty::CSimpleProperty(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Value2(*this)	// "Value"
{
}

CSimpleProperty::CSimpleProperty(CSimpleProperty const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Value2(*this)	// "Value"
{
}

void CSimpleProperty::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SimpleProperty"), _T(""));
}

CSkillDefinition::CSkillDefinition(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CUniqueEntity(node)
, Name(*this)	// "Name"
, SkillLevel(*this)	// "SkillLevel"
{
}

CSkillDefinition::CSkillDefinition(CSkillDefinition const& other)
: ::CMSD::CUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
, SkillLevel(*this)	// "SkillLevel"
{
}

void CSkillDefinition::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SkillDefinition"), _T(""));
}

CSkillLevel::CSkillLevel(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CLimitedUniqueEntity(node)
, Name(*this)	// "Name"
{
}

CSkillLevel::CSkillLevel(CSkillLevel const& other)
: ::CMSD::CLimitedUniqueEntity(other.GetNode())
, Name(*this)	// "Name"
{
}

void CSkillLevel::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SkillLevel"), _T(""));
}

CSkillReference::CSkillReference(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CAbstractEntityReference(node)
, SkillDefinitionIdentifier(*this)	// "SkillDefinitionIdentifier"
, SkillLevelIdentifier(*this)	// "SkillLevelIdentifier"
{
}

CSkillReference::CSkillReference(CSkillReference const& other)
: ::CMSD::CAbstractEntityReference(other.GetNode())
, SkillDefinitionIdentifier(*this)	// "SkillDefinitionIdentifier"
, SkillLevelIdentifier(*this)	// "SkillLevelIdentifier"
{
}

void CSkillReference::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SkillReference"), _T(""));
}

CSpatialDimension::CSpatialDimension(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Width(*this)	// "Width"
, Depth(*this)	// "Depth"
, Height(*this)	// "Height"
{
}

CSpatialDimension::CSpatialDimension(CSpatialDimension const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Width(*this)	// "Width"
, Depth(*this)	// "Depth"
, Height(*this)	// "Height"
{
}

void CSpatialDimension::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpatialDimension"), _T(""));
}

CSpeedType::CSpeedType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CSpeedType::CSpeedType(CSpeedType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CSpeedType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpeedType"), _T(""));
}

CSpeedUnit::CSpeedUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSpeedUnit::CSpeedUnit(CSpeedUnit const& other)
: TypeBase(other.GetNode())
{
}


CStochasticProperty::CStochasticProperty(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Distribution(*this)	// "Distribution"
{
}

CStochasticProperty::CStochasticProperty(CStochasticProperty const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Distribution(*this)	// "Distribution"
{
}

void CStochasticProperty::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("StochasticProperty"), _T(""));
}

CTemperatureType::CTemperatureType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CTemperatureType::CTemperatureType(CTemperatureType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CTemperatureType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemperatureType"), _T(""));
}

CTemperatureUnit::CTemperatureUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTemperatureUnit::CTemperatureUnit(CTemperatureUnit const& other)
: TypeBase(other.GetNode())
{
}


CTextAnchorLocation::CTextAnchorLocation(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTextAnchorLocation::CTextAnchorLocation(CTextAnchorLocation const& other)
: TypeBase(other.GetNode())
{
}


CTextualAnnotation::CTextualAnnotation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, AttachPoint(*this)	// "AttachPoint"
, Text(*this)	// "Text"
, TextAnchorLocation(*this)	// "TextAnchorLocation"
, Color(*this)	// "Color"
, Style(*this)	// "Style"
, TextAngle(*this)	// "TextAngle"
, Property(*this)	// "Property"
{
}

CTextualAnnotation::CTextualAnnotation(CTextualAnnotation const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, AttachPoint(*this)	// "AttachPoint"
, Text(*this)	// "Text"
, TextAnchorLocation(*this)	// "TextAnchorLocation"
, Color(*this)	// "Color"
, Style(*this)	// "Style"
, TextAngle(*this)	// "TextAngle"
, Property(*this)	// "Property"
{
}

void CTextualAnnotation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TextualAnnotation"), _T(""));
}

CTimeUnit::CTimeUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimeUnit::CTimeUnit(CTimeUnit const& other)
: TypeBase(other.GetNode())
{
}


CTransformationOperation::CTransformationOperation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
{
}

CTransformationOperation::CTransformationOperation(CTransformationOperation const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
{
}

void CTransformationOperation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TransformationOperation"), _T(""));
}

CTranslation::CTranslation(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CTransformationOperation(node)
, XOffset(*this)	// "XOffset"
, YOffset(*this)	// "YOffset"
, ZOffset(*this)	// "ZOffset"
{
}

CTranslation::CTranslation(CTranslation const& other)
: ::CMSD::CTransformationOperation(other.GetNode())
, XOffset(*this)	// "XOffset"
, YOffset(*this)	// "YOffset"
, ZOffset(*this)	// "ZOffset"
{
}

void CTranslation::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Translation"), _T(""));
}

CUniqueEntity::CUniqueEntity(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CIdentifiableEntity(node)
{
}

CUniqueEntity::CUniqueEntity(CUniqueEntity const& other)
: ::CMSD::CIdentifiableEntity(other.GetNode())
{
}

void CUniqueEntity::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UniqueEntity"), _T(""));
}

CUniqueEntityType::CUniqueEntityType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUniqueEntityType::CUniqueEntityType(CUniqueEntityType const& other)
: TypeBase(other.GetNode())
{
}


CUnitDefaults::CUnitDefaults(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, AreaUnit(*this)	// "AreaUnit"
, LengthUnit(*this)	// "LengthUnit"
, CurrencyUnit(*this)	// "CurrencyUnit"
, PowerUnit(*this)	// "PowerUnit"
, SpeedUnit(*this)	// "SpeedUnit"
, TemperatureUnit(*this)	// "TemperatureUnit"
, TimeUnit(*this)	// "TimeUnit"
, VolumeUnit(*this)	// "VolumeUnit"
, WeightUnit(*this)	// "WeightUnit"
{
}

CUnitDefaults::CUnitDefaults(CUnitDefaults const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, AreaUnit(*this)	// "AreaUnit"
, LengthUnit(*this)	// "LengthUnit"
, CurrencyUnit(*this)	// "CurrencyUnit"
, PowerUnit(*this)	// "PowerUnit"
, SpeedUnit(*this)	// "SpeedUnit"
, TemperatureUnit(*this)	// "TemperatureUnit"
, TimeUnit(*this)	// "TimeUnit"
, VolumeUnit(*this)	// "VolumeUnit"
, WeightUnit(*this)	// "WeightUnit"
{
}

void CUnitDefaults::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnitDefaults"), _T(""));
}

CUnitTypeName::CUnitTypeName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUnitTypeName::CUnitTypeName(CUnitTypeName const& other)
: TypeBase(other.GetNode())
{
}


CValidationResult::CValidationResult(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, ErrorMessage(*this)	// "ErrorMessage"
, Valid(*this)	// "Valid"
{
}

CValidationResult::CValidationResult(CValidationResult const& other)
: TypeBase(other.GetNode())
, ErrorMessage(*this)	// "ErrorMessage"
, Valid(*this)	// "Valid"
{
}

void CValidationResult::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ValidationResult"), _T(""));
}

CVariableCostData::CVariableCostData(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, CostUnit(*this)	// "CostUnit"
, CostRatePerUnit(*this)	// "CostRatePerUnit"
, CostUnitQuantity(*this)	// "CostUnitQuantity"
{
}

CVariableCostData::CVariableCostData(CVariableCostData const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, CostUnit(*this)	// "CostUnit"
, CostRatePerUnit(*this)	// "CostRatePerUnit"
, CostUnitQuantity(*this)	// "CostUnitQuantity"
{
}

void CVariableCostData::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VariableCostData"), _T(""));
}

CVolumeType::CVolumeType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CVolumeType::CVolumeType(CVolumeType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CVolumeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VolumeType"), _T(""));
}

CVolumeUnit::CVolumeUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CVolumeUnit::CVolumeUnit(CVolumeUnit const& other)
: TypeBase(other.GetNode())
{
}


CWeightType::CWeightType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::CNotifyPropertyChangeBase(node)
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

CWeightType::CWeightType(CWeightType const& other)
: ::CMSD::CNotifyPropertyChangeBase(other.GetNode())
, Unit(*this)	// "Unit"
, Value2(*this)	// "Value"
{
}

void CWeightType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("WeightType"), _T(""));
}

CWeightUnit::CWeightUnit(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CWeightUnit::CWeightUnit(CWeightUnit const& other)
: TypeBase(other.GetNode())
{
}


CXSDCMSDValidator::CXSDCMSDValidator(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CXSDCMSDValidator::CXSDCMSDValidator(CXSDCMSDValidator const& other)
: TypeBase(other.GetNode())
{
}

void CXSDCMSDValidator::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("XSDCMSDValidator"), _T(""));
}

CCMSD::CCMSD(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, AbstractEntityReference(*this)	// "AbstractEntityReference"
, Address(*this)	// "Address"
, AreaType(*this)	// "AreaType"
, AreaUnit(*this)	// "AreaUnit"
, ArrayOfTransformationOperation(*this)	// "ArrayOfTransformationOperation"
, AvailabilityException(*this)	// "AvailabilityException"
, BaseLocation(*this)	// "BaseLocation"
, BasicShape(*this)	// "BasicShape"
, BasicShapeType(*this)	// "BasicShapeType"
, BillOfMaterials(*this)	// "BillOfMaterials"
, BillOfMaterialsComponent(*this)	// "BillOfMaterialsComponent"
, BillOfMaterialsComponentReference(*this)	// "BillOfMaterialsComponentReference"
, BillOfMaterialsReference(*this)	// "BillOfMaterialsReference"
, BoundaryDefinition(*this)	// "BoundaryDefinition"
, Break2(*this)	// "Break"
, CMSDDecimal(*this)	// "CMSDDecimal"
, CMSDDocument(*this)	// "CMSDDocument"
, CMSDDocumentReference(*this)	// "CMSDDocumentReference"
, CMSDDocumentTest(*this)	// "CMSDDocumentTest"
, Calendar(*this)	// "Calendar"
, CalendarReference(*this)	// "CalendarReference"
, CardinalitySpecification(*this)	// "CardinalitySpecification"
, ColorHighlight(*this)	// "ColorHighlight"
, CommunicationMethod(*this)	// "CommunicationMethod"
, CommunicationMethodGroup(*this)	// "CommunicationMethodGroup"
, Connection(*this)	// "Connection"
, ConnectionType(*this)	// "ConnectionType"
, ContactInformation(*this)	// "ContactInformation"
, ContactParty(*this)	// "ContactParty"
, Coordinate2D(*this)	// "Coordinate2D"
, Coordinate3D(*this)	// "Coordinate3D"
, CoordinateSystem(*this)	// "CoordinateSystem"
, CostAllocationData(*this)	// "CostAllocationData"
, CostCategory(*this)	// "CostCategory"
, CostType(*this)	// "CostType"
, CurrencyType(*this)	// "CurrencyType"
, DataSection(*this)	// "DataSection"
, Date(*this)	// "Date"
, Day(*this)	// "Day"
, Distribution(*this)	// "Distribution"
, DistributionDefinition(*this)	// "DistributionDefinition"
, DistributionDefinitionReference(*this)	// "DistributionDefinitionReference"
, DistributionParameter(*this)	// "DistributionParameter"
, Duration(*this)	// "Duration"
, ElapsedTimeType(*this)	// "ElapsedTimeType"
, Email(*this)	// "Email"
, Entity(*this)	// "Entity"
, Event(*this)	// "Event"
, GraphicDescription(*this)	// "GraphicDescription"
, GraphicDescriptionType(*this)	// "GraphicDescriptionType"
, GrossDimensions(*this)	// "GrossDimensions"
, HeaderSection(*this)	// "HeaderSection"
, Holiday(*this)	// "Holiday"
, IdentifiableEntity(*this)	// "IdentifiableEntity"
, Identifier(*this)	// "Identifier"
, ImageResolution(*this)	// "ImageResolution"
, Integer(*this)	// "Integer"
, InventoryItem(*this)	// "InventoryItem"
, InventoryItemClass(*this)	// "InventoryItemClass"
, InventoryItemClassReference(*this)	// "InventoryItemClassReference"
, InventoryItemReference(*this)	// "InventoryItemReference"
, InventoryItemType(*this)	// "InventoryItemType"
, ItemPackaging(*this)	// "ItemPackaging"
, Job(*this)	// "Job"
, JobConstraint(*this)	// "JobConstraint"
, JobEffortDescription(*this)	// "JobEffortDescription"
, JobReference(*this)	// "JobReference"
, JobStatus(*this)	// "JobStatus"
, Layout(*this)	// "Layout"
, LayoutElement(*this)	// "LayoutElement"
, LayoutElementReference(*this)	// "LayoutElementReference"
, LayoutLengthUnit(*this)	// "LayoutLengthUnit"
, LayoutObject(*this)	// "LayoutObject"
, LengthType(*this)	// "LengthType"
, LengthUnit(*this)	// "LengthUnit"
, LimitedUniqueEntity(*this)	// "LimitedUniqueEntity"
, LocationDefinition(*this)	// "LocationDefinition"
, LotInformation(*this)	// "LotInformation"
, MachineProgramData(*this)	// "MachineProgramData"
, MaintenancePlan(*this)	// "MaintenancePlan"
, MaintenancePlanReference(*this)	// "MaintenancePlanReference"
, MaintenanceProcess(*this)	// "MaintenanceProcess"
, MaintenanceProcessConstraint(*this)	// "MaintenanceProcessConstraint"
, MaintenanceProcessGroup(*this)	// "MaintenanceProcessGroup"
, MaintenanceProcessReference(*this)	// "MaintenanceProcessReference"
, Metadata(*this)	// "Metadata"
, MultiSchemaCMSDValidator(*this)	// "MultiSchemaCMSDValidator"
, NewSetup(*this)	// "NewSetup"
, NonNegativeInteger(*this)	// "NonNegativeInteger"
, NotifyPropertyChangeBase(*this)	// "NotifyPropertyChangeBase"
, Order(*this)	// "Order"
, OrderInformationReference(*this)	// "OrderInformationReference"
, OrderLine(*this)	// "OrderLine"
, OrderLinePartDescription(*this)	// "OrderLinePartDescription"
, OrderLineServiceDescription(*this)	// "OrderLineServiceDescription"
, OrderStatus(*this)	// "OrderStatus"
, Part(*this)	// "Part"
, PartGroup(*this)	// "PartGroup"
, PartProductionStatus(*this)	// "PartProductionStatus"
, PartReference(*this)	// "PartReference"
, PartType(*this)	// "PartType"
, PartTypeReference(*this)	// "PartTypeReference"
, PerMeasuredAmountPackaging(*this)	// "PerMeasuredAmountPackaging"
, PerPiecePackaging(*this)	// "PerPiecePackaging"
, Phone(*this)	// "Phone"
, Placement(*this)	// "Placement"
, PowerType(*this)	// "PowerType"
, PowerUnit(*this)	// "PowerUnit"
, PrecedenceConstraint(*this)	// "PrecedenceConstraint"
, PrecedenceRelationship(*this)	// "PrecedenceRelationship"
, Process(*this)	// "Process"
, ProcessConstraint(*this)	// "ProcessConstraint"
, ProcessGroup(*this)	// "ProcessGroup"
, ProcessGroupType(*this)	// "ProcessGroupType"
, ProcessPlan(*this)	// "ProcessPlan"
, ProcessPlanReference(*this)	// "ProcessPlanReference"
, ProcessReference(*this)	// "ProcessReference"
, Property(*this)	// "Property"
, PropertyCardinality(*this)	// "PropertyCardinality"
, PropertyDataTypeDescription(*this)	// "PropertyDataTypeDescription"
, PropertyDescription(*this)	// "PropertyDescription"
, PropertyDescriptionReference(*this)	// "PropertyDescriptionReference"
, PropertyExtensibleEntity(*this)	// "PropertyExtensibleEntity"
, PropertyType(*this)	// "PropertyType"
, QuantityType(*this)	// "QuantityType"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
, ReferenceMaterialReference(*this)	// "ReferenceMaterialReference"
, ReferenceProperty(*this)	// "ReferenceProperty"
, ReferenceTypeName(*this)	// "ReferenceTypeName"
, ReferencingEntity(*this)	// "ReferencingEntity"
, RelaxNGCMSDValidator(*this)	// "RelaxNGCMSDValidator"
, RelaxNGCMSDValidatorWithCache(*this)	// "RelaxNGCMSDValidatorWithCache"
, RequiredApplication(*this)	// "RequiredApplication"
, Resource(*this)	// "Resource"
, ResourceClass(*this)	// "ResourceClass"
, ResourceClassReference(*this)	// "ResourceClassReference"
, ResourceGroupInformation(*this)	// "ResourceGroupInformation"
, ResourceGroupMember(*this)	// "ResourceGroupMember"
, ResourceReference(*this)	// "ResourceReference"
, ResourceStatus(*this)	// "ResourceStatus"
, ResourceType(*this)	// "ResourceType"
, ResourcesRequired(*this)	// "ResourcesRequired"
, Rotation(*this)	// "Rotation"
, Scaling(*this)	// "Scaling"
, Schedule(*this)	// "Schedule"
, ScheduleInformationReference(*this)	// "ScheduleInformationReference"
, ScheduleItem(*this)	// "ScheduleItem"
, ScheduleItemEffortDescription(*this)	// "ScheduleItemEffortDescription"
, SegmentShape(*this)	// "SegmentShape"
, SegmentType(*this)	// "SegmentType"
, SetupChangeoverDefinition(*this)	// "SetupChangeoverDefinition"
, SetupChangeoverReference(*this)	// "SetupChangeoverReference"
, SetupDefinition(*this)	// "SetupDefinition"
, SetupDefinitionReference(*this)	// "SetupDefinitionReference"
, ShapeDescription(*this)	// "ShapeDescription"
, ShapeDescriptionType(*this)	// "ShapeDescriptionType"
, ShapeLabelDefinition(*this)	// "ShapeLabelDefinition"
, Shift(*this)	// "Shift"
, ShiftSchedule(*this)	// "ShiftSchedule"
, SimpleDataTypeName(*this)	// "SimpleDataTypeName"
, SimpleProperty(*this)	// "SimpleProperty"
, SkillDefinition(*this)	// "SkillDefinition"
, SkillLevel(*this)	// "SkillLevel"
, SkillReference(*this)	// "SkillReference"
, SpatialDimension(*this)	// "SpatialDimension"
, SpeedType(*this)	// "SpeedType"
, SpeedUnit(*this)	// "SpeedUnit"
, StochasticProperty(*this)	// "StochasticProperty"
, TemperatureType(*this)	// "TemperatureType"
, TemperatureUnit(*this)	// "TemperatureUnit"
, TextAnchorLocation(*this)	// "TextAnchorLocation"
, TextualAnnotation(*this)	// "TextualAnnotation"
, Time(*this)	// "Time"
, TimeUnit(*this)	// "TimeUnit"
, Timestamp(*this)	// "Timestamp"
, TransformationOperation(*this)	// "TransformationOperation"
, Translation(*this)	// "Translation"
, URI(*this)	// "URI"
, UniqueEntity(*this)	// "UniqueEntity"
, UniqueEntityType(*this)	// "UniqueEntityType"
, UnitDefaults(*this)	// "UnitDefaults"
, UnitTypeName(*this)	// "UnitTypeName"
, ValidationResult(*this)	// "ValidationResult"
, VariableCostData(*this)	// "VariableCostData"
, VolumeType(*this)	// "VolumeType"
, VolumeUnit(*this)	// "VolumeUnit"
, WeightType(*this)	// "WeightType"
, WeightUnit(*this)	// "WeightUnit"
, XSDCMSDValidator(*this)	// "XSDCMSDValidator"
, all(*this)	// "all"
, annotation(*this)	// "annotation"
, any(*this)	// "any"
, anyAttribute(*this)	// "anyAttribute"
, appinfo(*this)	// "appinfo"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, choice(*this)	// "choice"
, complexContent(*this)	// "complexContent"
, complexType(*this)	// "complexType"
, documentation(*this)	// "documentation"
, element(*this)	// "element"
, enumeration(*this)	// "enumeration"
, field(*this)	// "field"
, fractionDigits(*this)	// "fractionDigits"
, group(*this)	// "group"
, import(*this)	// "import"
, include(*this)	// "include"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
, length(*this)	// "length"
, list(*this)	// "list"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, maxLength(*this)	// "maxLength"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, minLength(*this)	// "minLength"
, notation(*this)	// "notation"
, pattern(*this)	// "pattern"
, redefine(*this)	// "redefine"
, restriction(*this)	// "restriction"
, schema(*this)	// "schema"
, selector(*this)	// "selector"
, sequence(*this)	// "sequence"
, simpleContent(*this)	// "simpleContent"
, simpleType(*this)	// "simpleType"
, totalDigits(*this)	// "totalDigits"
, union2(*this)	// "union"
, unique(*this)	// "unique"
, whiteSpace(*this)	// "whiteSpace"
{
}

CCMSD::CCMSD(CCMSD const& other)
: TypeBase(other.GetNode())
, AbstractEntityReference(*this)	// "AbstractEntityReference"
, Address(*this)	// "Address"
, AreaType(*this)	// "AreaType"
, AreaUnit(*this)	// "AreaUnit"
, ArrayOfTransformationOperation(*this)	// "ArrayOfTransformationOperation"
, AvailabilityException(*this)	// "AvailabilityException"
, BaseLocation(*this)	// "BaseLocation"
, BasicShape(*this)	// "BasicShape"
, BasicShapeType(*this)	// "BasicShapeType"
, BillOfMaterials(*this)	// "BillOfMaterials"
, BillOfMaterialsComponent(*this)	// "BillOfMaterialsComponent"
, BillOfMaterialsComponentReference(*this)	// "BillOfMaterialsComponentReference"
, BillOfMaterialsReference(*this)	// "BillOfMaterialsReference"
, BoundaryDefinition(*this)	// "BoundaryDefinition"
, Break2(*this)	// "Break"
, CMSDDecimal(*this)	// "CMSDDecimal"
, CMSDDocument(*this)	// "CMSDDocument"
, CMSDDocumentReference(*this)	// "CMSDDocumentReference"
, CMSDDocumentTest(*this)	// "CMSDDocumentTest"
, Calendar(*this)	// "Calendar"
, CalendarReference(*this)	// "CalendarReference"
, CardinalitySpecification(*this)	// "CardinalitySpecification"
, ColorHighlight(*this)	// "ColorHighlight"
, CommunicationMethod(*this)	// "CommunicationMethod"
, CommunicationMethodGroup(*this)	// "CommunicationMethodGroup"
, Connection(*this)	// "Connection"
, ConnectionType(*this)	// "ConnectionType"
, ContactInformation(*this)	// "ContactInformation"
, ContactParty(*this)	// "ContactParty"
, Coordinate2D(*this)	// "Coordinate2D"
, Coordinate3D(*this)	// "Coordinate3D"
, CoordinateSystem(*this)	// "CoordinateSystem"
, CostAllocationData(*this)	// "CostAllocationData"
, CostCategory(*this)	// "CostCategory"
, CostType(*this)	// "CostType"
, CurrencyType(*this)	// "CurrencyType"
, DataSection(*this)	// "DataSection"
, Date(*this)	// "Date"
, Day(*this)	// "Day"
, Distribution(*this)	// "Distribution"
, DistributionDefinition(*this)	// "DistributionDefinition"
, DistributionDefinitionReference(*this)	// "DistributionDefinitionReference"
, DistributionParameter(*this)	// "DistributionParameter"
, Duration(*this)	// "Duration"
, ElapsedTimeType(*this)	// "ElapsedTimeType"
, Email(*this)	// "Email"
, Entity(*this)	// "Entity"
, Event(*this)	// "Event"
, GraphicDescription(*this)	// "GraphicDescription"
, GraphicDescriptionType(*this)	// "GraphicDescriptionType"
, GrossDimensions(*this)	// "GrossDimensions"
, HeaderSection(*this)	// "HeaderSection"
, Holiday(*this)	// "Holiday"
, IdentifiableEntity(*this)	// "IdentifiableEntity"
, Identifier(*this)	// "Identifier"
, ImageResolution(*this)	// "ImageResolution"
, Integer(*this)	// "Integer"
, InventoryItem(*this)	// "InventoryItem"
, InventoryItemClass(*this)	// "InventoryItemClass"
, InventoryItemClassReference(*this)	// "InventoryItemClassReference"
, InventoryItemReference(*this)	// "InventoryItemReference"
, InventoryItemType(*this)	// "InventoryItemType"
, ItemPackaging(*this)	// "ItemPackaging"
, Job(*this)	// "Job"
, JobConstraint(*this)	// "JobConstraint"
, JobEffortDescription(*this)	// "JobEffortDescription"
, JobReference(*this)	// "JobReference"
, JobStatus(*this)	// "JobStatus"
, Layout(*this)	// "Layout"
, LayoutElement(*this)	// "LayoutElement"
, LayoutElementReference(*this)	// "LayoutElementReference"
, LayoutLengthUnit(*this)	// "LayoutLengthUnit"
, LayoutObject(*this)	// "LayoutObject"
, LengthType(*this)	// "LengthType"
, LengthUnit(*this)	// "LengthUnit"
, LimitedUniqueEntity(*this)	// "LimitedUniqueEntity"
, LocationDefinition(*this)	// "LocationDefinition"
, LotInformation(*this)	// "LotInformation"
, MachineProgramData(*this)	// "MachineProgramData"
, MaintenancePlan(*this)	// "MaintenancePlan"
, MaintenancePlanReference(*this)	// "MaintenancePlanReference"
, MaintenanceProcess(*this)	// "MaintenanceProcess"
, MaintenanceProcessConstraint(*this)	// "MaintenanceProcessConstraint"
, MaintenanceProcessGroup(*this)	// "MaintenanceProcessGroup"
, MaintenanceProcessReference(*this)	// "MaintenanceProcessReference"
, Metadata(*this)	// "Metadata"
, MultiSchemaCMSDValidator(*this)	// "MultiSchemaCMSDValidator"
, NewSetup(*this)	// "NewSetup"
, NonNegativeInteger(*this)	// "NonNegativeInteger"
, NotifyPropertyChangeBase(*this)	// "NotifyPropertyChangeBase"
, Order(*this)	// "Order"
, OrderInformationReference(*this)	// "OrderInformationReference"
, OrderLine(*this)	// "OrderLine"
, OrderLinePartDescription(*this)	// "OrderLinePartDescription"
, OrderLineServiceDescription(*this)	// "OrderLineServiceDescription"
, OrderStatus(*this)	// "OrderStatus"
, Part(*this)	// "Part"
, PartGroup(*this)	// "PartGroup"
, PartProductionStatus(*this)	// "PartProductionStatus"
, PartReference(*this)	// "PartReference"
, PartType(*this)	// "PartType"
, PartTypeReference(*this)	// "PartTypeReference"
, PerMeasuredAmountPackaging(*this)	// "PerMeasuredAmountPackaging"
, PerPiecePackaging(*this)	// "PerPiecePackaging"
, Phone(*this)	// "Phone"
, Placement(*this)	// "Placement"
, PowerType(*this)	// "PowerType"
, PowerUnit(*this)	// "PowerUnit"
, PrecedenceConstraint(*this)	// "PrecedenceConstraint"
, PrecedenceRelationship(*this)	// "PrecedenceRelationship"
, Process(*this)	// "Process"
, ProcessConstraint(*this)	// "ProcessConstraint"
, ProcessGroup(*this)	// "ProcessGroup"
, ProcessGroupType(*this)	// "ProcessGroupType"
, ProcessPlan(*this)	// "ProcessPlan"
, ProcessPlanReference(*this)	// "ProcessPlanReference"
, ProcessReference(*this)	// "ProcessReference"
, Property(*this)	// "Property"
, PropertyCardinality(*this)	// "PropertyCardinality"
, PropertyDataTypeDescription(*this)	// "PropertyDataTypeDescription"
, PropertyDescription(*this)	// "PropertyDescription"
, PropertyDescriptionReference(*this)	// "PropertyDescriptionReference"
, PropertyExtensibleEntity(*this)	// "PropertyExtensibleEntity"
, PropertyType(*this)	// "PropertyType"
, QuantityType(*this)	// "QuantityType"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
, ReferenceMaterialReference(*this)	// "ReferenceMaterialReference"
, ReferenceProperty(*this)	// "ReferenceProperty"
, ReferenceTypeName(*this)	// "ReferenceTypeName"
, ReferencingEntity(*this)	// "ReferencingEntity"
, RelaxNGCMSDValidator(*this)	// "RelaxNGCMSDValidator"
, RelaxNGCMSDValidatorWithCache(*this)	// "RelaxNGCMSDValidatorWithCache"
, RequiredApplication(*this)	// "RequiredApplication"
, Resource(*this)	// "Resource"
, ResourceClass(*this)	// "ResourceClass"
, ResourceClassReference(*this)	// "ResourceClassReference"
, ResourceGroupInformation(*this)	// "ResourceGroupInformation"
, ResourceGroupMember(*this)	// "ResourceGroupMember"
, ResourceReference(*this)	// "ResourceReference"
, ResourceStatus(*this)	// "ResourceStatus"
, ResourceType(*this)	// "ResourceType"
, ResourcesRequired(*this)	// "ResourcesRequired"
, Rotation(*this)	// "Rotation"
, Scaling(*this)	// "Scaling"
, Schedule(*this)	// "Schedule"
, ScheduleInformationReference(*this)	// "ScheduleInformationReference"
, ScheduleItem(*this)	// "ScheduleItem"
, ScheduleItemEffortDescription(*this)	// "ScheduleItemEffortDescription"
, SegmentShape(*this)	// "SegmentShape"
, SegmentType(*this)	// "SegmentType"
, SetupChangeoverDefinition(*this)	// "SetupChangeoverDefinition"
, SetupChangeoverReference(*this)	// "SetupChangeoverReference"
, SetupDefinition(*this)	// "SetupDefinition"
, SetupDefinitionReference(*this)	// "SetupDefinitionReference"
, ShapeDescription(*this)	// "ShapeDescription"
, ShapeDescriptionType(*this)	// "ShapeDescriptionType"
, ShapeLabelDefinition(*this)	// "ShapeLabelDefinition"
, Shift(*this)	// "Shift"
, ShiftSchedule(*this)	// "ShiftSchedule"
, SimpleDataTypeName(*this)	// "SimpleDataTypeName"
, SimpleProperty(*this)	// "SimpleProperty"
, SkillDefinition(*this)	// "SkillDefinition"
, SkillLevel(*this)	// "SkillLevel"
, SkillReference(*this)	// "SkillReference"
, SpatialDimension(*this)	// "SpatialDimension"
, SpeedType(*this)	// "SpeedType"
, SpeedUnit(*this)	// "SpeedUnit"
, StochasticProperty(*this)	// "StochasticProperty"
, TemperatureType(*this)	// "TemperatureType"
, TemperatureUnit(*this)	// "TemperatureUnit"
, TextAnchorLocation(*this)	// "TextAnchorLocation"
, TextualAnnotation(*this)	// "TextualAnnotation"
, Time(*this)	// "Time"
, TimeUnit(*this)	// "TimeUnit"
, Timestamp(*this)	// "Timestamp"
, TransformationOperation(*this)	// "TransformationOperation"
, Translation(*this)	// "Translation"
, URI(*this)	// "URI"
, UniqueEntity(*this)	// "UniqueEntity"
, UniqueEntityType(*this)	// "UniqueEntityType"
, UnitDefaults(*this)	// "UnitDefaults"
, UnitTypeName(*this)	// "UnitTypeName"
, ValidationResult(*this)	// "ValidationResult"
, VariableCostData(*this)	// "VariableCostData"
, VolumeType(*this)	// "VolumeType"
, VolumeUnit(*this)	// "VolumeUnit"
, WeightType(*this)	// "WeightType"
, WeightUnit(*this)	// "WeightUnit"
, XSDCMSDValidator(*this)	// "XSDCMSDValidator"
, all(*this)	// "all"
, annotation(*this)	// "annotation"
, any(*this)	// "any"
, anyAttribute(*this)	// "anyAttribute"
, appinfo(*this)	// "appinfo"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, choice(*this)	// "choice"
, complexContent(*this)	// "complexContent"
, complexType(*this)	// "complexType"
, documentation(*this)	// "documentation"
, element(*this)	// "element"
, enumeration(*this)	// "enumeration"
, field(*this)	// "field"
, fractionDigits(*this)	// "fractionDigits"
, group(*this)	// "group"
, import(*this)	// "import"
, include(*this)	// "include"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
, length(*this)	// "length"
, list(*this)	// "list"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, maxLength(*this)	// "maxLength"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, minLength(*this)	// "minLength"
, notation(*this)	// "notation"
, pattern(*this)	// "pattern"
, redefine(*this)	// "redefine"
, restriction(*this)	// "restriction"
, schema(*this)	// "schema"
, selector(*this)	// "selector"
, sequence(*this)	// "sequence"
, simpleContent(*this)	// "simpleContent"
, simpleType(*this)	// "simpleType"
, totalDigits(*this)	// "totalDigits"
, union2(*this)	// "union"
, unique(*this)	// "unique"
, whiteSpace(*this)	// "whiteSpace"
{
}

void CCMSD::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CMSD"), _T(""));
}

CCMSD CCMSD::LoadFromFile(const string_type& fileName)
{
	return CCMSD(MsxmlTreeOperations::LoadDocument(fileName));
}

CCMSD CCMSD::LoadFromString(const string_type& text)
{
	return CCMSD(MsxmlTreeOperations::LoadXml(text));
}

void CCMSD::SaveToFile(const string_type& fileName, bool prettyPrint)
{
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, _T("UTF-8"), false, false);
}

void CCMSD::SaveToFile(const string_type& fileName, bool prettyPrint, const string_type& encoding)
{
	std::vector<unsigned char> result;
    string_type sTmpEnc( encoding);
    std::transform( sTmpEnc.begin(), sTmpEnc.end(), sTmpEnc.begin(), _totupper);
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, encoding, _tcscmp(sTmpEnc.c_str(), _T("UTF-16BE")) == 0, _tcscmp(sTmpEnc.c_str(), _T("UTF-16")) == 0);
}

void CCMSD::SaveToFile(const string_type& fileName, bool prettyPrint, const string_type& encoding, bool bBigEndian, bool bBOM)
{
	MsxmlTreeOperations::SaveDocument(GetDocumentNode(), fileName, prettyPrint, encoding, bBigEndian, bBOM);
}

string_type CCMSD::SaveToString(bool prettyPrint)
{
	return MsxmlTreeOperations::SaveXml(GetDocumentNode(), prettyPrint);
}

CCMSD CCMSD::CreateDocument()
{
	return MsxmlTreeOperations::CreateDocument();
}

void CCMSD::DestroyDocument()
{
	MsxmlTreeOperations::DocumentType doc = GetDocumentNode();
	MsxmlTreeOperations::FreeDocument(doc);
	m_node = 0;
}

void CCMSD::SetDTDLocation(const string_type& dtdLocation)
{

	throw altova::InvalidOperationException(_T("This operation is not supported by MSXML."));

}

void CCMSD::SetSchemaLocation(const string_type& schemaLocation)
{

	// find root element
	MSXML2::IXMLDOMNodePtr node = GetNode()->firstChild;
	while (node != 0 && node->nodeType != MSXML2::NODE_ELEMENT)
		node = node->nextSibling;

	if (node == 0)
		throw altova::InvalidOperationException(_T("You have to add a root element before setting schema location."));

	MSXML2::IXMLDOMElementPtr rootElement = node;
	string_type namespaceURI;
	if( rootElement->namespaceURI.length() > 0 )
		namespaceURI = rootElement->namespaceURI;

	
	
	if (namespaceURI.empty())
		MsxmlTreeOperations::SetAttribute(rootElement, _T("xsi:noNamespaceSchemaLocation"), _T("http://www.w3.org/2001/XMLSchema-instance"), schemaLocation);
	else
		MsxmlTreeOperations::SetAttribute(rootElement, _T("xsi:schemaLocation"), _T("http://www.w3.org/2001/XMLSchema-instance"), namespaceURI + _T(" ") + schemaLocation);

}

CCMSD CCMSD::LoadFromBinary(const std::vector<unsigned char>& data)
{
	return MsxmlTreeOperations::LoadFromBinary(data);
}

std::vector<unsigned char> CCMSD::SaveToBinary(bool prettyPrint)
{
	return MsxmlTreeOperations::SaveToBinary((MsxmlTreeOperations::DocumentType)GetNode(), prettyPrint);
}

std::vector<unsigned char> CCMSD::SaveToBinary(bool prettyPrint, const string_type& encoding)
{
	std::vector<unsigned char> result;
    string_type sTmpEnc( encoding);
    std::transform( sTmpEnc.begin(), sTmpEnc.end(), sTmpEnc.begin(), _totupper);
	MsxmlTreeOperations::SaveToBinary(result, (MsxmlTreeOperations::DocumentType)GetNode(), prettyPrint, encoding, _tcscmp(sTmpEnc.c_str(), _T("UTF-16BE")) == 0, _tcscmp(sTmpEnc.c_str(), _T("UTF-16")) == 0);
	return result;
}

std::vector<unsigned char> CCMSD::SaveToBinary(bool prettyPrint, const string_type& encoding, bool bBigEndian, bool bBOM)
{
	std::vector<unsigned char> result;
	MsxmlTreeOperations::SaveToBinary(result, (MsxmlTreeOperations::DocumentType)GetNode(), prettyPrint, encoding, bBigEndian, bBOM);
	return result;
}




CAreaUnitType::CAreaUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CAreaUnitType::CAreaUnitType(CAreaUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CAreaUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("AreaUnit"), _T(""));
}

CBaseLocationType::CBaseLocationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CBaseLocationType::CBaseLocationType(CBaseLocationType const& other)
: TypeBase(other.GetNode())
{
}

void CBaseLocationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BaseLocation"), _T(""));
}

CBasicShapeTypeType::CBasicShapeTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CBasicShapeTypeType::CBasicShapeTypeType(CBasicShapeTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CBasicShapeTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("BasicShapeType"), _T(""));
}

CCMSDDecimalType::CCMSDDecimalType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CCMSDDecimalType::CCMSDDecimalType(CCMSDDecimalType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CschemaType::CschemaType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::CopenAttrs(node)
, targetNamespace(*this)	// "@targetNamespace"
, version(*this)	// "@version"
, finalDefault(*this)	// "@finalDefault"
, blockDefault(*this)	// "@blockDefault"
, attributeFormDefault(*this)	// "@attributeFormDefault"
, elementFormDefault(*this)	// "@elementFormDefault"
, id(*this)	// "@id"
, lang(*this)	// "@lang"
, include(*this)	// "include"
, import(*this)	// "import"
, redefine(*this)	// "redefine"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, group(*this)	// "group"
, attributeGroup(*this)	// "attributeGroup"
, element(*this)	// "element"
, attribute(*this)	// "attribute"
, notation(*this)	// "notation"
{
}

CschemaType::CschemaType(CschemaType const& other)
: ::CMSD::xs::CopenAttrs(other.GetNode())
, targetNamespace(*this)	// "@targetNamespace"
, version(*this)	// "@version"
, finalDefault(*this)	// "@finalDefault"
, blockDefault(*this)	// "@blockDefault"
, attributeFormDefault(*this)	// "@attributeFormDefault"
, elementFormDefault(*this)	// "@elementFormDefault"
, id(*this)	// "@id"
, lang(*this)	// "@lang"
, include(*this)	// "include"
, import(*this)	// "import"
, redefine(*this)	// "redefine"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, group(*this)	// "group"
, attributeGroup(*this)	// "attributeGroup"
, element(*this)	// "element"
, attribute(*this)	// "attribute"
, notation(*this)	// "notation"
{
}


CCardinalitySpecificationType::CCardinalitySpecificationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CCardinalitySpecificationType::CCardinalitySpecificationType(CCardinalitySpecificationType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CConnectionTypeType::CConnectionTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CConnectionTypeType::CConnectionTypeType(CConnectionTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CConnectionTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ConnectionType"), _T(""));
}

CCoordinateSystemType::CCoordinateSystemType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCoordinateSystemType::CCoordinateSystemType(CCoordinateSystemType const& other)
: TypeBase(other.GetNode())
{
}

void CCoordinateSystemType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CoordinateSystem"), _T(""));
}

CCostCategoryType::CCostCategoryType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCostCategoryType::CCostCategoryType(CCostCategoryType const& other)
: TypeBase(other.GetNode())
{
}

void CCostCategoryType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CostCategory"), _T(""));
}

CCostTypeType::CCostTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CCostTypeType::CCostTypeType(CCostTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CCostTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("CostType"), _T(""));
}

CDataSectionType::CDataSectionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, UniqueEntity(*this)	// "UniqueEntity"
{
}

CDataSectionType::CDataSectionType(CDataSectionType const& other)
: TypeBase(other.GetNode())
, UniqueEntity(*this)	// "UniqueEntity"
{
}


CDateType::CDateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDateType::CDateType(CDateType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDayType::CDayType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CDayType::CDayType(CDayType const& other)
: TypeBase(other.GetNode())
{
}

void CDayType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("Day"), _T(""));
}

CGraphicDescriptionTypeType::CGraphicDescriptionTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CGraphicDescriptionTypeType::CGraphicDescriptionTypeType(CGraphicDescriptionTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CGraphicDescriptionTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("GraphicDescriptionType"), _T(""));
}

CIdentifierType::CIdentifierType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CIdentifierType::CIdentifierType(CIdentifierType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CIntegerType::CIntegerType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CIntegerType::CIntegerType(CIntegerType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CInventoryItemTypeType::CInventoryItemTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CInventoryItemTypeType::CInventoryItemTypeType(CInventoryItemTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CInventoryItemTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("InventoryItemType"), _T(""));
}

CJobStatusType::CJobStatusType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CJobStatusType::CJobStatusType(CJobStatusType const& other)
: TypeBase(other.GetNode())
{
}

void CJobStatusType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("JobStatus"), _T(""));
}

CLayoutLengthUnitType::CLayoutLengthUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CLayoutLengthUnitType::CLayoutLengthUnitType(CLayoutLengthUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CLayoutLengthUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LayoutLengthUnit"), _T(""));
}

CLengthUnitType::CLengthUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CLengthUnitType::CLengthUnitType(CLengthUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CLengthUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("LengthUnit"), _T(""));
}

CNonNegativeIntegerType::CNonNegativeIntegerType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CNonNegativeIntegerType::CNonNegativeIntegerType(CNonNegativeIntegerType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


COrderStatusType::COrderStatusType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

COrderStatusType::COrderStatusType(COrderStatusType const& other)
: TypeBase(other.GetNode())
{
}

void COrderStatusType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("OrderStatus"), _T(""));
}

CPartProductionStatusType::CPartProductionStatusType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPartProductionStatusType::CPartProductionStatusType(CPartProductionStatusType const& other)
: TypeBase(other.GetNode())
{
}

void CPartProductionStatusType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PartProductionStatus"), _T(""));
}

CPowerUnitType::CPowerUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPowerUnitType::CPowerUnitType(CPowerUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CPowerUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PowerUnit"), _T(""));
}

CPrecedenceRelationshipType::CPrecedenceRelationshipType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPrecedenceRelationshipType::CPrecedenceRelationshipType(CPrecedenceRelationshipType const& other)
: TypeBase(other.GetNode())
{
}

void CPrecedenceRelationshipType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PrecedenceRelationship"), _T(""));
}

CProcessGroupTypeType::CProcessGroupTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CProcessGroupTypeType::CProcessGroupTypeType(CProcessGroupTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CProcessGroupTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ProcessGroupType"), _T(""));
}

CPropertyExtensibleEntityType::CPropertyExtensibleEntityType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPropertyExtensibleEntityType::CPropertyExtensibleEntityType(CPropertyExtensibleEntityType const& other)
: TypeBase(other.GetNode())
{
}

void CPropertyExtensibleEntityType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PropertyExtensibleEntity"), _T(""));
}

CPropertyTypeType::CPropertyTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CPropertyTypeType::CPropertyTypeType(CPropertyTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CPropertyTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("PropertyType"), _T(""));
}

CReferenceTypeNameType::CReferenceTypeNameType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CReferenceTypeNameType::CReferenceTypeNameType(CReferenceTypeNameType const& other)
: TypeBase(other.GetNode())
{
}

void CReferenceTypeNameType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ReferenceTypeName"), _T(""));
}

CResourceStatusType::CResourceStatusType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CResourceStatusType::CResourceStatusType(CResourceStatusType const& other)
: TypeBase(other.GetNode())
{
}

void CResourceStatusType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceStatus"), _T(""));
}

CResourceTypeType::CResourceTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CResourceTypeType::CResourceTypeType(CResourceTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CResourceTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ResourceType"), _T(""));
}

CSegmentTypeType::CSegmentTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSegmentTypeType::CSegmentTypeType(CSegmentTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CSegmentTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SegmentType"), _T(""));
}

CShapeDescriptionTypeType::CShapeDescriptionTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CShapeDescriptionTypeType::CShapeDescriptionTypeType(CShapeDescriptionTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CShapeDescriptionTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("ShapeDescriptionType"), _T(""));
}

CSimpleDataTypeNameType::CSimpleDataTypeNameType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSimpleDataTypeNameType::CSimpleDataTypeNameType(CSimpleDataTypeNameType const& other)
: TypeBase(other.GetNode())
{
}

void CSimpleDataTypeNameType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SimpleDataTypeName"), _T(""));
}

CSpeedUnitType::CSpeedUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CSpeedUnitType::CSpeedUnitType(CSpeedUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CSpeedUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("SpeedUnit"), _T(""));
}

CTemperatureUnitType::CTemperatureUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTemperatureUnitType::CTemperatureUnitType(CTemperatureUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CTemperatureUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TemperatureUnit"), _T(""));
}

CTextAnchorLocationType::CTextAnchorLocationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTextAnchorLocationType::CTextAnchorLocationType(CTextAnchorLocationType const& other)
: TypeBase(other.GetNode())
{
}

void CTextAnchorLocationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TextAnchorLocation"), _T(""));
}

CTimeType::CTimeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CTimeType::CTimeType(CTimeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CTimeUnitType::CTimeUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CTimeUnitType::CTimeUnitType(CTimeUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CTimeUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("TimeUnit"), _T(""));
}

CTimestampType::CTimestampType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CTimestampType::CTimestampType(CTimestampType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CURIType::CURIType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CURIType::CURIType(CURIType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CUniqueEntityTypeType::CUniqueEntityTypeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUniqueEntityTypeType::CUniqueEntityTypeType(CUniqueEntityTypeType const& other)
: TypeBase(other.GetNode())
{
}

void CUniqueEntityTypeType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UniqueEntityType"), _T(""));
}

CUnitTypeNameType::CUnitTypeNameType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CUnitTypeNameType::CUnitTypeNameType(CUnitTypeNameType const& other)
: TypeBase(other.GetNode())
{
}

void CUnitTypeNameType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("UnitTypeName"), _T(""));
}

CVolumeUnitType::CVolumeUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CVolumeUnitType::CVolumeUnitType(CVolumeUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CVolumeUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("VolumeUnit"), _T(""));
}

CWeightUnitType::CWeightUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CWeightUnitType::CWeightUnitType(CWeightUnitType const& other)
: TypeBase(other.GetNode())
{
}

void CWeightUnitType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("WeightUnit"), _T(""));
}

CannotationType::CannotationType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::CopenAttrs(node)
, id(*this)	// "@id"
, appinfo(*this)	// "appinfo"
, documentation(*this)	// "documentation"
{
}

CannotationType::CannotationType(CannotationType const& other)
: ::CMSD::xs::CopenAttrs(other.GetNode())
, id(*this)	// "@id"
, appinfo(*this)	// "appinfo"
, documentation(*this)	// "documentation"
{
}


CappinfoType::CappinfoType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, source(*this)	// "@source"
{
}

CappinfoType::CappinfoType(CappinfoType const& other)
: TypeBase(other.GetNode())
, source(*this)	// "@source"
{
}

void CappinfoType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("anySimpleType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CdocumentationType::CdocumentationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, source(*this)	// "@source"
, lang(*this)	// "@lang"
{
}

CdocumentationType::CdocumentationType(CdocumentationType const& other)
: TypeBase(other.GetNode())
, source(*this)	// "@source"
, lang(*this)	// "@lang"
{
}

void CdocumentationType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("anySimpleType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CanyType::CanyType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cwildcard(node)
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
{
}

CanyType::CanyType(CanyType const& other)
: ::CMSD::xs::Cwildcard(other.GetNode())
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
{
}


CcomplexContentType::CcomplexContentType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, mixed(*this)	// "@mixed"
, restriction(*this)	// "restriction"
, extension(*this)	// "extension"
{
}

CcomplexContentType::CcomplexContentType(CcomplexContentType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, mixed(*this)	// "@mixed"
, restriction(*this)	// "restriction"
, extension(*this)	// "extension"
{
}


CfieldType::CfieldType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, xpath(*this)	// "@xpath"
{
}

CfieldType::CfieldType(CfieldType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, xpath(*this)	// "@xpath"
{
}


CxpathType::CxpathType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CxpathType::CxpathType(CxpathType const& other)
: TypeBase(other.GetNode())
{
}


CimportType::CimportType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, namespace2(*this)	// "@namespace"
, schemaLocation(*this)	// "@schemaLocation"
{
}

CimportType::CimportType(CimportType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, namespace2(*this)	// "@namespace"
, schemaLocation(*this)	// "@schemaLocation"
{
}


CincludeType::CincludeType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, schemaLocation(*this)	// "@schemaLocation"
{
}

CincludeType::CincludeType(CincludeType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, schemaLocation(*this)	// "@schemaLocation"
{
}


CkeyrefType::CkeyrefType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Ckeybase(node)
, refer(*this)	// "@refer"
{
}

CkeyrefType::CkeyrefType(CkeyrefType const& other)
: ::CMSD::xs::Ckeybase(other.GetNode())
, refer(*this)	// "@refer"
{
}


ClistType::ClistType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, itemType(*this)	// "@itemType"
, simpleType(*this)	// "simpleType"
{
}

ClistType::ClistType(ClistType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, itemType(*this)	// "@itemType"
, simpleType(*this)	// "simpleType"
{
}


CnotationType::CnotationType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, public2(*this)	// "@public"
, system2(*this)	// "@system"
{
}

CnotationType::CnotationType(CnotationType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, public2(*this)	// "@public"
, system2(*this)	// "@system"
{
}


CpatternType::CpatternType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

CpatternType::CpatternType(CpatternType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}


CredefineType::CredefineType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::CopenAttrs(node)
, schemaLocation(*this)	// "@schemaLocation"
, id(*this)	// "@id"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, group(*this)	// "group"
, attributeGroup(*this)	// "attributeGroup"
{
}

CredefineType::CredefineType(CredefineType const& other)
: ::CMSD::xs::CopenAttrs(other.GetNode())
, schemaLocation(*this)	// "@schemaLocation"
, id(*this)	// "@id"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, group(*this)	// "group"
, attributeGroup(*this)	// "attributeGroup"
{
}


CrestrictionType::CrestrictionType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, base(*this)	// "@base"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
{
}

CrestrictionType::CrestrictionType(CrestrictionType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, base(*this)	// "@base"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
{
}


CtotalDigitsType::CtotalDigitsType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

CtotalDigitsType::CtotalDigitsType(CtotalDigitsType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}


CwhiteSpaceType::CwhiteSpaceType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

CwhiteSpaceType::CwhiteSpaceType(CwhiteSpaceType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}


CsimpleContentType::CsimpleContentType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, restriction(*this)	// "restriction"
, extension(*this)	// "extension"
{
}

CsimpleContentType::CsimpleContentType(CsimpleContentType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, restriction(*this)	// "restriction"
, extension(*this)	// "extension"
{
}


CunionType::CunionType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, memberTypes(*this)	// "@memberTypes"
, simpleType(*this)	// "simpleType"
{
}

CunionType::CunionType(CunionType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, memberTypes(*this)	// "@memberTypes"
, simpleType(*this)	// "simpleType"
{
}


CmemberTypesType::CmemberTypesType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CmemberTypesType::CmemberTypesType(CmemberTypesType const& other)
: TypeBase(other.GetNode())
{
}


CValueType::CValueType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType::CValueType(CValueType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CExceptionDateType::CExceptionDateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CExceptionDateType::CExceptionDateType(CExceptionDateType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CHeightType::CHeightType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CHeightType::CHeightType(CHeightType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CWidthType::CWidthType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CWidthType::CWidthType(CWidthType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDepthType::CDepthType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDepthType::CDepthType(CDepthType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CRadiusType::CRadiusType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CRadiusType::CRadiusType(CRadiusType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CAngleType::CAngleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CAngleType::CAngleType(CAngleType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CQuantityType2::CQuantityType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CQuantityType2::CQuantityType2(CQuantityType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CWidthType2::CWidthType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CWidthType2::CWidthType2(CWidthType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDepthType2::CDepthType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDepthType2::CDepthType2(CDepthType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CHeightType2::CHeightType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CHeightType2::CHeightType2(CHeightType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CStartTimeType::CStartTimeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CStartTimeType::CStartTimeType(CStartTimeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDataSectionType2::CDataSectionType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, Part(*this)	// "Part"
, ResourceClass(*this)	// "ResourceClass"
, PartType(*this)	// "PartType"
, DistributionDefinition(*this)	// "DistributionDefinition"
, Calendar(*this)	// "Calendar"
, Layout(*this)	// "Layout"
, Resource(*this)	// "Resource"
, InventoryItem(*this)	// "InventoryItem"
, SkillDefinition(*this)	// "SkillDefinition"
, MaintenancePlan(*this)	// "MaintenancePlan"
, BillOfMaterials(*this)	// "BillOfMaterials"
, SetupDefinition(*this)	// "SetupDefinition"
, Job(*this)	// "Job"
, Order(*this)	// "Order"
, SetupChangeoverDefinition(*this)	// "SetupChangeoverDefinition"
, LayoutObject(*this)	// "LayoutObject"
, ProcessPlan(*this)	// "ProcessPlan"
, Schedule(*this)	// "Schedule"
, InventoryItemClass(*this)	// "InventoryItemClass"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
{
}

CDataSectionType2::CDataSectionType2(CDataSectionType2 const& other)
: TypeBase(other.GetNode())
, Part(*this)	// "Part"
, ResourceClass(*this)	// "ResourceClass"
, PartType(*this)	// "PartType"
, DistributionDefinition(*this)	// "DistributionDefinition"
, Calendar(*this)	// "Calendar"
, Layout(*this)	// "Layout"
, Resource(*this)	// "Resource"
, InventoryItem(*this)	// "InventoryItem"
, SkillDefinition(*this)	// "SkillDefinition"
, MaintenancePlan(*this)	// "MaintenancePlan"
, BillOfMaterials(*this)	// "BillOfMaterials"
, SetupDefinition(*this)	// "SetupDefinition"
, Job(*this)	// "Job"
, Order(*this)	// "Order"
, SetupChangeoverDefinition(*this)	// "SetupChangeoverDefinition"
, LayoutObject(*this)	// "LayoutObject"
, ProcessPlan(*this)	// "ProcessPlan"
, Schedule(*this)	// "Schedule"
, InventoryItemClass(*this)	// "InventoryItemClass"
, ReferenceMaterial(*this)	// "ReferenceMaterial"
{
}


CDocumentLocationType::CDocumentLocationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDocumentLocationType::CDocumentLocationType(CDocumentLocationType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEffectiveStartDateType::CEffectiveStartDateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEffectiveStartDateType::CEffectiveStartDateType(CEffectiveStartDateType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEffectiveEndDateType::CEffectiveEndDateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEffectiveEndDateType::CEffectiveEndDateType(CEffectiveEndDateType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CAlphaValueType::CAlphaValueType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CAlphaValueType::CAlphaValueType(CAlphaValueType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CXType::CXType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CXType::CXType(CXType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CYType::CYType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CYType::CYType(CYType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CZType::CZType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CZType::CZType(CZType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType2::CValueType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType2::CValueType2(CValueType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType3::CValueType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType3::CValueType3(CValueType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType4::CValueType4(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType4::CValueType4(CValueType4 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType5::CValueType5(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType5::CValueType5(CValueType5 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CAddressType::CAddressType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CAddressType::CAddressType(CAddressType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CTimestampType2::CTimestampType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CTimestampType2::CTimestampType2(CTimestampType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CFileNameType::CFileNameType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CFileNameType::CFileNameType(CFileNameType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CWidthType3::CWidthType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CWidthType3::CWidthType3(CWidthType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDepthType3::CDepthType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDepthType3::CDepthType3(CDepthType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CHeightType3::CHeightType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CHeightType3::CHeightType3(CHeightType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CCreationTimeType::CCreationTimeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CCreationTimeType::CCreationTimeType(CCreationTimeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDateType2::CDateType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDateType2::CDateType2(CDateType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CPixelsPerUnitType::CPixelsPerUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CPixelsPerUnitType::CPixelsPerUnitType(CPixelsPerUnitType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CQuantityOnHandType::CQuantityOnHandType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CQuantityOnHandType::CQuantityOnHandType(CQuantityOnHandType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CUpdateTimeType::CUpdateTimeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CUpdateTimeType::CUpdateTimeType(CUpdateTimeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CLagPercentageType::CLagPercentageType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CLagPercentageType::CLagPercentageType(CLagPercentageType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CLagPartsCompleteType::CLagPartsCompleteType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CLagPartsCompleteType::CLagPartsCompleteType(CLagPartsCompleteType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CUpdateTimeType2::CUpdateTimeType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CUpdateTimeType2::CUpdateTimeType2(CUpdateTimeType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDueDateType::CDueDateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDueDateType::CDueDateType(CDueDateType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CReleaseDateType::CReleaseDateType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CReleaseDateType::CReleaseDateType(CReleaseDateType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CStartTimeType2::CStartTimeType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CStartTimeType2::CStartTimeType2(CStartTimeType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEndTimeType::CEndTimeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEndTimeType::CEndTimeType(CEndTimeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType6::CValueType6(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType6::CValueType6(CValueType6 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMachineProgramLocationType::CMachineProgramLocationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CMachineProgramLocationType::CMachineProgramLocationType(CMachineProgramLocationType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMaintenanceProcessType::CMaintenanceProcessType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, MaintenanceProcess(*this)	// "MaintenanceProcess"
{
}

CMaintenanceProcessType::CMaintenanceProcessType(CMaintenanceProcessType const& other)
: TypeBase(other.GetNode())
, MaintenanceProcess(*this)	// "MaintenanceProcess"
{
}


CRepetitionCountType::CRepetitionCountType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CRepetitionCountType::CRepetitionCountType(CRepetitionCountType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CUpdateTimeType3::CUpdateTimeType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CUpdateTimeType3::CUpdateTimeType3(CUpdateTimeType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CDueDateType2::CDueDateType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CDueDateType2::CDueDateType2(CDueDateType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CUpdateTimeType4::CUpdateTimeType4(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CUpdateTimeType4::CUpdateTimeType4(CUpdateTimeType4 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CItemQuantityType::CItemQuantityType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CItemQuantityType::CItemQuantityType(CItemQuantityType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CPartQuantityType::CPartQuantityType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CPartQuantityType::CPartQuantityType(CPartQuantityType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMeasuredAmountType::CMeasuredAmountType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CMeasuredAmountType::CMeasuredAmountType(CMeasuredAmountType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CPiecesPerPackageType::CPiecesPerPackageType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CPiecesPerPackageType::CPiecesPerPackageType(CPiecesPerPackageType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType7::CValueType7(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType7::CValueType7(CValueType7 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CRepetitionCountType2::CRepetitionCountType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CRepetitionCountType2::CRepetitionCountType2(CRepetitionCountType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMinimumType::CMinimumType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CMinimumType::CMinimumType(CMinimumType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMaximumType::CMaximumType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CMaximumType::CMaximumType(CMaximumType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType8::CValueType8(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType8::CValueType8(CValueType8 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


COnlineLocationType::COnlineLocationType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

COnlineLocationType::COnlineLocationType(COnlineLocationType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMinimumNumberType::CMinimumNumberType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CMinimumNumberType::CMinimumNumberType(CMinimumNumberType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CMaximumNumberType::CMaximumNumberType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CMaximumNumberType::CMaximumNumberType(CMaximumNumberType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CXDegreeType::CXDegreeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CXDegreeType::CXDegreeType(CXDegreeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CYDegreeType::CYDegreeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CYDegreeType::CYDegreeType(CYDegreeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CZDegreeType::CZDegreeType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CZDegreeType::CZDegreeType(CZDegreeType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CXPercentType::CXPercentType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CXPercentType::CXPercentType(CXPercentType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CYPercentType::CYPercentType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CYPercentType::CYPercentType(CYPercentType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CZPercentType::CZPercentType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CZPercentType::CZPercentType(CZPercentType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CCreationTimeType2::CCreationTimeType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CCreationTimeType2::CCreationTimeType2(CCreationTimeType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CStartTimeType3::CStartTimeType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CStartTimeType3::CStartTimeType3(CStartTimeType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEndTimeType2::CEndTimeType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEndTimeType2::CEndTimeType2(CEndTimeType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CUpdateTimeType5::CUpdateTimeType5(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CUpdateTimeType5::CUpdateTimeType5(CUpdateTimeType5 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CStartTimeType4::CStartTimeType4(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CStartTimeType4::CStartTimeType4(CStartTimeType4 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEndTimeType3::CEndTimeType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEndTimeType3::CEndTimeType3(CEndTimeType3 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CWidthType4::CWidthType4(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CWidthType4::CWidthType4(CWidthType4 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CStartHeightType::CStartHeightType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CStartHeightType::CStartHeightType(CStartHeightType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEndHeightType::CEndHeightType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEndHeightType::CEndHeightType(CEndHeightType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CTrackWidthType::CTrackWidthType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CTrackWidthType::CTrackWidthType(CTrackWidthType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CRotationAngleType::CRotationAngleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CRotationAngleType::CRotationAngleType(CRotationAngleType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CStartTimeType5::CStartTimeType5(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CStartTimeType5::CStartTimeType5(CStartTimeType5 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEffectiveStartDateType2::CEffectiveStartDateType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEffectiveStartDateType2::CEffectiveStartDateType2(CEffectiveStartDateType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CEffectiveEndDateType2::CEffectiveEndDateType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CEffectiveEndDateType2::CEffectiveEndDateType2(CEffectiveEndDateType2 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType9::CValueType9(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType9::CValueType9(CValueType9 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType10::CValueType10(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType10::CValueType10(CValueType10 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CTextAngleType::CTextAngleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CTextAngleType::CTextAngleType(CTextAngleType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CXOffsetType::CXOffsetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CXOffsetType::CXOffsetType(CXOffsetType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CYOffsetType::CYOffsetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CYOffsetType::CYOffsetType(CYOffsetType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CZOffsetType::CZOffsetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CZOffsetType::CZOffsetType(CZOffsetType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CCostRatePerUnitType::CCostRatePerUnitType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CCostRatePerUnitType::CCostRatePerUnitType(CCostRatePerUnitType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CCostUnitQuantityType::CCostUnitQuantityType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CCostUnitQuantityType::CCostUnitQuantityType(CCostUnitQuantityType const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType11::CValueType11(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType11::CValueType11(CValueType11 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


CValueType12::CValueType12(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, schema(*this)	// "schema"
{
}

CValueType12::CValueType12(CValueType12 const& other)
: TypeBase(other.GetNode())
, schema(*this)	// "schema"
{
}


ClangType::ClangType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ClangType::ClangType(ClangType const& other)
: TypeBase(other.GetNode())
{
}


ClangType2::ClangType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ClangType2::ClangType2(ClangType2 const& other)
: TypeBase(other.GetNode())
{
}


CvalueType13::CvalueType13(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CvalueType13::CvalueType13(CvalueType13 const& other)
: TypeBase(other.GetNode())
{
}


namespace xs
{	

CENTITIES::CENTITIES(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CENTITIES::CENTITIES(CENTITIES const& other)
: TypeBase(other.GetNode())
{
}


CENTITY::CENTITY(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CENTITY::CENTITY(CENTITY const& other)
: TypeBase(other.GetNode())
{
}


CID::CID(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CID::CID(CID const& other)
: TypeBase(other.GetNode())
{
}


CIDREF::CIDREF(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CIDREF::CIDREF(CIDREF const& other)
: TypeBase(other.GetNode())
{
}


CIDREFS::CIDREFS(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CIDREFS::CIDREFS(CIDREFS const& other)
: TypeBase(other.GetNode())
{
}


CNCName::CNCName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNCName::CNCName(CNCName const& other)
: TypeBase(other.GetNode())
{
}


CNMTOKEN::CNMTOKEN(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNMTOKEN::CNMTOKEN(CNMTOKEN const& other)
: TypeBase(other.GetNode())
{
}


CNMTOKENS::CNMTOKENS(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNMTOKENS::CNMTOKENS(CNMTOKENS const& other)
: TypeBase(other.GetNode())
{
}


CNOTATION::CNOTATION(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CNOTATION::CNOTATION(CNOTATION const& other)
: TypeBase(other.GetNode())
{
}


CName::CName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CName::CName(CName const& other)
: TypeBase(other.GetNode())
{
}


CQName::CQName(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CQName::CQName(CQName const& other)
: TypeBase(other.GetNode())
{
}


Call::Call(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

Call::Call(Call const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void Call::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("all"), _T("http://www.w3.org/2001/XMLSchema"));
}

CallNNI::CallNNI(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CallNNI::CallNNI(CallNNI const& other)
: TypeBase(other.GetNode())
{
}


Cannotated::Cannotated(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::CopenAttrs(node)
, id(*this)	// "@id"
, annotation(*this)	// "annotation"
{
}

Cannotated::Cannotated(Cannotated const& other)
: ::CMSD::xs::CopenAttrs(other.GetNode())
, id(*this)	// "@id"
, annotation(*this)	// "annotation"
{
}

void Cannotated::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("annotated"), _T("http://www.w3.org/2001/XMLSchema"));
}

CanySimpleType::CanySimpleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CanySimpleType::CanySimpleType(CanySimpleType const& other)
: TypeBase(other.GetNode())
{
}


CanyType::CanyType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CanyType::CanyType(CanyType const& other)
: TypeBase(other.GetNode())
{
}

void CanyType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("anyType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CanyURI::CanyURI(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CanyURI::CanyURI(CanyURI const& other)
: TypeBase(other.GetNode())
{
}


Cattribute::Cattribute(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, use(*this)	// "@use"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, form(*this)	// "@form"
, simpleType(*this)	// "simpleType"
{
}

Cattribute::Cattribute(Cattribute const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, use(*this)	// "@use"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, form(*this)	// "@form"
, simpleType(*this)	// "simpleType"
{
}

void Cattribute::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("attribute"), _T("http://www.w3.org/2001/XMLSchema"));
}

CattributeGroup::CattributeGroup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CattributeGroup::CattributeGroup(CattributeGroup const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CattributeGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("attributeGroup"), _T("http://www.w3.org/2001/XMLSchema"));
}

CattributeGroupRef::CattributeGroupRef(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, annotation(*this)	// "annotation"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CattributeGroupRef::CattributeGroupRef(CattributeGroupRef const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, annotation(*this)	// "annotation"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CattributeGroupRef::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("attributeGroupRef"), _T("http://www.w3.org/2001/XMLSchema"));
}

Cbase64Binary::Cbase64Binary(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cbase64Binary::Cbase64Binary(Cbase64Binary const& other)
: TypeBase(other.GetNode())
{
}


CblockSet::CblockSet(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CblockSet::CblockSet(CblockSet const& other)
: TypeBase(other.GetNode())
{
}


Cboolean::Cboolean(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cboolean::Cboolean(Cboolean const& other)
: TypeBase(other.GetNode())
{
}


Cbyte::Cbyte(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cbyte::Cbyte(Cbyte const& other)
: TypeBase(other.GetNode())
{
}


CcomplexRestrictionType::CcomplexRestrictionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, base(*this)	// "@base"
, annotation(*this)	// "annotation"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CcomplexRestrictionType::CcomplexRestrictionType(CcomplexRestrictionType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, base(*this)	// "@base"
, annotation(*this)	// "annotation"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CcomplexRestrictionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("complexRestrictionType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CcomplexType::CcomplexType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, mixed(*this)	// "@mixed"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, simpleContent(*this)	// "simpleContent"
, complexContent(*this)	// "complexContent"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CcomplexType::CcomplexType(CcomplexType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, mixed(*this)	// "@mixed"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, simpleContent(*this)	// "simpleContent"
, complexContent(*this)	// "complexContent"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CcomplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("complexType"), _T("http://www.w3.org/2001/XMLSchema"));
}

Cdate::Cdate(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cdate::Cdate(Cdate const& other)
: TypeBase(other.GetNode())
{
}


CdateTime::CdateTime(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CdateTime::CdateTime(CdateTime const& other)
: TypeBase(other.GetNode())
{
}


Cdecimal::Cdecimal(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cdecimal::Cdecimal(Cdecimal const& other)
: TypeBase(other.GetNode())
{
}


CderivationControl::CderivationControl(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CderivationControl::CderivationControl(CderivationControl const& other)
: TypeBase(other.GetNode())
{
}


CderivationSet::CderivationSet(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CderivationSet::CderivationSet(CderivationSet const& other)
: TypeBase(other.GetNode())
{
}


Cdouble::Cdouble(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cdouble::Cdouble(Cdouble const& other)
: TypeBase(other.GetNode())
{
}


Cduration::Cduration(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cduration::Cduration(Cduration const& other)
: TypeBase(other.GetNode())
{
}


Celement::Celement(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

Celement::Celement(Celement const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

void Celement::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("element"), _T("http://www.w3.org/2001/XMLSchema"));
}

CexplicitGroup::CexplicitGroup(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

CexplicitGroup::CexplicitGroup(CexplicitGroup const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void CexplicitGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("explicitGroup"), _T("http://www.w3.org/2001/XMLSchema"));
}

CextensionType::CextensionType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, base(*this)	// "@base"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CextensionType::CextensionType(CextensionType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, base(*this)	// "@base"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CextensionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("extensionType"), _T("http://www.w3.org/2001/XMLSchema"));
}

Cfacet::Cfacet(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
{
}

Cfacet::Cfacet(Cfacet const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
{
}

void Cfacet::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("facet"), _T("http://www.w3.org/2001/XMLSchema"));
}

Cfloat::Cfloat(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cfloat::Cfloat(Cfloat const& other)
: TypeBase(other.GetNode())
{
}


CformChoice::CformChoice(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CformChoice::CformChoice(CformChoice const& other)
: TypeBase(other.GetNode())
{
}


CfullDerivationSet::CfullDerivationSet(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CfullDerivationSet::CfullDerivationSet(CfullDerivationSet const& other)
: TypeBase(other.GetNode())
{
}


CgDay::CgDay(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgDay::CgDay(CgDay const& other)
: TypeBase(other.GetNode())
{
}


CgMonth::CgMonth(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgMonth::CgMonth(CgMonth const& other)
: TypeBase(other.GetNode())
{
}


CgMonthDay::CgMonthDay(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgMonthDay::CgMonthDay(CgMonthDay const& other)
: TypeBase(other.GetNode())
{
}


CgYear::CgYear(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgYear::CgYear(CgYear const& other)
: TypeBase(other.GetNode())
{
}


CgYearMonth::CgYearMonth(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CgYearMonth::CgYearMonth(CgYearMonth const& other)
: TypeBase(other.GetNode())
{
}


Cgroup::Cgroup(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

Cgroup::Cgroup(Cgroup const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void Cgroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("group"), _T("http://www.w3.org/2001/XMLSchema"));
}

CgroupRef::CgroupRef(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

CgroupRef::CgroupRef(CgroupRef const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void CgroupRef::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("groupRef"), _T("http://www.w3.org/2001/XMLSchema"));
}

ChexBinary::ChexBinary(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

ChexBinary::ChexBinary(ChexBinary const& other)
: TypeBase(other.GetNode())
{
}


Cint::Cint(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cint::Cint(Cint const& other)
: TypeBase(other.GetNode())
{
}


Cinteger::Cinteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cinteger::Cinteger(Cinteger const& other)
: TypeBase(other.GetNode())
{
}


Ckeybase::Ckeybase(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, name(*this)	// "@name"
, selector(*this)	// "selector"
, field(*this)	// "field"
{
}

Ckeybase::Ckeybase(Ckeybase const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, name(*this)	// "@name"
, selector(*this)	// "selector"
, field(*this)	// "field"
{
}

void Ckeybase::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("keybase"), _T("http://www.w3.org/2001/XMLSchema"));
}

Clanguage::Clanguage(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Clanguage::Clanguage(Clanguage const& other)
: TypeBase(other.GetNode())
{
}


ClocalComplexType::ClocalComplexType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, mixed(*this)	// "@mixed"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, annotation(*this)	// "annotation"
, simpleContent(*this)	// "simpleContent"
, complexContent(*this)	// "complexContent"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

ClocalComplexType::ClocalComplexType(ClocalComplexType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, mixed(*this)	// "@mixed"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, annotation(*this)	// "annotation"
, simpleContent(*this)	// "simpleContent"
, complexContent(*this)	// "complexContent"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void ClocalComplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("localComplexType"), _T("http://www.w3.org/2001/XMLSchema"));
}

ClocalElement::ClocalElement(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

ClocalElement::ClocalElement(ClocalElement const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

void ClocalElement::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("localElement"), _T("http://www.w3.org/2001/XMLSchema"));
}

ClocalSimpleType::ClocalSimpleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, final(*this)	// "@final"
, name(*this)	// "@name"
, annotation(*this)	// "annotation"
, restriction(*this)	// "restriction"
, list(*this)	// "list"
, union2(*this)	// "union"
{
}

ClocalSimpleType::ClocalSimpleType(ClocalSimpleType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, final(*this)	// "@final"
, name(*this)	// "@name"
, annotation(*this)	// "annotation"
, restriction(*this)	// "restriction"
, list(*this)	// "list"
, union2(*this)	// "union"
{
}

void ClocalSimpleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("localSimpleType"), _T("http://www.w3.org/2001/XMLSchema"));
}

Clong::Clong(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Clong::Clong(Clong const& other)
: TypeBase(other.GetNode())
{
}


CnamedAttributeGroup::CnamedAttributeGroup(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, annotation(*this)	// "annotation"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CnamedAttributeGroup::CnamedAttributeGroup(CnamedAttributeGroup const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, annotation(*this)	// "annotation"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CnamedAttributeGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("namedAttributeGroup"), _T("http://www.w3.org/2001/XMLSchema"));
}

CnamedGroup::CnamedGroup(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

CnamedGroup::CnamedGroup(CnamedGroup const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void CnamedGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("namedGroup"), _T("http://www.w3.org/2001/XMLSchema"));
}

CnamespaceList::CnamespaceList(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnamespaceList::CnamespaceList(CnamespaceList const& other)
: TypeBase(other.GetNode())
{
}


CnarrowMaxMin::CnarrowMaxMin(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

CnarrowMaxMin::CnarrowMaxMin(CnarrowMaxMin const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

void CnarrowMaxMin::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("narrowMaxMin"), _T("http://www.w3.org/2001/XMLSchema"));
}

CnegativeInteger::CnegativeInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnegativeInteger::CnegativeInteger(CnegativeInteger const& other)
: TypeBase(other.GetNode())
{
}


CnoFixedFacet::CnoFixedFacet(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

CnoFixedFacet::CnoFixedFacet(CnoFixedFacet const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

void CnoFixedFacet::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("noFixedFacet"), _T("http://www.w3.org/2001/XMLSchema"));
}

CnonNegativeInteger::CnonNegativeInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnonNegativeInteger::CnonNegativeInteger(CnonNegativeInteger const& other)
: TypeBase(other.GetNode())
{
}


CnonPositiveInteger::CnonPositiveInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnonPositiveInteger::CnonPositiveInteger(CnonPositiveInteger const& other)
: TypeBase(other.GetNode())
{
}


CnormalizedString::CnormalizedString(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnormalizedString::CnormalizedString(CnormalizedString const& other)
: TypeBase(other.GetNode())
{
}


CnumFacet::CnumFacet(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

CnumFacet::CnumFacet(CnumFacet const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, value2(*this)	// "@value"
, fixed(*this)	// "@fixed"
, annotation(*this)	// "annotation"
{
}

void CnumFacet::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("numFacet"), _T("http://www.w3.org/2001/XMLSchema"));
}

CopenAttrs::CopenAttrs(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CopenAttrs::CopenAttrs(CopenAttrs const& other)
: TypeBase(other.GetNode())
{
}

void CopenAttrs::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("openAttrs"), _T("http://www.w3.org/2001/XMLSchema"));
}

CpositiveInteger::CpositiveInteger(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CpositiveInteger::CpositiveInteger(CpositiveInteger const& other)
: TypeBase(other.GetNode())
{
}


Cpublic::Cpublic(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cpublic::Cpublic(Cpublic const& other)
: TypeBase(other.GetNode())
{
}


CrealGroup::CrealGroup(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

CrealGroup::CrealGroup(CrealGroup const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void CrealGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("realGroup"), _T("http://www.w3.org/2001/XMLSchema"));
}

CreducedDerivationControl::CreducedDerivationControl(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CreducedDerivationControl::CreducedDerivationControl(CreducedDerivationControl const& other)
: TypeBase(other.GetNode())
{
}


CrestrictionType::CrestrictionType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, base(*this)	// "@base"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CrestrictionType::CrestrictionType(CrestrictionType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, base(*this)	// "@base"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CrestrictionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("restrictionType"), _T("http://www.w3.org/2001/XMLSchema"));
}

Cshort::Cshort(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cshort::Cshort(Cshort const& other)
: TypeBase(other.GetNode())
{
}


CsimpleDerivationSet::CsimpleDerivationSet(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CsimpleDerivationSet::CsimpleDerivationSet(CsimpleDerivationSet const& other)
: TypeBase(other.GetNode())
{
}


CsimpleExplicitGroup::CsimpleExplicitGroup(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

CsimpleExplicitGroup::CsimpleExplicitGroup(CsimpleExplicitGroup const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

void CsimpleExplicitGroup::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("simpleExplicitGroup"), _T("http://www.w3.org/2001/XMLSchema"));
}

CsimpleExtensionType::CsimpleExtensionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, base(*this)	// "@base"
, annotation(*this)	// "annotation"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CsimpleExtensionType::CsimpleExtensionType(CsimpleExtensionType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, base(*this)	// "@base"
, annotation(*this)	// "annotation"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CsimpleExtensionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("simpleExtensionType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CsimpleRestrictionType::CsimpleRestrictionType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, base(*this)	// "@base"
, annotation(*this)	// "annotation"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CsimpleRestrictionType::CsimpleRestrictionType(CsimpleRestrictionType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, base(*this)	// "@base"
, annotation(*this)	// "annotation"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, simpleType(*this)	// "simpleType"
, minExclusive(*this)	// "minExclusive"
, minInclusive(*this)	// "minInclusive"
, maxExclusive(*this)	// "maxExclusive"
, maxInclusive(*this)	// "maxInclusive"
, totalDigits(*this)	// "totalDigits"
, fractionDigits(*this)	// "fractionDigits"
, length(*this)	// "length"
, minLength(*this)	// "minLength"
, maxLength(*this)	// "maxLength"
, enumeration(*this)	// "enumeration"
, whiteSpace(*this)	// "whiteSpace"
, pattern(*this)	// "pattern"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CsimpleRestrictionType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("simpleRestrictionType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CsimpleType::CsimpleType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, final(*this)	// "@final"
, name(*this)	// "@name"
, restriction(*this)	// "restriction"
, list(*this)	// "list"
, union2(*this)	// "union"
{
}

CsimpleType::CsimpleType(CsimpleType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, final(*this)	// "@final"
, name(*this)	// "@name"
, restriction(*this)	// "restriction"
, list(*this)	// "list"
, union2(*this)	// "union"
{
}

void CsimpleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("simpleType"), _T("http://www.w3.org/2001/XMLSchema"));
}

Cstring::Cstring(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Cstring::Cstring(Cstring const& other)
: TypeBase(other.GetNode())
{
}


Ctime::Ctime(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Ctime::Ctime(Ctime const& other)
: TypeBase(other.GetNode())
{
}


Ctoken::Ctoken(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

Ctoken::Ctoken(Ctoken const& other)
: TypeBase(other.GetNode())
{
}


CtopLevelAttribute::CtopLevelAttribute(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, use(*this)	// "@use"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
{
}

CtopLevelAttribute::CtopLevelAttribute(CtopLevelAttribute const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, use(*this)	// "@use"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
{
}

void CtopLevelAttribute::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("topLevelAttribute"), _T("http://www.w3.org/2001/XMLSchema"));
}

CtopLevelComplexType::CtopLevelComplexType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, mixed(*this)	// "@mixed"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, annotation(*this)	// "annotation"
, simpleContent(*this)	// "simpleContent"
, complexContent(*this)	// "complexContent"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

CtopLevelComplexType::CtopLevelComplexType(CtopLevelComplexType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, mixed(*this)	// "@mixed"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, annotation(*this)	// "annotation"
, simpleContent(*this)	// "simpleContent"
, complexContent(*this)	// "complexContent"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, attribute(*this)	// "attribute"
, attributeGroup(*this)	// "attributeGroup"
, anyAttribute(*this)	// "anyAttribute"
{
}

void CtopLevelComplexType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("topLevelComplexType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CtopLevelElement::CtopLevelElement(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

CtopLevelElement::CtopLevelElement(CtopLevelElement const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, type(*this)	// "@type"
, substitutionGroup(*this)	// "@substitutionGroup"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, default2(*this)	// "@default"
, fixed(*this)	// "@fixed"
, nillable(*this)	// "@nillable"
, abstract(*this)	// "@abstract"
, final(*this)	// "@final"
, block(*this)	// "@block"
, form(*this)	// "@form"
, annotation(*this)	// "annotation"
, simpleType(*this)	// "simpleType"
, complexType(*this)	// "complexType"
, unique(*this)	// "unique"
, key(*this)	// "key"
, keyref(*this)	// "keyref"
{
}

void CtopLevelElement::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("topLevelElement"), _T("http://www.w3.org/2001/XMLSchema"));
}

CtopLevelSimpleType::CtopLevelSimpleType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, final(*this)	// "@final"
, name(*this)	// "@name"
, annotation(*this)	// "annotation"
, restriction(*this)	// "restriction"
, list(*this)	// "list"
, union2(*this)	// "union"
{
}

CtopLevelSimpleType::CtopLevelSimpleType(CtopLevelSimpleType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, final(*this)	// "@final"
, name(*this)	// "@name"
, annotation(*this)	// "annotation"
, restriction(*this)	// "restriction"
, list(*this)	// "list"
, union2(*this)	// "union"
{
}

void CtopLevelSimpleType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("topLevelSimpleType"), _T("http://www.w3.org/2001/XMLSchema"));
}

CtypeDerivationControl::CtypeDerivationControl(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CtypeDerivationControl::CtypeDerivationControl(CtypeDerivationControl const& other)
: TypeBase(other.GetNode())
{
}


CunsignedByte::CunsignedByte(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedByte::CunsignedByte(CunsignedByte const& other)
: TypeBase(other.GetNode())
{
}


CunsignedInt::CunsignedInt(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedInt::CunsignedInt(CunsignedInt const& other)
: TypeBase(other.GetNode())
{
}


CunsignedLong::CunsignedLong(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedLong::CunsignedLong(CunsignedLong const& other)
: TypeBase(other.GetNode())
{
}


CunsignedShort::CunsignedShort(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CunsignedShort::CunsignedShort(CunsignedShort const& other)
: TypeBase(other.GetNode())
{
}


Cwildcard::Cwildcard(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, namespace2(*this)	// "@namespace"
, processContents(*this)	// "@processContents"
{
}

Cwildcard::Cwildcard(Cwildcard const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, namespace2(*this)	// "@namespace"
, processContents(*this)	// "@processContents"
{
}

void Cwildcard::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("wildcard"), _T("http://www.w3.org/2001/XMLSchema"));
}

CprocessContentsType::CprocessContentsType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CprocessContentsType::CprocessContentsType(CprocessContentsType const& other)
: TypeBase(other.GetNode())
{
}


CselectorType::CselectorType(MSXML2::IXMLDOMNodePtr const& node)
: ::CMSD::xs::Cannotated(node)
, xpath(*this)	// "@xpath"
{
}

CselectorType::CselectorType(CselectorType const& other)
: ::CMSD::xs::Cannotated(other.GetNode())
, xpath(*this)	// "@xpath"
{
}


CstringType::CstringType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CstringType::CstringType(CstringType const& other)
: TypeBase(other.GetNode())
{
}

void CstringType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("string"), _T("http://www.w3.org/2001/XMLSchema"));
}

CbooleanType::CbooleanType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CbooleanType::CbooleanType(CbooleanType const& other)
: TypeBase(other.GetNode())
{
}

void CbooleanType::SetXsiType()
{
	MsxmlTreeOperations::SetAttribute(m_node, _T("xsi:type"), _T("http://www.w3.org/2001/XMLSchema-instance"), 
		_T("boolean"), _T("http://www.w3.org/2001/XMLSchema"));
}

CminOccursType::CminOccursType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CminOccursType::CminOccursType(CminOccursType const& other)
: TypeBase(other.GetNode())
{
}


CmaxOccursType::CmaxOccursType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CmaxOccursType::CmaxOccursType(CmaxOccursType const& other)
: TypeBase(other.GetNode())
{
}


CallNNIType::CallNNIType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CallNNIType::CallNNIType(CallNNIType const& other)
: TypeBase(other.GetNode())
{
}


CuseType::CuseType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CuseType::CuseType(CuseType const& other)
: TypeBase(other.GetNode())
{
}


CblockSetType::CblockSetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CblockSetType::CblockSetType(CblockSetType const& other)
: TypeBase(other.GetNode())
{
}


CblockSetType2::CblockSetType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CblockSetType2::CblockSetType2(CblockSetType2 const& other)
: TypeBase(other.GetNode())
{
}


CblockSetType3::CblockSetType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CblockSetType3::CblockSetType3(CblockSetType3 const& other)
: TypeBase(other.GetNode())
{
}


CderivationSetType::CderivationSetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CderivationSetType::CderivationSetType(CderivationSetType const& other)
: TypeBase(other.GetNode())
{
}


CderivationSetType2::CderivationSetType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CderivationSetType2::CderivationSetType2(CderivationSetType2 const& other)
: TypeBase(other.GetNode())
{
}


CfullDerivationSetType::CfullDerivationSetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CfullDerivationSetType::CfullDerivationSetType(CfullDerivationSetType const& other)
: TypeBase(other.GetNode())
{
}


CfullDerivationSetType2::CfullDerivationSetType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CfullDerivationSetType2::CfullDerivationSetType2(CfullDerivationSetType2 const& other)
: TypeBase(other.GetNode())
{
}


CallType::CallType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}

CallType::CallType(CallType const& other)
: TypeBase(other.GetNode())
, id(*this)	// "@id"
, name(*this)	// "@name"
, ref(*this)	// "@ref"
, minOccurs(*this)	// "@minOccurs"
, maxOccurs(*this)	// "@maxOccurs"
, annotation(*this)	// "annotation"
, element(*this)	// "element"
, group(*this)	// "group"
, all(*this)	// "all"
, choice(*this)	// "choice"
, sequence(*this)	// "sequence"
, any(*this)	// "any"
{
}


CnamespaceListType::CnamespaceListType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnamespaceListType::CnamespaceListType(CnamespaceListType const& other)
: TypeBase(other.GetNode())
{
}


CnamespaceListType2::CnamespaceListType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnamespaceListType2::CnamespaceListType2(CnamespaceListType2 const& other)
: TypeBase(other.GetNode())
{
}


CnamespaceListType3::CnamespaceListType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnamespaceListType3::CnamespaceListType3(CnamespaceListType3 const& other)
: TypeBase(other.GetNode())
{
}


CnamespaceListType4::CnamespaceListType4(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CnamespaceListType4::CnamespaceListType4(CnamespaceListType4 const& other)
: TypeBase(other.GetNode())
{
}


CminOccursType2::CminOccursType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CminOccursType2::CminOccursType2(CminOccursType2 const& other)
: TypeBase(other.GetNode())
{
}


CmaxOccursType2::CmaxOccursType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CmaxOccursType2::CmaxOccursType2(CmaxOccursType2 const& other)
: TypeBase(other.GetNode())
{
}


CsimpleDerivationSetType::CsimpleDerivationSetType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CsimpleDerivationSetType::CsimpleDerivationSetType(CsimpleDerivationSetType const& other)
: TypeBase(other.GetNode())
{
}


CsimpleDerivationSetType2::CsimpleDerivationSetType2(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CsimpleDerivationSetType2::CsimpleDerivationSetType2(CsimpleDerivationSetType2 const& other)
: TypeBase(other.GetNode())
{
}


CsimpleDerivationSetType3::CsimpleDerivationSetType3(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CsimpleDerivationSetType3::CsimpleDerivationSetType3(CsimpleDerivationSetType3 const& other)
: TypeBase(other.GetNode())
{
}


CxpathType::CxpathType(MSXML2::IXMLDOMNodePtr const& node)
: TypeBase(node)
{
}

CxpathType::CxpathType(CxpathType const& other)
: TypeBase(other.GetNode())
{
}


} // namespace xs


int CAreaUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CAreaUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CAreaUnit].Facets + 0, 7);
}

void CAreaUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CAreaUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CAreaUnit].Facets + 0, 7) );
}

void CAreaUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CAreaUnitType_altova_unnamed, value);
}

CAreaUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CAreaUnitType_altova_unnamed);
}

int CBaseLocationType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CBaseLocationType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CBaseLocation].Facets + 0, 2);
}

void CBaseLocationType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CBaseLocationType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CBaseLocation].Facets + 0, 2) );
}

void CBaseLocationType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CBaseLocationType_altova_unnamed, value);
}

CBaseLocationType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CBaseLocationType_altova_unnamed);
}

int CBasicShapeTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CBasicShapeTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CBasicShapeType].Facets + 0, 3);
}

void CBasicShapeTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CBasicShapeTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CBasicShapeType].Facets + 0, 3) );
}

void CBasicShapeTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CBasicShapeTypeType_altova_unnamed, value);
}

CBasicShapeTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CBasicShapeTypeType_altova_unnamed);
}

int CConnectionTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CConnectionTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CConnectionType].Facets + 0, 2);
}

void CConnectionTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CConnectionTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CConnectionType].Facets + 0, 2) );
}

void CConnectionTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CConnectionTypeType_altova_unnamed, value);
}

CConnectionTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CConnectionTypeType_altova_unnamed);
}

int CCoordinateSystemType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CCoordinateSystemType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CCoordinateSystem].Facets + 0, 2);
}

void CCoordinateSystemType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CCoordinateSystemType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CCoordinateSystem].Facets + 0, 2) );
}

void CCoordinateSystemType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CCoordinateSystemType_altova_unnamed, value);
}

CCoordinateSystemType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CCoordinateSystemType_altova_unnamed);
}

int CCostCategoryType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CCostCategoryType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CCostCategory].Facets + 0, 5);
}

void CCostCategoryType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CCostCategoryType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CCostCategory].Facets + 0, 5) );
}

void CCostCategoryType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CCostCategoryType_altova_unnamed, value);
}

CCostCategoryType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CCostCategoryType_altova_unnamed);
}

int CCostTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CCostTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CCostType].Facets + 0, 2);
}

void CCostTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CCostTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CCostType].Facets + 0, 2) );
}

void CCostTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CCostTypeType_altova_unnamed, value);
}

CCostTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CCostTypeType_altova_unnamed);
}

int CDayType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CDayType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CDay].Facets + 0, 7);
}

void CDayType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CDayType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CDay].Facets + 0, 7) );
}

void CDayType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CDayType_altova_unnamed, value);
}

CDayType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CDayType_altova_unnamed);
}

int CGraphicDescriptionTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CGraphicDescriptionTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CGraphicDescriptionType].Facets + 0, 2);
}

void CGraphicDescriptionTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CGraphicDescriptionTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CGraphicDescriptionType].Facets + 0, 2) );
}

void CGraphicDescriptionTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CGraphicDescriptionTypeType_altova_unnamed, value);
}

CGraphicDescriptionTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CGraphicDescriptionTypeType_altova_unnamed);
}

int CInventoryItemTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CInventoryItemTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CInventoryItemType].Facets + 0, 2);
}

void CInventoryItemTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CInventoryItemTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CInventoryItemType].Facets + 0, 2) );
}

void CInventoryItemTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CInventoryItemTypeType_altova_unnamed, value);
}

CInventoryItemTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CInventoryItemTypeType_altova_unnamed);
}

int CJobStatusType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CJobStatusType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CJobStatus].Facets + 0, 6);
}

void CJobStatusType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CJobStatusType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CJobStatus].Facets + 0, 6) );
}

void CJobStatusType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CJobStatusType_altova_unnamed, value);
}

CJobStatusType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CJobStatusType_altova_unnamed);
}

int CLayoutLengthUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CLayoutLengthUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CLayoutLengthUnit].Facets + 0, 9);
}

void CLayoutLengthUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CLayoutLengthUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CLayoutLengthUnit].Facets + 0, 9) );
}

void CLayoutLengthUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CLayoutLengthUnitType_altova_unnamed, value);
}

CLayoutLengthUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CLayoutLengthUnitType_altova_unnamed);
}

int CLengthUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CLengthUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CLengthUnit].Facets + 0, 8);
}

void CLengthUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CLengthUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CLengthUnit].Facets + 0, 8) );
}

void CLengthUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CLengthUnitType_altova_unnamed, value);
}

CLengthUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CLengthUnitType_altova_unnamed);
}

int COrderStatusType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_COrderStatusType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_COrderStatus].Facets + 0, 6);
}

void COrderStatusType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_COrderStatusType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_COrderStatus].Facets + 0, 6) );
}

void COrderStatusType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_COrderStatusType_altova_unnamed, value);
}

COrderStatusType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_COrderStatusType_altova_unnamed);
}

int CPartProductionStatusType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CPartProductionStatusType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CPartProductionStatus].Facets + 0, 3);
}

void CPartProductionStatusType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CPartProductionStatusType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CPartProductionStatus].Facets + 0, 3) );
}

void CPartProductionStatusType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CPartProductionStatusType_altova_unnamed, value);
}

CPartProductionStatusType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CPartProductionStatusType_altova_unnamed);
}

int CPowerUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CPowerUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CPowerUnit].Facets + 0, 2);
}

void CPowerUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CPowerUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CPowerUnit].Facets + 0, 2) );
}

void CPowerUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CPowerUnitType_altova_unnamed, value);
}

CPowerUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CPowerUnitType_altova_unnamed);
}

int CPrecedenceRelationshipType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CPrecedenceRelationshipType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CPrecedenceRelationship].Facets + 0, 4);
}

void CPrecedenceRelationshipType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CPrecedenceRelationshipType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CPrecedenceRelationship].Facets + 0, 4) );
}

void CPrecedenceRelationshipType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CPrecedenceRelationshipType_altova_unnamed, value);
}

CPrecedenceRelationshipType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CPrecedenceRelationshipType_altova_unnamed);
}

int CProcessGroupTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CProcessGroupTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CProcessGroupType].Facets + 0, 3);
}

void CProcessGroupTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CProcessGroupTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CProcessGroupType].Facets + 0, 3) );
}

void CProcessGroupTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CProcessGroupTypeType_altova_unnamed, value);
}

CProcessGroupTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CProcessGroupTypeType_altova_unnamed);
}

int CPropertyExtensibleEntityType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CPropertyExtensibleEntityType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CPropertyExtensibleEntity].Facets + 0, 46);
}

void CPropertyExtensibleEntityType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CPropertyExtensibleEntityType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CPropertyExtensibleEntity].Facets + 0, 46) );
}

void CPropertyExtensibleEntityType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CPropertyExtensibleEntityType_altova_unnamed, value);
}

CPropertyExtensibleEntityType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CPropertyExtensibleEntityType_altova_unnamed);
}

int CPropertyTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CPropertyTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CPropertyType].Facets + 0, 3);
}

void CPropertyTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CPropertyTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CPropertyType].Facets + 0, 3) );
}

void CPropertyTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CPropertyTypeType_altova_unnamed, value);
}

CPropertyTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CPropertyTypeType_altova_unnamed);
}

int CReferenceTypeNameType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CReferenceTypeNameType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CReferenceTypeName].Facets + 0, 22);
}

void CReferenceTypeNameType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CReferenceTypeNameType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CReferenceTypeName].Facets + 0, 22) );
}

void CReferenceTypeNameType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CReferenceTypeNameType_altova_unnamed, value);
}

CReferenceTypeNameType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CReferenceTypeNameType_altova_unnamed);
}

int CResourceStatusType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CResourceStatusType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CResourceStatus].Facets + 0, 5);
}

void CResourceStatusType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CResourceStatusType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CResourceStatus].Facets + 0, 5) );
}

void CResourceStatusType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CResourceStatusType_altova_unnamed, value);
}

CResourceStatusType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CResourceStatusType_altova_unnamed);
}

int CResourceTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CResourceTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CResourceType].Facets + 0, 12);
}

void CResourceTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CResourceTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CResourceType].Facets + 0, 12) );
}

void CResourceTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CResourceTypeType_altova_unnamed, value);
}

CResourceTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CResourceTypeType_altova_unnamed);
}

int CSegmentTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CSegmentTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CSegmentType].Facets + 0, 2);
}

void CSegmentTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CSegmentTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CSegmentType].Facets + 0, 2) );
}

void CSegmentTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CSegmentTypeType_altova_unnamed, value);
}

CSegmentTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CSegmentTypeType_altova_unnamed);
}

int CShapeDescriptionTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CShapeDescriptionTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CShapeDescriptionType].Facets + 0, 4);
}

void CShapeDescriptionTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CShapeDescriptionTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CShapeDescriptionType].Facets + 0, 4) );
}

void CShapeDescriptionTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CShapeDescriptionTypeType_altova_unnamed, value);
}

CShapeDescriptionTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CShapeDescriptionTypeType_altova_unnamed);
}

int CSimpleDataTypeNameType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CSimpleDataTypeNameType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CSimpleDataTypeName].Facets + 0, 19);
}

void CSimpleDataTypeNameType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CSimpleDataTypeNameType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CSimpleDataTypeName].Facets + 0, 19) );
}

void CSimpleDataTypeNameType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CSimpleDataTypeNameType_altova_unnamed, value);
}

CSimpleDataTypeNameType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CSimpleDataTypeNameType_altova_unnamed);
}

int CSpeedUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CSpeedUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CSpeedUnit].Facets + 0, 4);
}

void CSpeedUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CSpeedUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CSpeedUnit].Facets + 0, 4) );
}

void CSpeedUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CSpeedUnitType_altova_unnamed, value);
}

CSpeedUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CSpeedUnitType_altova_unnamed);
}

int CTemperatureUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CTemperatureUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CTemperatureUnit].Facets + 0, 3);
}

void CTemperatureUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CTemperatureUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CTemperatureUnit].Facets + 0, 3) );
}

void CTemperatureUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CTemperatureUnitType_altova_unnamed, value);
}

CTemperatureUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CTemperatureUnitType_altova_unnamed);
}

int CTextAnchorLocationType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CTextAnchorLocationType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CTextAnchorLocation].Facets + 0, 2);
}

void CTextAnchorLocationType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CTextAnchorLocationType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CTextAnchorLocation].Facets + 0, 2) );
}

void CTextAnchorLocationType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CTextAnchorLocationType_altova_unnamed, value);
}

CTextAnchorLocationType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CTextAnchorLocationType_altova_unnamed);
}

int CTimeUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CTimeUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CTimeUnit].Facets + 0, 7);
}

void CTimeUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CTimeUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CTimeUnit].Facets + 0, 7) );
}

void CTimeUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CTimeUnitType_altova_unnamed, value);
}

CTimeUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CTimeUnitType_altova_unnamed);
}

int CUniqueEntityTypeType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CUniqueEntityTypeType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CUniqueEntityType].Facets + 0, 20);
}

void CUniqueEntityTypeType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CUniqueEntityTypeType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CUniqueEntityType].Facets + 0, 20) );
}

void CUniqueEntityTypeType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CUniqueEntityTypeType_altova_unnamed, value);
}

CUniqueEntityTypeType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CUniqueEntityTypeType_altova_unnamed);
}

int CUnitTypeNameType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CUnitTypeNameType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CUnitTypeName].Facets + 0, 9);
}

void CUnitTypeNameType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CUnitTypeNameType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CUnitTypeName].Facets + 0, 9) );
}

void CUnitTypeNameType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CUnitTypeNameType_altova_unnamed, value);
}

CUnitTypeNameType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CUnitTypeNameType_altova_unnamed);
}

int CVolumeUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CVolumeUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CVolumeUnit].Facets + 0, 11);
}

void CVolumeUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CVolumeUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CVolumeUnit].Facets + 0, 11) );
}

void CVolumeUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CVolumeUnitType_altova_unnamed, value);
}

CVolumeUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CVolumeUnitType_altova_unnamed);
}

int CWeightUnitType::GetEnumerationValue() {
	string_type sValue = CastAs<string_type>::Do(GetNode(), members + _altova_mi_altova_CWeightUnitType_altova_unnamed);
	return TypeBase::GetEnumerationIndex( sValue, types[_altova_ti_altova_CWeightUnit].Facets + 0, 7);
}

void CWeightUnitType::SetEnumerationValue(const int index) {
	const MemberInfo* member = members + _altova_mi_altova_CWeightUnitType_altova_unnamed;
	MsxmlTreeOperations::SetValue(GetNode(), member, TypeBase::GetEnumerationValue(index, types[_altova_ti_altova_CWeightUnit].Facets + 0, 7) );
}

void CWeightUnitType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CWeightUnitType_altova_unnamed, value);
}

CWeightUnitType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CWeightUnitType_altova_unnamed);
}

void CappinfoType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CappinfoType_altova_unnamed, value);
}

CappinfoType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CappinfoType_altova_unnamed);
}

void CdocumentationType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_altova_CdocumentationType_altova_unnamed, value);
}

CdocumentationType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_altova_CdocumentationType_altova_unnamed);
}

namespace xs
{	

void CanyType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CanyType_altova_unnamed, value);
}

CanyType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xs_altova_CanyType_altova_unnamed);
}

void CstringType::operator=(const string_type& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CstringType_altova_unnamed, value);
}

CstringType::operator string_type() {
	return CastAs<string_type >::Do(GetNode(), members + _altova_mi_xs_altova_CstringType_altova_unnamed);
}

void CbooleanType::operator=(const bool& value) { 
	MsxmlTreeOperations::SetValue(GetNode(), members + _altova_mi_xs_altova_CbooleanType_altova_unnamed, value);
}

CbooleanType::operator bool() {
	return CastAs<bool >::Do(GetNode(), members + _altova_mi_xs_altova_CbooleanType_altova_unnamed);
}

} // namespace xs


}
