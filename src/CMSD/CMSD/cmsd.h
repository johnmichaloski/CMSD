////////////////////////////////////////////////////////////////////////
//
// CMSD.h
//
// This file was generated by XMLSpy 2011r3sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////

#ifndef _INCLUDED_CMSD_H_
#define _INCLUDED_CMSD_H_

#include "Altova/xs-types.h"
#include "AltovaXML/Node.h"
#include "CMSD/CMSD-typeinfo.h"

#define CMSD_EXPORT	


namespace CMSD
{

	class TypeBase
	{
	protected:
		MSXML2::IXMLDOMNodePtr m_node;
	public:
		TypeBase(MSXML2::IXMLDOMNodePtr const& node) : m_node(node) {}
		MSXML2::IXMLDOMNodePtr GetNode() const { return m_node; }

		CMSD_EXPORT MSXML2::IXMLDOMNodePtr GetElementNth(const altova::MemberInfo* member, unsigned index);
		CMSD_EXPORT MSXML2::IXMLDOMNodePtr GetElementLast(const altova::MemberInfo* member);
		CMSD_EXPORT unsigned CountElement(const altova::MemberInfo* member);
		CMSD_EXPORT void RemoveElement(const altova::MemberInfo* member);
		CMSD_EXPORT static int GetEnumerationIndex( const string_type sValue, const unsigned enumOffset, const unsigned enumCount);
		CMSD_EXPORT static string_type GetEnumerationValue( const int index, const unsigned enumOffset, const unsigned enumCount);
	};

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	class MemberAttribute
	{
		TypeBase& m_owner;
	public:
		typedef const MemberType& argument_type;
		typedef MemberType return_type;

		MemberAttribute(TypeBase& owner) : m_owner(owner) {}
		void operator=(argument_type value);
		operator return_type();
		bool exists();
		void remove();
		int GetEnumerationValue();
		void SetEnumerationValue(const int index);
		altova::meta::Attribute info() const { return altova::meta::Attribute(members + MemberIndex); }
	};

	template <typename MemberType>
	class CastAs 
	{
	public:
		static MemberType Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember);
	};

	template <>
	inline bool CastAs<bool>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToBool(node, pMember);
	}

	template <>
	inline double CastAs<double>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToDouble(node, pMember);
	}

	template <>
	inline int CastAs<int>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToInt(node, pMember);
	}

	template <>
	inline unsigned CastAs<unsigned>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToUInt(node, pMember);
	}

	template <>
	inline __int64 CastAs<__int64>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToInt64(node, pMember);
	}

	template <>
	inline unsigned __int64 CastAs<unsigned __int64>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToUInt64(node, pMember);
	}

	template <>
	inline string_type CastAs<string_type>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToString(node, pMember);
	}

	template <>
	inline std::vector<unsigned char> CastAs<std::vector<unsigned char> >::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToBinary(node, pMember);
	}

	template <>
	inline altova::DateTime CastAs<altova::DateTime>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToDateTime(node, pMember);
	}

	template <>
	inline altova::Duration CastAs<altova::Duration>::Do(MSXML2::IXMLDOMNodePtr const& node, const altova::MemberInfo* pMember)
	{
		return MsxmlTreeOperations::CastToDuration(node, pMember);
	}

	template <typename DataType>
	class Iterator : public DataType
	{
		MsxmlTreeOperations::MemberIterator m_it;
	public:
		Iterator(const MsxmlTreeOperations::MemberIterator& it) : DataType(0), m_it(it) { if (m_it) this->m_node = *m_it; }
		bool operator++() { if (++m_it) { this->m_node = *m_it; return true; } return false; }
		operator bool() const { return m_it; }		

		DataType& operator*() { return *this; }
		DataType* operator->() { return this; }
	};

	template <typename MemberType, unsigned MemberIndex>
	class MemberElement
	{
		TypeBase& m_owner;
	public:
		MemberElement(TypeBase& owner) : m_owner(owner) {}
		MemberType operator[](unsigned index);
		MemberType first();
		MemberType last();
		MemberType append();
		bool exists();
		unsigned count();
		void remove();
		void remove(unsigned index);
		altova::meta::Element info() const { return altova::meta::Element(members + MemberIndex); }

		Iterator<MemberType> all() { return MsxmlTreeOperations::GetElements(m_owner.GetNode(), members + MemberIndex); }
	};

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	void MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::operator=(argument_type value)
	{
		MsxmlTreeOperations::SetValue(m_owner.GetNode(), members + MemberIndex, value);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::operator typename MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::return_type()
	{
		MSXML2::IXMLDOMNodePtr att = MsxmlTreeOperations::FindAttribute(m_owner.GetNode(), members + MemberIndex);
		if (!MsxmlTreeOperations::IsValid(att))
			throw altova::InvalidOperationException(_T("Cannot read value of non-existent attribute."));
		return CastAs<MemberType>::Do(att, members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	bool MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::exists()
	{
		MSXML2::IXMLDOMNodePtr att = MsxmlTreeOperations::FindAttribute(m_owner.GetNode(), members + MemberIndex);
		return MsxmlTreeOperations::IsValid(att);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	void MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::remove()
	{
		MsxmlTreeOperations::RemoveAttribute(m_owner.GetNode(), members + MemberIndex);
	}
	
	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	int MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::GetEnumerationValue() {
		MSXML2::IXMLDOMNodePtr att = MsxmlTreeOperations::FindAttribute(m_owner.GetNode(), members + MemberIndex);
		if (!MsxmlTreeOperations::IsValid(att))
			throw altova::InvalidOperationException(_T("Cannot read value of non-existent attribute."));
		string_type sValue = CastAs<string_type>::Do(att, members + MemberIndex);
		return TypeBase::GetEnumerationIndex( sValue, types[members[MemberIndex].DataType].Facets + EnumOffset, EnumCount);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	void MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::SetEnumerationValue(const int index) 
	{
		MsxmlTreeOperations::SetValue(m_owner.GetNode(), members + MemberIndex, TypeBase::GetEnumerationValue(index, types[members[MemberIndex].DataType].Facets + EnumOffset, EnumCount) );
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::operator[](unsigned index)
	{
		return m_owner.GetElementNth(members + MemberIndex, index);
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::first()
	{
		return m_owner.GetElementNth(members + MemberIndex, 0);
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::last()
	{
		return m_owner.GetElementLast(members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::append()
	{
		return MsxmlTreeOperations::AddElement(m_owner.GetNode(), members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	bool MemberElement<MemberType, MemberIndex>::exists()
	{
		return m_owner.GetElementNth(members + MemberIndex, 0) != 0;
	}

	template <typename MemberType, unsigned MemberIndex>
	unsigned MemberElement<MemberType, MemberIndex>::count()
	{
		return m_owner.CountElement(members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	void MemberElement<MemberType, MemberIndex>::remove()
	{
		m_owner.RemoveElement(members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	void MemberElement<MemberType, MemberIndex>::remove(unsigned index)
	{
		MsxmlTreeOperations::RemoveElement(m_owner.GetNode(), members + MemberIndex, index);
	}

}

namespace CMSD
{
// Namespace:  
// SchemaPrefix: 
class CAbstractEntityReference;
class CAddress;
class CAreaType;
class CAreaUnit;
class CArrayOfChoice1;
class CArrayOfChoice2;
class CArrayOfTransformationOperation;
class CAvailabilityException;
class CBaseLocation;
class CBasicShape;
class CBasicShapeType;
class CBillOfMaterials;
class CBillOfMaterialsComponent;
class CBillOfMaterialsComponentReference;
class CBillOfMaterialsReference;
class CBoundaryDefinition;
class CBreak;
class CCMSDDocument;
class CCMSDDocumentReference;
class CCMSDDocumentTest;
class CCalendar;
class CCalendarReference;
class CColorHighlight;
class CCommunicationMethod;
class CCommunicationMethodGroup;
class CConnection;
class CConnectionType;
class CContactInformation;
class CContactParty;
class CCoordinate2D;
class CCoordinate3D;
class CCoordinateSystem;
class CCostAllocationData;
class CCostCategory;
class CCostType;
class CCurrencyType;
class CDay;
class CDistribution;
class CDistributionDefinition;
class CDistributionDefinitionReference;
class CDistributionParameter;
class CDuration;
class CElapsedTimeType;
class CEmail;
class CEntity;
class CEvent;
class CGraphicDescription;
class CGraphicDescriptionType;
class CGrossDimensions;
class CHeaderSection;
class CHoliday;
class CIdentifiableEntity;
class CImageResolution;
class CInventoryItem;
class CInventoryItemClass;
class CInventoryItemClassReference;
class CInventoryItemReference;
class CInventoryItemType;
class CItemPackaging;
class CJob;
class CJobConstraint;
class CJobEffortDescription;
class CJobReference;
class CJobStatus;
class CLayout;
class CLayoutElement;
class CLayoutElementReference;
class CLayoutLengthUnit;
class CLayoutObject;
class CLengthType;
class CLengthUnit;
class CLimitedUniqueEntity;
class CLocationDefinition;
class CLotInformation;
class CMachineProgramData;
class CMaintenancePlan;
class CMaintenancePlanReference;
class CMaintenanceProcess;
class CMaintenanceProcessConstraint;
class CMaintenanceProcessGroup;
class CMaintenanceProcessReference;
class CMetadata;
class CMultiSchemaCMSDValidator;
class CNewSetup;
class CNotifyPropertyChangeBase;
class COrder;
class COrderInformationReference;
class COrderLine;
class COrderLinePartDescription;
class COrderLineServiceDescription;
class COrderStatus;
class CPart;
class CPartGroup;
class CPartProductionStatus;
class CPartReference;
class CPartType;
class CPartTypeReference;
class CPerMeasuredAmountPackaging;
class CPerPiecePackaging;
class CPhone;
class CPlacement;
class CPowerType;
class CPowerUnit;
class CPrecedenceConstraint;
class CPrecedenceRelationship;
class CProcess;
class CProcessConstraint;
class CProcessGroup;
class CProcessGroupType;
class CProcessPlan;
class CProcessPlanReference;
class CProcessReference;
class CProperty;
class CPropertyCardinality;
class CPropertyDataTypeDescription;
class CPropertyDescription;
class CPropertyDescriptionReference;
class CPropertyExtensibleEntity;
class CPropertyType;
class CQuantityType;
class CReferenceMaterial;
class CReferenceMaterialReference;
class CReferenceProperty;
class CReferenceTypeName;
class CReferencingEntity;
class CRelaxNGCMSDValidator;
class CRelaxNGCMSDValidatorWithCache;
class CRequiredApplication;
class CResource;
class CResourceClass;
class CResourceClassReference;
class CResourceGroupInformation;
class CResourceGroupMember;
class CResourceReference;
class CResourceStatus;
class CResourceType;
class CResourcesRequired;
class CRotation;
class CScaling;
class CSchedule;
class CScheduleInformationReference;
class CScheduleItem;
class CScheduleItemEffortDescription;
class CSegmentShape;
class CSegmentType;
class CSetupChangeoverDefinition;
class CSetupChangeoverReference;
class CSetupDefinition;
class CSetupDefinitionReference;
class CShapeDescription;
class CShapeDescriptionType;
class CShapeLabelDefinition;
class CShift;
class CShiftSchedule;
class CSimpleDataTypeName;
class CSimpleProperty;
class CSkillDefinition;
class CSkillLevel;
class CSkillReference;
class CSpatialDimension;
class CSpeedType;
class CSpeedUnit;
class CStochasticProperty;
class CTemperatureType;
class CTemperatureUnit;
class CTextAnchorLocation;
class CTextualAnnotation;
class CTimeUnit;
class CTransformationOperation;
class CTranslation;
class CUniqueEntity;
class CUniqueEntityType;
class CUnitDefaults;
class CUnitTypeName;
class CValidationResult;
class CVariableCostData;
class CVolumeType;
class CVolumeUnit;
class CWeightType;
class CWeightUnit;
class CXSDCMSDValidator;
class CCMSD;
class CAreaUnitType;
class CBaseLocationType;
class CBasicShapeTypeType;
class CCMSDDecimalType;
class CschemaType;
class CCardinalitySpecificationType;
class CConnectionTypeType;
class CCoordinateSystemType;
class CCostCategoryType;
class CCostTypeType;
class CDataSectionType;
class CDateType;
class CDayType;
class CGraphicDescriptionTypeType;
class CIdentifierType;
class CIntegerType;
class CInventoryItemTypeType;
class CJobStatusType;
class CLayoutLengthUnitType;
class CLengthUnitType;
class CNonNegativeIntegerType;
class COrderStatusType;
class CPartProductionStatusType;
class CPowerUnitType;
class CPrecedenceRelationshipType;
class CProcessGroupTypeType;
class CPropertyExtensibleEntityType;
class CPropertyTypeType;
class CReferenceTypeNameType;
class CResourceStatusType;
class CResourceTypeType;
class CSegmentTypeType;
class CShapeDescriptionTypeType;
class CSimpleDataTypeNameType;
class CSpeedUnitType;
class CTemperatureUnitType;
class CTextAnchorLocationType;
class CTimeType;
class CTimeUnitType;
class CTimestampType;
class CURIType;
class CUniqueEntityTypeType;
class CUnitTypeNameType;
class CVolumeUnitType;
class CWeightUnitType;
class CannotationType;
class CappinfoType;
class CdocumentationType;
class CanyType;
class CcomplexContentType;
class CfieldType;
class CxpathType;
class CimportType;
class CincludeType;
class CkeyrefType;
class ClistType;
class CnotationType;
class CpatternType;
class CredefineType;
class CrestrictionType;
class CtotalDigitsType;
class CwhiteSpaceType;
class CsimpleContentType;
class CunionType;
class CmemberTypesType;
class CValueType;
class CExceptionDateType;
class CHeightType;
class CWidthType;
class CDepthType;
class CRadiusType;
class CAngleType;
class CQuantityType2;
class CWidthType2;
class CDepthType2;
class CHeightType2;
class CStartTimeType;
class CDataSectionType2;
class CDocumentLocationType;
class CEffectiveStartDateType;
class CEffectiveEndDateType;
class CAlphaValueType;
class CXType;
class CYType;
class CZType;
class CValueType2;
class CValueType3;
class CValueType4;
class CValueType5;
class CAddressType;
class CTimestampType2;
class CFileNameType;
class CWidthType3;
class CDepthType3;
class CHeightType3;
class CCreationTimeType;
class CDateType2;
class CPixelsPerUnitType;
class CQuantityOnHandType;
class CUpdateTimeType;
class CLagPercentageType;
class CLagPartsCompleteType;
class CUpdateTimeType2;
class CDueDateType;
class CReleaseDateType;
class CStartTimeType2;
class CEndTimeType;
class CValueType6;
class CMachineProgramLocationType;
class CMaintenanceProcessType;
class CRepetitionCountType;
class CUpdateTimeType3;
class CDueDateType2;
class CUpdateTimeType4;
class CItemQuantityType;
class CPartQuantityType;
class CMeasuredAmountType;
class CPiecesPerPackageType;
class CValueType7;
class CRepetitionCountType2;
class CMinimumType;
class CMaximumType;
class CValueType8;
class COnlineLocationType;
class CMinimumNumberType;
class CMaximumNumberType;
class CXDegreeType;
class CYDegreeType;
class CZDegreeType;
class CXPercentType;
class CYPercentType;
class CZPercentType;
class CCreationTimeType2;
class CStartTimeType3;
class CEndTimeType2;
class CUpdateTimeType5;
class CStartTimeType4;
class CEndTimeType3;
class CWidthType4;
class CStartHeightType;
class CEndHeightType;
class CTrackWidthType;
class CRotationAngleType;
class CStartTimeType5;
class CEffectiveStartDateType2;
class CEffectiveEndDateType2;
class CValueType9;
class CValueType10;
class CTextAngleType;
class CXOffsetType;
class CYOffsetType;
class CZOffsetType;
class CCostRatePerUnitType;
class CCostUnitQuantityType;
class CValueType11;
class CValueType12;
class ClangType;
class ClangType2;
class CvalueType13;
// Namespace: http://www.w3.org/2001/XMLSchema 
// SchemaPrefix: xs

namespace xs
{	
class CENTITIES;
class CENTITY;
class CID;
class CIDREF;
class CIDREFS;
class CNCName;
class CNMTOKEN;
class CNMTOKENS;
class CNOTATION;
class CName;
class CQName;
class Call;
class CallNNI;
class Cannotated;
class CanySimpleType;
class CanyType;
class CanyURI;
class Cattribute;
class CattributeGroup;
class CattributeGroupRef;
class Cbase64Binary;
class CblockSet;
class Cboolean;
class Cbyte;
class CcomplexRestrictionType;
class CcomplexType;
class Cdate;
class CdateTime;
class Cdecimal;
class CderivationControl;
class CderivationSet;
class Cdouble;
class Cduration;
class Celement;
class CexplicitGroup;
class CextensionType;
class Cfacet;
class Cfloat;
class CformChoice;
class CfullDerivationSet;
class CgDay;
class CgMonth;
class CgMonthDay;
class CgYear;
class CgYearMonth;
class Cgroup;
class CgroupRef;
class ChexBinary;
class Cint;
class Cinteger;
class Ckeybase;
class Clanguage;
class ClocalComplexType;
class ClocalElement;
class ClocalSimpleType;
class Clong;
class CnamedAttributeGroup;
class CnamedGroup;
class CnamespaceList;
class CnarrowMaxMin;
class CnegativeInteger;
class CnoFixedFacet;
class CnonNegativeInteger;
class CnonPositiveInteger;
class CnormalizedString;
class CnumFacet;
class CopenAttrs;
class CpositiveInteger;
class Cpublic;
class CrealGroup;
class CreducedDerivationControl;
class CrestrictionType;
class Cshort;
class CsimpleDerivationSet;
class CsimpleExplicitGroup;
class CsimpleExtensionType;
class CsimpleRestrictionType;
class CsimpleType;
class Cstring;
class Ctime;
class Ctoken;
class CtopLevelAttribute;
class CtopLevelComplexType;
class CtopLevelElement;
class CtopLevelSimpleType;
class CtypeDerivationControl;
class CunsignedByte;
class CunsignedInt;
class CunsignedLong;
class CunsignedShort;
class Cwildcard;
class CprocessContentsType;
class CselectorType;
class CstringType;
class CbooleanType;
class CminOccursType;
class CmaxOccursType;
class CallNNIType;
class CuseType;
class CblockSetType;
class CblockSetType2;
class CblockSetType3;
class CderivationSetType;
class CderivationSetType2;
class CfullDerivationSetType;
class CfullDerivationSetType2;
class CallType;
class CnamespaceListType;
class CnamespaceListType2;
class CnamespaceListType3;
class CnamespaceListType4;
class CminOccursType2;
class CmaxOccursType2;
class CsimpleDerivationSetType;
class CsimpleDerivationSetType2;
class CsimpleDerivationSetType3;
class CxpathType;

} // namespace xs


}

// include individual types

// namespace ""
#include "type_.CAbstractEntityReference.h"
#include "type_.CAddress.h"
#include "type_.CAreaType.h"
#include "type_.CAreaUnit.h"
#include "type_.CArrayOfChoice1.h"
#include "type_.CArrayOfChoice2.h"
#include "type_.CArrayOfTransformationOperation.h"
#include "type_.CAvailabilityException.h"
#include "type_.CBaseLocation.h"
#include "type_.CBasicShape.h"
#include "type_.CBasicShapeType.h"
#include "type_.CBillOfMaterials.h"
#include "type_.CBillOfMaterialsComponent.h"
#include "type_.CBillOfMaterialsComponentReference.h"
#include "type_.CBillOfMaterialsReference.h"
#include "type_.CBoundaryDefinition.h"
#include "type_.CBreak.h"
#include "type_.CCMSDDocument.h"
#include "type_.CCMSDDocumentReference.h"
#include "type_.CCMSDDocumentTest.h"
#include "type_.CCalendar.h"
#include "type_.CCalendarReference.h"
#include "type_.CColorHighlight.h"
#include "type_.CCommunicationMethod.h"
#include "type_.CCommunicationMethodGroup.h"
#include "type_.CConnection.h"
#include "type_.CConnectionType.h"
#include "type_.CContactInformation.h"
#include "type_.CContactParty.h"
#include "type_.CCoordinate2D.h"
#include "type_.CCoordinate3D.h"
#include "type_.CCoordinateSystem.h"
#include "type_.CCostAllocationData.h"
#include "type_.CCostCategory.h"
#include "type_.CCostType.h"
#include "type_.CCurrencyType.h"
#include "type_.CDay.h"
#include "type_.CDistribution.h"
#include "type_.CDistributionDefinition.h"
#include "type_.CDistributionDefinitionReference.h"
#include "type_.CDistributionParameter.h"
#include "type_.CDuration.h"
#include "type_.CElapsedTimeType.h"
#include "type_.CEmail.h"
#include "type_.CEntity.h"
#include "type_.CEvent.h"
#include "type_.CGraphicDescription.h"
#include "type_.CGraphicDescriptionType.h"
#include "type_.CGrossDimensions.h"
#include "type_.CHeaderSection.h"
#include "type_.CHoliday.h"
#include "type_.CIdentifiableEntity.h"
#include "type_.CImageResolution.h"
#include "type_.CInventoryItem.h"
#include "type_.CInventoryItemClass.h"
#include "type_.CInventoryItemClassReference.h"
#include "type_.CInventoryItemReference.h"
#include "type_.CInventoryItemType.h"
#include "type_.CItemPackaging.h"
#include "type_.CJob.h"
#include "type_.CJobConstraint.h"
#include "type_.CJobEffortDescription.h"
#include "type_.CJobReference.h"
#include "type_.CJobStatus.h"
#include "type_.CLayout.h"
#include "type_.CLayoutElement.h"
#include "type_.CLayoutElementReference.h"
#include "type_.CLayoutLengthUnit.h"
#include "type_.CLayoutObject.h"
#include "type_.CLengthType.h"
#include "type_.CLengthUnit.h"
#include "type_.CLimitedUniqueEntity.h"
#include "type_.CLocationDefinition.h"
#include "type_.CLotInformation.h"
#include "type_.CMachineProgramData.h"
#include "type_.CMaintenancePlan.h"
#include "type_.CMaintenancePlanReference.h"
#include "type_.CMaintenanceProcess.h"
#include "type_.CMaintenanceProcessConstraint.h"
#include "type_.CMaintenanceProcessGroup.h"
#include "type_.CMaintenanceProcessReference.h"
#include "type_.CMetadata.h"
#include "type_.CMultiSchemaCMSDValidator.h"
#include "type_.CNewSetup.h"
#include "type_.CNotifyPropertyChangeBase.h"
#include "type_.COrder.h"
#include "type_.COrderInformationReference.h"
#include "type_.COrderLine.h"
#include "type_.COrderLinePartDescription.h"
#include "type_.COrderLineServiceDescription.h"
#include "type_.COrderStatus.h"
#include "type_.CPart.h"
#include "type_.CPartGroup.h"
#include "type_.CPartProductionStatus.h"
#include "type_.CPartReference.h"
#include "type_.CPartType.h"
#include "type_.CPartTypeReference.h"
#include "type_.CPerMeasuredAmountPackaging.h"
#include "type_.CPerPiecePackaging.h"
#include "type_.CPhone.h"
#include "type_.CPlacement.h"
#include "type_.CPowerType.h"
#include "type_.CPowerUnit.h"
#include "type_.CPrecedenceConstraint.h"
#include "type_.CPrecedenceRelationship.h"
#include "type_.CProcess.h"
#include "type_.CProcessConstraint.h"
#include "type_.CProcessGroup.h"
#include "type_.CProcessGroupType.h"
#include "type_.CProcessPlan.h"
#include "type_.CProcessPlanReference.h"
#include "type_.CProcessReference.h"
#include "type_.CProperty.h"
#include "type_.CPropertyCardinality.h"
#include "type_.CPropertyDataTypeDescription.h"
#include "type_.CPropertyDescription.h"
#include "type_.CPropertyDescriptionReference.h"
#include "type_.CPropertyExtensibleEntity.h"
#include "type_.CPropertyType.h"
#include "type_.CQuantityType.h"
#include "type_.CReferenceMaterial.h"
#include "type_.CReferenceMaterialReference.h"
#include "type_.CReferenceProperty.h"
#include "type_.CReferenceTypeName.h"
#include "type_.CReferencingEntity.h"
#include "type_.CRelaxNGCMSDValidator.h"
#include "type_.CRelaxNGCMSDValidatorWithCache.h"
#include "type_.CRequiredApplication.h"
#include "type_.CResource.h"
#include "type_.CResourceClass.h"
#include "type_.CResourceClassReference.h"
#include "type_.CResourceGroupInformation.h"
#include "type_.CResourceGroupMember.h"
#include "type_.CResourceReference.h"
#include "type_.CResourceStatus.h"
#include "type_.CResourceType.h"
#include "type_.CResourcesRequired.h"
#include "type_.CRotation.h"
#include "type_.CScaling.h"
#include "type_.CSchedule.h"
#include "type_.CScheduleInformationReference.h"
#include "type_.CScheduleItem.h"
#include "type_.CScheduleItemEffortDescription.h"
#include "type_.CSegmentShape.h"
#include "type_.CSegmentType.h"
#include "type_.CSetupChangeoverDefinition.h"
#include "type_.CSetupChangeoverReference.h"
#include "type_.CSetupDefinition.h"
#include "type_.CSetupDefinitionReference.h"
#include "type_.CShapeDescription.h"
#include "type_.CShapeDescriptionType.h"
#include "type_.CShapeLabelDefinition.h"
#include "type_.CShift.h"
#include "type_.CShiftSchedule.h"
#include "type_.CSimpleDataTypeName.h"
#include "type_.CSimpleProperty.h"
#include "type_.CSkillDefinition.h"
#include "type_.CSkillLevel.h"
#include "type_.CSkillReference.h"
#include "type_.CSpatialDimension.h"
#include "type_.CSpeedType.h"
#include "type_.CSpeedUnit.h"
#include "type_.CStochasticProperty.h"
#include "type_.CTemperatureType.h"
#include "type_.CTemperatureUnit.h"
#include "type_.CTextAnchorLocation.h"
#include "type_.CTextualAnnotation.h"
#include "type_.CTimeUnit.h"
#include "type_.CTransformationOperation.h"
#include "type_.CTranslation.h"
#include "type_.CUniqueEntity.h"
#include "type_.CUniqueEntityType.h"
#include "type_.CUnitDefaults.h"
#include "type_.CUnitTypeName.h"
#include "type_.CValidationResult.h"
#include "type_.CVariableCostData.h"
#include "type_.CVolumeType.h"
#include "type_.CVolumeUnit.h"
#include "type_.CWeightType.h"
#include "type_.CWeightUnit.h"
#include "type_.CXSDCMSDValidator.h"
#include "type_.CCMSD.h"
#include "type_.CAreaUnitType.h"
#include "type_.CBaseLocationType.h"
#include "type_.CBasicShapeTypeType.h"
#include "type_.CCMSDDecimalType.h"
#include "type_.CschemaType.h"
#include "type_.CCardinalitySpecificationType.h"
#include "type_.CConnectionTypeType.h"
#include "type_.CCoordinateSystemType.h"
#include "type_.CCostCategoryType.h"
#include "type_.CCostTypeType.h"
#include "type_.CDataSectionType.h"
#include "type_.CDateType.h"
#include "type_.CDayType.h"
#include "type_.CGraphicDescriptionTypeType.h"
#include "type_.CIdentifierType.h"
#include "type_.CIntegerType.h"
#include "type_.CInventoryItemTypeType.h"
#include "type_.CJobStatusType.h"
#include "type_.CLayoutLengthUnitType.h"
#include "type_.CLengthUnitType.h"
#include "type_.CNonNegativeIntegerType.h"
#include "type_.COrderStatusType.h"
#include "type_.CPartProductionStatusType.h"
#include "type_.CPowerUnitType.h"
#include "type_.CPrecedenceRelationshipType.h"
#include "type_.CProcessGroupTypeType.h"
#include "type_.CPropertyExtensibleEntityType.h"
#include "type_.CPropertyTypeType.h"
#include "type_.CReferenceTypeNameType.h"
#include "type_.CResourceStatusType.h"
#include "type_.CResourceTypeType.h"
#include "type_.CSegmentTypeType.h"
#include "type_.CShapeDescriptionTypeType.h"
#include "type_.CSimpleDataTypeNameType.h"
#include "type_.CSpeedUnitType.h"
#include "type_.CTemperatureUnitType.h"
#include "type_.CTextAnchorLocationType.h"
#include "type_.CTimeType.h"
#include "type_.CTimeUnitType.h"
#include "type_.CTimestampType.h"
#include "type_.CURIType.h"
#include "type_.CUniqueEntityTypeType.h"
#include "type_.CUnitTypeNameType.h"
#include "type_.CVolumeUnitType.h"
#include "type_.CWeightUnitType.h"
#include "type_.CannotationType.h"
#include "type_.CappinfoType.h"
#include "type_.CdocumentationType.h"
#include "type_.CanyType.h"
#include "type_.CcomplexContentType.h"
#include "type_.CfieldType.h"
#include "type_.CxpathType.h"
#include "type_.CimportType.h"
#include "type_.CincludeType.h"
#include "type_.CkeyrefType.h"
#include "type_.ClistType.h"
#include "type_.CnotationType.h"
#include "type_.CpatternType.h"
#include "type_.CredefineType.h"
#include "type_.CrestrictionType.h"
#include "type_.CtotalDigitsType.h"
#include "type_.CwhiteSpaceType.h"
#include "type_.CsimpleContentType.h"
#include "type_.CunionType.h"
#include "type_.CmemberTypesType.h"
#include "type_.CValueType.h"
#include "type_.CExceptionDateType.h"
#include "type_.CHeightType.h"
#include "type_.CWidthType.h"
#include "type_.CDepthType.h"
#include "type_.CRadiusType.h"
#include "type_.CAngleType.h"
#include "type_.CQuantityType2.h"
#include "type_.CWidthType2.h"
#include "type_.CDepthType2.h"
#include "type_.CHeightType2.h"
#include "type_.CStartTimeType.h"
#include "type_.CDataSectionType2.h"
#include "type_.CDocumentLocationType.h"
#include "type_.CEffectiveStartDateType.h"
#include "type_.CEffectiveEndDateType.h"
#include "type_.CAlphaValueType.h"
#include "type_.CXType.h"
#include "type_.CYType.h"
#include "type_.CZType.h"
#include "type_.CValueType2.h"
#include "type_.CValueType3.h"
#include "type_.CValueType4.h"
#include "type_.CValueType5.h"
#include "type_.CAddressType.h"
#include "type_.CTimestampType2.h"
#include "type_.CFileNameType.h"
#include "type_.CWidthType3.h"
#include "type_.CDepthType3.h"
#include "type_.CHeightType3.h"
#include "type_.CCreationTimeType.h"
#include "type_.CDateType2.h"
#include "type_.CPixelsPerUnitType.h"
#include "type_.CQuantityOnHandType.h"
#include "type_.CUpdateTimeType.h"
#include "type_.CLagPercentageType.h"
#include "type_.CLagPartsCompleteType.h"
#include "type_.CUpdateTimeType2.h"
#include "type_.CDueDateType.h"
#include "type_.CReleaseDateType.h"
#include "type_.CStartTimeType2.h"
#include "type_.CEndTimeType.h"
#include "type_.CValueType6.h"
#include "type_.CMachineProgramLocationType.h"
#include "type_.CMaintenanceProcessType.h"
#include "type_.CRepetitionCountType.h"
#include "type_.CUpdateTimeType3.h"
#include "type_.CDueDateType2.h"
#include "type_.CUpdateTimeType4.h"
#include "type_.CItemQuantityType.h"
#include "type_.CPartQuantityType.h"
#include "type_.CMeasuredAmountType.h"
#include "type_.CPiecesPerPackageType.h"
#include "type_.CValueType7.h"
#include "type_.CRepetitionCountType2.h"
#include "type_.CMinimumType.h"
#include "type_.CMaximumType.h"
#include "type_.CValueType8.h"
#include "type_.COnlineLocationType.h"
#include "type_.CMinimumNumberType.h"
#include "type_.CMaximumNumberType.h"
#include "type_.CXDegreeType.h"
#include "type_.CYDegreeType.h"
#include "type_.CZDegreeType.h"
#include "type_.CXPercentType.h"
#include "type_.CYPercentType.h"
#include "type_.CZPercentType.h"
#include "type_.CCreationTimeType2.h"
#include "type_.CStartTimeType3.h"
#include "type_.CEndTimeType2.h"
#include "type_.CUpdateTimeType5.h"
#include "type_.CStartTimeType4.h"
#include "type_.CEndTimeType3.h"
#include "type_.CWidthType4.h"
#include "type_.CStartHeightType.h"
#include "type_.CEndHeightType.h"
#include "type_.CTrackWidthType.h"
#include "type_.CRotationAngleType.h"
#include "type_.CStartTimeType5.h"
#include "type_.CEffectiveStartDateType2.h"
#include "type_.CEffectiveEndDateType2.h"
#include "type_.CValueType9.h"
#include "type_.CValueType10.h"
#include "type_.CTextAngleType.h"
#include "type_.CXOffsetType.h"
#include "type_.CYOffsetType.h"
#include "type_.CZOffsetType.h"
#include "type_.CCostRatePerUnitType.h"
#include "type_.CCostUnitQuantityType.h"
#include "type_.CValueType11.h"
#include "type_.CValueType12.h"
#include "type_.ClangType.h"
#include "type_.ClangType2.h"
#include "type_.CvalueType13.h"

// namespace "http://www.w3.org/2001/XMLSchema"
#include "type_xs.CENTITIES.h"
#include "type_xs.CENTITY.h"
#include "type_xs.CID.h"
#include "type_xs.CIDREF.h"
#include "type_xs.CIDREFS.h"
#include "type_xs.CNCName.h"
#include "type_xs.CNMTOKEN.h"
#include "type_xs.CNMTOKENS.h"
#include "type_xs.CNOTATION.h"
#include "type_xs.CName.h"
#include "type_xs.CQName.h"
#include "type_xs.Call.h"
#include "type_xs.CallNNI.h"
#include "type_xs.Cannotated.h"
#include "type_xs.CanySimpleType.h"
#include "type_xs.CanyType.h"
#include "type_xs.CanyURI.h"
#include "type_xs.Cattribute.h"
#include "type_xs.CattributeGroup.h"
#include "type_xs.CattributeGroupRef.h"
#include "type_xs.Cbase64Binary.h"
#include "type_xs.CblockSet.h"
#include "type_xs.Cboolean.h"
#include "type_xs.Cbyte.h"
#include "type_xs.CcomplexRestrictionType.h"
#include "type_xs.CcomplexType.h"
#include "type_xs.Cdate.h"
#include "type_xs.CdateTime.h"
#include "type_xs.Cdecimal.h"
#include "type_xs.CderivationControl.h"
#include "type_xs.CderivationSet.h"
#include "type_xs.Cdouble.h"
#include "type_xs.Cduration.h"
#include "type_xs.Celement.h"
#include "type_xs.CexplicitGroup.h"
#include "type_xs.CextensionType.h"
#include "type_xs.Cfacet.h"
#include "type_xs.Cfloat.h"
#include "type_xs.CformChoice.h"
#include "type_xs.CfullDerivationSet.h"
#include "type_xs.CgDay.h"
#include "type_xs.CgMonth.h"
#include "type_xs.CgMonthDay.h"
#include "type_xs.CgYear.h"
#include "type_xs.CgYearMonth.h"
#include "type_xs.Cgroup.h"
#include "type_xs.CgroupRef.h"
#include "type_xs.ChexBinary.h"
#include "type_xs.Cint.h"
#include "type_xs.Cinteger.h"
#include "type_xs.Ckeybase.h"
#include "type_xs.Clanguage.h"
#include "type_xs.ClocalComplexType.h"
#include "type_xs.ClocalElement.h"
#include "type_xs.ClocalSimpleType.h"
#include "type_xs.Clong.h"
#include "type_xs.CnamedAttributeGroup.h"
#include "type_xs.CnamedGroup.h"
#include "type_xs.CnamespaceList.h"
#include "type_xs.CnarrowMaxMin.h"
#include "type_xs.CnegativeInteger.h"
#include "type_xs.CnoFixedFacet.h"
#include "type_xs.CnonNegativeInteger.h"
#include "type_xs.CnonPositiveInteger.h"
#include "type_xs.CnormalizedString.h"
#include "type_xs.CnumFacet.h"
#include "type_xs.CopenAttrs.h"
#include "type_xs.CpositiveInteger.h"
#include "type_xs.Cpublic.h"
#include "type_xs.CrealGroup.h"
#include "type_xs.CreducedDerivationControl.h"
#include "type_xs.CrestrictionType.h"
#include "type_xs.Cshort.h"
#include "type_xs.CsimpleDerivationSet.h"
#include "type_xs.CsimpleExplicitGroup.h"
#include "type_xs.CsimpleExtensionType.h"
#include "type_xs.CsimpleRestrictionType.h"
#include "type_xs.CsimpleType.h"
#include "type_xs.Cstring.h"
#include "type_xs.Ctime.h"
#include "type_xs.Ctoken.h"
#include "type_xs.CtopLevelAttribute.h"
#include "type_xs.CtopLevelComplexType.h"
#include "type_xs.CtopLevelElement.h"
#include "type_xs.CtopLevelSimpleType.h"
#include "type_xs.CtypeDerivationControl.h"
#include "type_xs.CunsignedByte.h"
#include "type_xs.CunsignedInt.h"
#include "type_xs.CunsignedLong.h"
#include "type_xs.CunsignedShort.h"
#include "type_xs.Cwildcard.h"
#include "type_xs.CprocessContentsType.h"
#include "type_xs.CselectorType.h"
#include "type_xs.CstringType.h"
#include "type_xs.CbooleanType.h"
#include "type_xs.CminOccursType.h"
#include "type_xs.CmaxOccursType.h"
#include "type_xs.CallNNIType.h"
#include "type_xs.CuseType.h"
#include "type_xs.CblockSetType.h"
#include "type_xs.CblockSetType2.h"
#include "type_xs.CblockSetType3.h"
#include "type_xs.CderivationSetType.h"
#include "type_xs.CderivationSetType2.h"
#include "type_xs.CfullDerivationSetType.h"
#include "type_xs.CfullDerivationSetType2.h"
#include "type_xs.CallType.h"
#include "type_xs.CnamespaceListType.h"
#include "type_xs.CnamespaceListType2.h"
#include "type_xs.CnamespaceListType3.h"
#include "type_xs.CnamespaceListType4.h"
#include "type_xs.CminOccursType2.h"
#include "type_xs.CmaxOccursType2.h"
#include "type_xs.CsimpleDerivationSetType.h"
#include "type_xs.CsimpleDerivationSetType2.h"
#include "type_xs.CsimpleDerivationSetType3.h"
#include "type_xs.CxpathType.h"

// finished

#endif //_INCLUDED_CMSD_H_
